let pjson = {
	"pJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "false",
					"T": "prop"
				}
			},
			"E": {
				"setData": {
					"H": "debugger;\r\ndeclare let data;\r\nlet tmpItemList = [];\r\ncomponents.dt_assuranceList.items = [];\r\n\r\nlet assuranceList = data.filter(\r\n    contact => contact.contactRole?.description === \"Sigortalı\"\r\n);\r\n\r\nassuranceList.forEach((key) => {\r\n    let tmpItem: any = {\r\n        name: key.firstName + ' ' + key.lastName,\r\n        legalType: key.legalType,\r\n    }\r\n    tmpItemList.push(tmpItem);\r\n});\r\n\r\ncomponents.dt_assuranceList.items = tmpItemList;",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"savePolicyInfo": {
					"H": "debugger;\r\n(components.as_loadingCustomComp).open();\r\nlet createProposalResp = quick.store.get('$createProposalResp');\r\nlet proposalNo = createProposalResp?.proposalNumber; //701488453,\r\nlet revisionNo = createProposalResp?.revisionNumber; //0,\r\n\r\nlet getPolicyInfo = quick.store.get('$policyInfo');\r\nlet getAssuranceInfo = quick.store.get('$getAssuranceCompInfo');\r\nlet getBranchCode = getAssuranceInfo.branchCode;\r\nlet getAssuranceOwnerInfo = quick.store.get('$assuranceOwnerInfoSet');\r\nlet customerInfoType = getAssuranceOwnerInfo?.customerInfoType;\r\nlet customerInfoType2 = quick.store.get(\"$saveInsuredContactResp\")?.customerInfoType;\r\nlet insuranceCustomerNumber = quick.store.get(\"$saveInsuranceResp\")?.externalContactNumber;\r\nlet insuredCustomerNumber = quick.store.get(\"$saveInsuredContactResp\")?.externalContactNumber;\r\nlet customerInfoId = quick.store.get(\"$saveInsuranceResp\").customerInfoId;\r\nlet customerInsuredInfoId = quick.store.get(\"$saveInsuredContactResp\")?.customerInfoId;\r\nlet packagePKG3 = quick.store.get('$packageDetailPKG3');\r\nlet externalContactNumber;\r\nif (insuredCustomerNumber) {\r\n  externalContactNumber = insuredCustomerNumber;\r\n}\r\nelse {\r\n  externalContactNumber = insuranceCustomerNumber;\r\n}\r\n\r\nlet reqData = {\r\n  revisionNo: revisionNo, //1,\r\n  proposalNo: proposalNo, //701488453\r\n  policyType: packagePKG3?.type, //\"PACC\",\r\n  insuranceType: packagePKG3?.type, //\"PACC\",\r\n  insurancePackageId: packagePKG3?.packageId,\r\n  branchCode: getBranchCode,\r\n  ...getPolicyInfo,\r\n  \"netPremium\": {\r\n    \"amount\": {\r\n      \"amount\": createProposalResp?.policySummary?.netPremiumAmount?.amountTL?.amount,\r\n      \"currency\": \"TL\"\r\n    },\r\n    \"exchangeRate\": null\r\n  },\r\n  \"grossPremium\": {\r\n    \"amount\": {\r\n      \"amount\": createProposalResp?.policySummary?.grossPremiumAmount?.amountTL?.amount,\r\n      \"currency\": \"TL\"\r\n    },\r\n    \"exchangeRate\": null\r\n  },\r\n  \"currencyCode\": {\r\n    \"referenceDataType\": {\r\n      \"code\": \"TL\"\r\n    }\r\n  },\r\n  ownerUserInfo: {\r\n      userId: (<any>quick.containerServices).getUserContext().userid\r\n  },\r\n  isPolicyRenew: false,\r\n  insurerInfo: {\r\n    customerInfoType: customerInfoType,\r\n    \"customerInfoId\": customerInfoId,\r\n    \"insuranceCustomerNumber\": insuranceCustomerNumber,\r\n    contactRole: \"6\"\r\n  },\r\n  ...(insuredCustomerNumber ? {\r\n    insuredInfo: {\r\n      customerInfoType: customerInfoType2,\r\n      customerInfoId: customerInsuredInfoId,\r\n      insuranceCustomerNumber: insuredCustomerNumber,\r\n      contactRole: \"1\"\r\n    }\r\n  } : {\r\n    insuredInfo: {\r\n      customerInfoType: customerInfoType,\r\n      \"customerInfoId\": customerInfoId,\r\n      \"insuranceCustomerNumber\": insuranceCustomerNumber,\r\n      contactRole: \"1\"\r\n    }\r\n  }),\r\n  channelCode: packagePKG3?.asChannelCode,\r\n  externalContactNumer: insuranceCustomerNumber,\r\n}\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nlet serviceRequest: IRequest = {\r\n  url: '/api/bnkasaspolicy/save/policy',\r\n  http: 'POST',\r\n  data: reqData,\r\n  onFail: 'empty',\r\n  onSuccess: 'empty',\r\n  responseField: 'empty',\r\n  blockRender: false,\r\n  headers: { \"employeeId\": quick.store.get('$redirector') }\r\n}\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n  (components.as_loadingCustomComp).close();\r\n  if (resp?.data) {\r\n    quick.store.set('$bankRefId', resp.data);\r\n    quick.Quick.go(\"/static/ui-bankasASPACC/atworkFarmerProtectionPages/compAtworkFarmerProtectionPremiumCollection.qjson\"); //Prim tahsilat ekranı\r\n  }\r\n})\r\n  .catch((err) => {\r\n    (components.as_loadingCustomComp).close();\r\n    let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n    (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n\r\n  });",
					"C": true,
					"HL": "TS"
				},
				"sendPolicyEmail": {
					"H": "debugger;\r\ncomponents.as_loadingCustomComp.open();\r\n//Poliçeyi E-Posta İle Gönder\r\nlet requestData = {\r\n    \"policyNo\": 1679936125,\r\n    \"renewalNo\": quick.store.get('$renewalNumber'),\r\n    \"sendPolicyPDF\": 1,\r\n    \"sendInformationFormPDF\": 0,\r\n    \"sendGeneralConditionsPDF\": 0,\r\n    \"email\": quick.store.get('$customerInfo').communicationInfo.emailAddresses[0].address,\r\n    \"policyDescription\": quick.store.get('$policyType')\r\n}\r\nquick.MM.trigger('setConsumerAndScreenInfo'); //consumerCode ve screenName setlendi.\r\nlet serviceRequest: IRequest = {\r\n    url: '/api/wrapperclient/sendPolicyEmail',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n}\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n    components.as_loadingCustomComp.close();\r\n    if (resp?.data?.emailSent) {\r\n        let successMessage = (quick.store.get('$customerInfo').communicationInfo.emailAddresses[0].address) + ' e-posta adresine gönderim sağlanmıştır.'; //(customerContext?.customerEmail ?? '')\r\n        (<any>components.as_alertSuccess).setLabelText({ labelData: { name: 'lbl_400_1', text: successMessage } });\r\n        components.as_alertSuccess.open();\r\n    }\r\n})\r\n    .catch((err) => {\r\n        quick.EM.trace('hata aldı')\r\n        components.as_loadingCustomComp.close();\r\n        let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n        (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n        components.as_alertCustomComp.open();\r\n    });",
					"C": true,
					"HL": "TS"
				},
				"setConsumerAndScreenInfo": {
					"H": "// debugger;\r\nlet consumer = 'TANE.BANKASUR';\r\nlet screen = 'PACC';\r\nquick.store.set('$customConsumerCode', consumer);\r\nquick.store.set('$customScreenName', screen);",
					"C": true,
					"HL": "TS"
				},
				"printDocument": {
					"H": "debugger;\r\nlet getAssuranceOwnerInfo = quick.store.get('$getAssuranceCompInfo');\r\nlet branchCode = getAssuranceOwnerInfo.branchCode;\r\nlet branchName = getAssuranceOwnerInfo.branchName;\r\nlet name = getAssuranceOwnerInfo.name;\r\nlet surname = getAssuranceOwnerInfo.surname;\r\nlet phoneNumber = getAssuranceOwnerInfo.phoneList.phoneNumber.phoneNumber;\r\nlet faxNumber = phoneNumber;//(components.as_assuranceOwnerInfo as any).getAssuranceOwnerInfo().faxNumber;\r\nlet address = getAssuranceOwnerInfo.addressList.address.line;\r\nlet packagePKG3 = quick.store.get('$packageDetailPKG3');\r\n\r\nlet requestData = {\r\n  \"firmType\": \"AS\",\r\n  \"documentType\": \"info\",\r\n  \"documentFormat\": \"pdf\",\r\n  \"insuranceType\": \"PACC\",\r\n  \"packageCode\": packagePKG3?.packageId,\r\n  \"userInfo\": {\r\n    \"userId\": (<any>quick.containerServices).getUserContext().userid,\r\n    \"branch\": (<any>quick.containerServices).getUserContext().branchCode,\r\n    \"name\": (<any>quick.containerServices).getUserContext().name,\r\n    \"surname\": (<any>quick.containerServices).getUserContext().surname\r\n  },\r\n  \"branchInfo\": {\r\n    \"code\": branchCode,\r\n    \"address\": address,\r\n    \"name\": branchName,\r\n    \"phoneNumber\": phoneNumber,\r\n    \"faxNumber\": faxNumber,\r\n    \"contactName\": name + surname\r\n  },\r\n  \"insurerInfo\": {\r\n    \"customerNumber\": quick.store.get('$customerInfo').customerNumber, //'164014466'\r\n  }\r\n}\r\nquick.store.set('$createDocFromTemplateRequest',requestData);\r\nquick.MM.trigger('setDatasConsumerAndScreenInfo');\r\nlet serviceRequest: IRequest = {\r\n  url: '/api/wrapperclient/createDocumentFromTemplate',\r\n  http: 'POST',\r\n  data: requestData,\r\n  onFail: 'empty',\r\n  onSuccess: 'empty',\r\n  responseField: 'empty',\r\n  blockRender: false,\r\n}\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n  (components.as_loadingCustomComp).close();\r\n  if (resp?.data) {\r\n    components.as_loadingCustomComp.close();\r\n    quick.store.get('$bnkas_utils').print('name.pdf', resp?.data?.createDocumentFromTemplateDTO?.content, '');\r\n    quick.store.set('$content', resp?.data?.createDocumentFromTemplateDTO?.content);\r\n  }\r\n})\r\n  .catch((err) => {\r\n    (components.as_loadingCustomComp).close();\r\n    let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n    (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n  });",
					"C": true,
					"HL": "TS"
				},
				"calculatePremium": {
					"H": "debugger;\r\nlet datas = quick.store.get(\"$createProposalResp\");\r\n//Toplam Tutar\r\nlet grossPremiumAmount;\r\nlet commissionFeeAmount;\r\nlet decimal;\r\nif (datas?.policySummary?.grossPremiumAmount?.amountTL?.amount) {\r\n    quick.store.set('$cashPaymentAmount', datas?.policySummary?.grossPremiumAmount?.amountTL?.amount);\r\n    grossPremiumAmount = quick.Quick.toMoney(Number(datas?.policySummary?.grossPremiumAmount?.amountTL?.amount)); //'124.0';\r\n    if (grossPremiumAmount.split(',')[1]) { }\r\n    else {\r\n        decimal = ',00';\r\n        grossPremiumAmount = grossPremiumAmount + decimal;\r\n    }\r\n    quick.store.set('$totalAmount', grossPremiumAmount);\r\n\r\n    commissionFeeAmount = quick.Quick.toMoney(Number(datas?.policySummary?.commissionFeeAmount?.amountTL?.amount)); //'124.0';\r\n    if (commissionFeeAmount.split(',')[1]) { }\r\n    else {\r\n        decimal = ',00';\r\n        commissionFeeAmount = commissionFeeAmount + decimal;\r\n    }\r\n    quick.store.set('$commissionFeeAmount', commissionFeeAmount);\r\n}\r\n\r\nlet newData;\r\nlet newData2;\r\nlet newDatasReceiptType = [];\r\nlet newDatasPaymentMethodList = [];\r\nlet payMethod = datas?.policySummary?.paymentTerms?.paymentTermList?.paymentMethod;\r\nif(payMethod){\r\n    for (let i = 0; i < payMethod.length; i++) {\r\n        if (payMethod[i].paymentCode) {\r\n            newData = { value: payMethod[i].paymentCode.id, text: payMethod[i].paymentCode.type };\r\n            newDatasReceiptType.push(newData);\r\n\r\n            newData2 = {\r\n                idPaymentCode: payMethod[i].paymentCode.id,\r\n                typePaymentCode: payMethod[i].paymentCode.type,\r\n                codeExtCode: payMethod[i].extCode.code,\r\n                valueExtCode: payMethod[i].extCode.value\r\n            }\r\n            newDatasPaymentMethodList.push(newData2);\r\n        }\r\n    }\r\n}\r\nquick.store.set('$itemsReceiptType', newDatasReceiptType);\r\nquick.store.set('$paymentMethodList', newDatasPaymentMethodList);\r\n\r\ndebugger;\r\nlet newDatasInstallmentCountCredit = [];\r\nlet newDatasInstallmentCountAccount = [];\r\nlet newDatasInstallmentCountCreditInstallment = [];\r\nlet newDatasInstallmentCountAccountInstallment = [];\r\nlet newDatasInstallmentCountCash = [];\r\nlet installmentTerm = datas?.policySummary?.paymentTerms?.installmentTypeList?.installmentTerm;\r\nlet typeInstallmentTerm;\r\nlet installmentTermList = [];\r\nlet newInstallmentTerm;\r\nlet installmentGrossPremiumAmount;\r\nif (datas?.policySummary?.paymentTerms?.installmentTypeList?.installmentTerm) {\r\n    for (let i = 0; i < installmentTerm.length; i++) {\r\n        if (installmentTerm[i].installmentPremiumInfo) {\r\n            installmentGrossPremiumAmount = quick.Quick.toMoney(Number(installmentTerm[i]?.installmentPremiumInfo?.grossPremium)); //Tahsil Edilecek tutar\r\n            if (installmentGrossPremiumAmount.split(',')[1]) { }\r\n            else {\r\n                decimal = ',00';\r\n                installmentGrossPremiumAmount = installmentGrossPremiumAmount + decimal;\r\n            }\r\n        }\r\n        else{\r\n            installmentGrossPremiumAmount = grossPremiumAmount;\r\n        }\r\n\r\n        newInstallmentTerm = {\r\n            codeExtCode: installmentTerm[i].extCode.code,\r\n            valueExtcode: installmentTerm[i].extCode.value,\r\n            paymentMethodCode: installmentTerm[i].paymentMethod.extCode.code,\r\n            paymentMethodType: installmentTerm[i].paymentMethod.paymentCode.type,\r\n            paymentMethodId: installmentTerm[i].paymentMethod.paymentCode.id,\r\n            premiumInfoGrossPremium: installmentGrossPremiumAmount\r\n        }\r\n        installmentTermList.push(newInstallmentTerm);\r\n\r\n        typeInstallmentTerm = (installmentTerm[i].paymentMethod.paymentCode.type).toLowerCase();\r\n        if (typeInstallmentTerm.includes(\"taksit\")) {\r\n            if(typeInstallmentTerm.includes(\"cari\")){\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountAccountInstallment.push(newData);\r\n            }\r\n            else if(typeInstallmentTerm.includes(\"kredi\")){\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountCreditInstallment.push(newData);\r\n            }\r\n        }\r\n        else{\r\n            if(typeInstallmentTerm.includes(\"cari\")){\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountAccount.push(newData);\r\n            }\r\n            else if(typeInstallmentTerm.includes(\"kredi\")){\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountCredit.push(newData);\r\n            }\r\n            else{ //Nakit\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountCash.push(newData);\r\n            }\r\n        }\r\n    }\r\n}\r\nquick.store.set('$installmentTermList', installmentTermList);\r\nquick.store.set('$itemsInstallmentCountCredit', newDatasInstallmentCountCredit);\r\nquick.store.set('$itemsInstallmentCountAccount', newDatasInstallmentCountAccount);\r\nquick.store.set('$itemsInstallmentCountCreditInstallment', newDatasInstallmentCountCreditInstallment);\r\nquick.store.set('$itemsInstallmentCountAccountInstallment', newDatasInstallmentCountAccountInstallment);\r\nquick.store.set('$itemsInstallmentCountCash', newDatasInstallmentCountCash);\r\n\r\ncomponents.vauto_numberOfInstallments.items = newDatasInstallmentCountCreditInstallment;\r\ncomponents.txt_cashAmount.qValue = grossPremiumAmount;",
					"C": true,
					"HL": "TS"
				},
				"setTable": {
					"H": "debugger;\r\nlet setItems = [];\r\nlet disabledRowList = [];\r\nlet checkedTrueList = [];\r\nlet disabledTxtfield = [];\r\nlet changeAmountRowList = [];\r\nlet i;\r\nlet j;\r\nlet DEATH = \"20000099\"; //20000099 - Ölüm\r\nlet DISABILITY = \"20000100\"; //20000100 - Sürekli Sakatlık\r\nlet TREATMENT = \"20000101\"; //20000101 - Tedavi Masrafları\r\nlet list = quick.store.get('$coverListResp')?.coverDetailList;\r\ndebugger;\r\nlet index = 0;\r\nlist?.forEach(function (serviceResponse: any) {\r\n    quick.Quick.createComponent({\r\n        templateCompQID: 'dt_assuranceList', newCompQID: 'dt_assuranceList' +\r\n            index, dataSource: list, place: <any>'Before', placeQID: 'colCreatePlace'\r\n    });\r\n    index += 1;\r\n});\r\n\r\nfor (i = 0; i < list?.length; i++) {\r\n    quick.getComponent('dt_assuranceList_dt_assuranceList' + i).headers[0].text = list[i].coverName;\r\n\r\n    for (j = 0; j < (list[i]?.childCoverDetailList).length; j++) {\r\n        list[i].childCoverDetailList[j]['rowId'] = i;\r\n        list[i].childCoverDetailList[j]['rowDisabled'] = false;\r\n        if (list[i].childCoverDetailList[j].coverType == '1') {\r\n            list[i].childCoverDetailList[j]['rowDisabled'] = true;\r\n            disabledRowList.push(list[i].childCoverDetailList[j]);\r\n        }\r\n\r\n        if (list[i].childCoverDetailList[j].coverType == '2') {\r\n            list[i].childCoverDetailList[j]['checkedTrue'] = true;\r\n            checkedTrueList.push(list[i].childCoverDetailList[j]);\r\n        }\r\n\r\n        debugger;\r\n        list[i].childCoverDetailList[j]['txtfiledDisabled'] = true;\r\n        if (list[i].childCoverDetailList[j].packageId == DEATH ||\r\n            list[i].childCoverDetailList[j].packageId == DISABILITY ||\r\n            list[i].childCoverDetailList[j].packageId == TREATMENT &&\r\n            (list[i].childCoverDetailList[j].coverType == '1')) { //Limit değiştirilebilirdir.\r\n            changeAmountRowList = quick.store.get('changeAmountRow');\r\n            changeAmountRowList.push(list[i].childCoverDetailList[j]);\r\n            quick.store.set('changeAmountRow', changeAmountRowList);\r\n            list[i].childCoverDetailList[j]['txtfiledDisabled'] = false;\r\n            disabledTxtfield.push(list[i].childCoverDetailList[j]);\r\n        }\r\n\r\n        // if(list[i].childCoverDetailList[j].packageId == DEATH){\r\n        //     let deathPackage = list[i].childCoverDetailList[j];\r\n        //     quick.store.set('deathPackageDetail', deathPackage);\r\n        // }\r\n    }\r\n\r\n    quick.getComponent('dt_assuranceList_dt_assuranceList' + i).items = list[i].childCoverDetailList;\r\n\r\n    debugger;\r\n    quick.getComponent('dt_assuranceList_dt_assuranceList' + i).itemClass = (item) => {\r\n        if (item.rowDisabled == true && item.txtfiledDisabled == true) {\r\n            return \"unSelectedRow unSelectedTxtfield tblBackgroundNone\"; //Tüm row disable ama textfield etkilenmemeli.\r\n        } else if (item.rowDisabled == true && item.txtfiledDisabled == false) {\r\n            return \"unSelectedRow tblBackgroundNone\";\r\n        } else if (item.rowDisabled == false && item.txtfiledDisabled == true) {\r\n            return \"unSelectedTxtfield tblBackgroundNone\";\r\n        }\r\n        return \"tblBackgroundNone\";\r\n    }\r\n\r\n    disabledRowList?.forEach(item => {\r\n        quick.store.set('postRenderSelectTrue', true);\r\n        quick.getComponent('dt_assuranceList_dt_assuranceList' + i)?.select(item);\r\n    });\r\n\r\n    checkedTrueList?.forEach(item => {\r\n        quick.store.set('postRenderSelectTrue', true);\r\n        quick.getComponent('dt_assuranceList_dt_assuranceList' + i)?.select(item);\r\n    });\r\n\r\n    let tblList = quick.store.get('$tblList');\r\n    tblList.push(quick.getComponent('dt_assuranceList_dt_assuranceList' + i).items);\r\n    quick.store.set('$tblList', tblList);\r\n}\r\n\r\nquick.store.delete('postRenderSelectTrue');\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nlet list = [\r\n    {\r\n        \"packageId\": \"20000095\",\r\n        \"coverName\": \"Ferdi Kaza\",\r\n        \"coverType\": \"1\",\r\n        \"coverInsuranceAmount\": 0,\r\n        \"isDefault\": false,\r\n        \"productLineType\": {\r\n            \"referenceDataType\": {\r\n                \"code\": \"20000112\"\r\n            }\r\n        },\r\n        \"productLineOptionAmountList\": [],\r\n        \"childCoverDetailList\": [\r\n            {\r\n                \"packageId\": \"20000099\",\r\n                \"coverName\": \"Ölüm\",\r\n                \"coverType\": \"1\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000116\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 24000\r\n            },\r\n            {\r\n                \"packageId\": \"20000100\",\r\n                \"coverName\": \"Sürekli Sakatlık\",\r\n                \"coverType\": \"1\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000117\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 24000\r\n            },\r\n            {\r\n                \"packageId\": \"20000101\",\r\n                \"coverName\": \"Tedavi Masrafları\",\r\n                \"coverType\": \"3\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000118\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"20000103\",\r\n                \"coverName\": \"Deprem\",\r\n                \"coverType\": \"1\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000120\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"20000104\",\r\n                \"coverName\": \"Sel, Yanardağ Püskürmesi ve Yer Kayması\",\r\n                \"coverType\": \"1\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000121\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"20000105\",\r\n                \"coverName\": \"Terör\",\r\n                \"coverType\": \"1\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000122\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"20000106\",\r\n                \"coverName\": \"Sportif Faaliyetler\",\r\n                \"coverType\": \"3\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000123\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"20000107\",\r\n                \"coverName\": \"Motosiklet Kullanma\",\r\n                \"coverType\": \"3\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000124\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"20000108\",\r\n                \"coverName\": \"Yarışlara Katılma\",\r\n                \"coverType\": \"3\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000125\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"20000110\",\r\n                \"coverName\": \"Yolcu Sıfatı Dışında Uçuş\",\r\n                \"coverType\": \"3\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000127\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"packageId\": \"61348901\",\r\n        \"coverName\": \"Anadolu Hizmet\",\r\n        \"coverType\": \"2\",\r\n        \"coverInsuranceAmount\": 0,\r\n        \"isDefault\": false,\r\n        \"productLineType\": {\r\n            \"referenceDataType\": {\r\n                \"code\": \"20000115\"\r\n            }\r\n        },\r\n        \"productLineOptionAmountList\": [],\r\n        \"childCoverDetailList\": [\r\n            {\r\n                \"packageId\": \"20000111\",\r\n                \"coverName\": \"Ferdi Yardım Hizmeti-Turasist\",\r\n                \"coverType\": \"3\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000128\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"20000133\",\r\n                \"coverName\": \"Konut Yardım Hizmeti- Turasist\",\r\n                \"coverType\": \"3\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000150\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"20000132\",\r\n                \"coverName\": \"Binek Yardım Hizmeti- Turasist\",\r\n                \"coverType\": \"3\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"20000149\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            },\r\n            {\r\n                \"packageId\": \"61349757\",\r\n                \"coverName\": \"Zirai Asistans Hizmeti\",\r\n                \"coverType\": \"2\",\r\n                \"coverInsuranceAmount\": 0,\r\n                \"isDefault\": true,\r\n                \"productLineType\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": \"61349619\"\r\n                    }\r\n                },\r\n                \"productLineOptionAmountList\": [],\r\n                \"aggregatedLimitAmount\": 0\r\n            }\r\n        ]\r\n    }\r\n];\r\nquick.store.set('$coverListResp', list);\r\n*/",
					"C": true,
					"HL": "TS"
				},
				"PostRender": {
					"H": "debugger;\r\nlet newDataList = [];\r\nquick.store.set('$coverList', newDataList);\r\nlet tblList = [];\r\nquick.store.set('$tblList', tblList);\r\nlet changeAmountRowList = [];\r\nquick.store.set('changeAmountRow', changeAmountRowList);\r\nlet newAmountRowList = [];\r\nquick.store.set('newAmountRowList', newAmountRowList);\r\nquick.MM.trigger('setTable');",
					"TO": 1,
					"HL": "TS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child"
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "containerFarmerProtectionInfo",
					"T": "prop",
					"HL": "QS"
				},
				"class": {
					"H": "'container container--fluid'",
					"T": "class"
				},
				"visible": {
					"H": "true",
					"T": "prop"
				},
				"eager": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_2",
									"T": "prop"
								},
								"color": {
									"H": "'white'",
									"T": "prop"
								},
								"visible": {
									"H": "true",
									"T": "prop"
								},
								"elevation": {
									"H": "0",
									"T": "prop"
								},
								"disabled": {
									"H": "false",
									"T": "prop",
									"HL": "QS"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_3",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCard",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_20",
																					"T": "prop"
																				},
																				"color": {
																					"H": "'primary'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"height": {
																					"H": "'50px'",
																					"T": "prop"
																				},
																				"flat": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "'b-0'",
																					"T": "prop"
																				},
																				"dark": {
																					"H": "true",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VRow",
																							"P": {
																								"ID": {
																									"H": "EdtrComp_21",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VCol",
																											"C": {
																												"default": {
																													"c": [
																														{
																															"T": "QLabel",
																															"P": {
																																"ID": {
																																	"H": "EdtrComp_23",
																																	"T": "prop"
																																},
																																"tagType": {
																																	"H": "'span'",
																																	"T": "prop"
																																},
																																"visible": {
																																	"H": "true",
																																	"T": "prop"
																																},
																																"processHtml": {
																																	"H": "false",
																																	"T": "prop"
																																},
																																"text": {
																																	"H": "'İşte Kobi Sigorta Bilgileri'",
																																	"T": "prop",
																																	"HL": "QS"
																																}
																															},
																															"E": {},
																															"C": {},
																															"_Editor": {
																																"eID": "EdtrComp_23"
																															},
																															"O": {
																																"cType": "slot",
																																"layout": {
																																	"dOpt": {
																																		"xs": [
																																			"sp:ml-5",
																																			"tt:text-h6"
																																		]
																																	},
																																	"class": "ml-5 text-h6"
																																}
																															}
																														}
																													],
																													"cType": "slot"
																												}
																											},
																											"E": {},
																											"P": {
																												"ID": {
																													"H": "EdtrComp_22",
																													"T": "prop"
																												}
																											},
																											"_Editor": {
																												"eID": "EdtrComp_22"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"d:d-flex",
																															"fd:flex-column",
																															"sp:pb-3",
																															"sp:pt-3",
																															"sp:pl-3",
																															"sp:pr-3"
																														]
																													},
																													"class": "d-flex flex-column pb-3 pt-3 pl-3 pr-3"
																												}
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_21"
																							},
																							"O": {
																								"cType": "slot"
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_20"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_19",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_19"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"sp:pt-0",
																			"sp:pl-0",
																			"sp:pr-0",
																			"sp:pb-3"
																		]
																	},
																	"class": "d-flex flex-column pt-0 pl-0 pr-0 pb-3"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_3"
											},
											"O": {
												"cType": "slot"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_24",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VDataTable",
																			"P": {
																				"ID": {
																					"H": "dt_assuranceList",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"headers": {
																					"H": "[{ text = 'Teminat Adı', align= 'start', sortable= false, value= 'coverName'},\n{ text = 'Limit', value= 'limit', sortable = false, align= 'center', width='250px' },\n{ text = 'Muafiyet', align= 'start', sortable= false, value= 'excess'}]",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"noDataText": {
																					"H": "'Veri bulunamadı'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"noResultsText": {
																					"H": "'Veri bulunamadı'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDefaultFooter": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"showSelect": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"Render": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"items": {
																					"H": "[]",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"uniqueSlots": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"class": {
																					"H": "'tblBackgroundNone'",
																					"T": "class"
																				},
																				"itemKey": {
																					"H": "'text'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"click:row": {
																					"H": "// debugger;\r\n//clickRow\r\nquick.EM.trace('Index= ' + index + ' Row= ' + row);\r\n//Selected Objects\r\n// quick.EM.trace((<any>components.dt_assuranceList).selection)\r\n// let selectedItems = []\r\n//  Object.keys((<any>components.dt_assuranceList).selection).forEach(item =>{\r\n//     selectedItems.push((<any>components.dt_assuranceList).selection[item])\r\n//  });\r\n// //Selected object array\r\n// quick.EM.trace(selectedItems);\r\n\r\n// debugger;\r\n// declare let data;\r\n// let tmpItemList = [];\r\n// components.tbl_protectionInf.items = [];\r\n\r\n// let assuranceList = data.filter(\r\n//     contact => contact.contactRole?.description === \"Sigortalı\"\r\n// );\r\n// assuranceList.forEach((key) => {\r\n//     let tmpItem: any = {\r\n//         name: key.firstName + ' ' + key.lastName,\r\n//         legalType: key.legalType,\r\n//     }\r\n//     tmpItemList.push(tmpItem);\r\n// });\r\n// components.tbl_protectionInf.items = tmpItemList;",
																					"P": "index:any,row:IVDataTableClickRow",
																					"HL": "TS"
																				},
																				"item-selected": {
																					"H": "debugger;\r\nrowObj;\r\nlet DEATH = \"20000099\"; //20000099 - Ölüm\r\nlet DISABILITY = \"20000100\"; //20000100 - Sürekli Sakatlık\r\nlet TREATMENT = \"20000101\"; //20000101 - Tedavi Masrafları\r\nlet coverListData;\r\nlet newDataList = [];\r\nif (quick.store.get('postRenderSelectTrue') == true) {\r\n}\r\nelse {\r\n    rowObj.item.selected = rowObj.value;\r\n    quick.EM.trace(rowObj.item.selected);\r\n    let rowId = rowObj.item.rowId; //Tablo'nun idsi\r\n\r\n    if (rowObj.item.packageId == DEATH ||\r\n        rowObj.item.packageId == DISABILITY ||\r\n        rowObj.item.packageId == TREATMENT &&\r\n        rowObj.value == true) { //Limit değiştirilebilirdir.\r\n        rowObj.item.txtfiledDisabled = false;\r\n    }\r\n    else {\r\n        rowObj.item.txtfiledDisabled = true;\r\n    }\r\n\r\n    quick.getComponent('dt_assuranceList_dt_assuranceList' + rowId).itemClass = (item) => {\r\n        if (item.rowDisabled == true && item.txtfiledDisabled == true) {\r\n            return \"unSelectedRow unSelectedTxtfield tblBackgroundNone\"; //Tüm row disable ama textfield etkilenmemeli.\r\n        } else if (item.rowDisabled == true && item.txtfiledDisabled == false) {\r\n            return \"unSelectedRow tblBackgroundNone\";\r\n        } else if (item.rowDisabled == false && item.txtfiledDisabled == true) {\r\n            return \"unSelectedTxtfield tblBackgroundNone\";\r\n        }\r\n        return \"tblBackgroundNone\";\r\n    }\r\n\r\n    debugger;\r\n    if (rowObj.value == true) {\r\n        newDataList = quick.store.get('$coverList');\r\n        // Aynı id'ye sahip bir öğe olup olmadığını kontrol et\r\n        let itemExists = newDataList.some(i => i.item.packageId === rowObj.item.packageId);\r\n        if (!itemExists) {\r\n            newDataList.push(rowObj);  // Eğer yoksa, ekle\r\n            quick.store.set('$coverList', newDataList);\r\n        }\r\n    }\r\n    else {\r\n        newDataList = quick.store.get('$coverList');\r\n        let isInList = newDataList.some(i => i.item.packageId === rowObj.item.packageId);\r\n        quick.EM.trace(isInList);\r\n\r\n        if (isInList) {\r\n            // `filter()` ile id'ye göre objeyi çıkarıyoruz\r\n            let updatedList = newDataList.filter(i => i.item.packageId !== rowObj.item.packageId);\r\n            quick.EM.trace(updatedList);\r\n            quick.store.set('$coverList', updatedList);\r\n        } else {\r\n        }\r\n    }\r\n}\r\n\r\n// let list = quick.store.get('$coverListResp')?.coverDetailList;\r\n// let newList = quick.store.get('$coverList');\r\n// for (let i = 0; i < list.length; i++) {\r\n//     for (let j = 0; j < (list[i].childCoverDetailList).length; j++) {\r\n//         if (list[i].childCoverDetailList[j].packageId == rowObj.item.packageId) {\r\n//             if (list[i].childCoverDetailList[j].rowDisabled != rowObj.item.rowDisabled ||\r\n//                 list[i].childCoverDetailList[j].txtfiledDisabled != rowObj.item.txtfiledDisabled ||\r\n//                 list[i].childCoverDetailList[j].aggregatedLimitAmount != rowObj.item.aggregatedLimitAmount) {\r\n//                 //Herhangi bir farklılık yok ise;\r\n\r\n//                 // `findIndex` ile çıkarılacak objenin indeksini buluruz\r\n//                 const indexToRemove = newList.findIndex(product => product.packageId === rowObj.item.packageId);\r\n//                 if (indexToRemove !== -1) {\r\n//                     // `splice` ile o indeksteki 1 elemanı çıkarırız\r\n//                     newList.splice(indexToRemove, 1);\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n// }",
																					"P": "rowObj:IVDataTableItemSelect",
																					"HL": "TS"
																				}
																			},
																			"C": {
																				"item.aggregatedLimitAmount": {
																					"c": [
																						{
																							"T": "VTextField",
																							"P": {
																								"ID": {
																									"H": "txt_aggregatedLimitAmount",
																									"T": "prop",
																									"HL": "QS"
																								},
																								"visible": {
																									"H": "true",
																									"T": "prop"
																								},
																								"hideDetails": {
																									"H": "true",
																									"T": "prop"
																								},
																								"DiscardFormat": {
																									"H": "true",
																									"T": "prop"
																								},
																								"dense": {
																									"H": "true",
																									"T": "prop"
																								},
																								"height": {
																									"H": "'40px'",
																									"T": "prop"
																								},
																								"outlined": {
																									"H": "true",
																									"T": "prop"
																								},
																								"rounded": {
																									"H": "true",
																									"T": "prop"
																								},
																								"suffix": {
																									"H": "'TRY'",
																									"T": "prop",
																									"HL": "QS"
																								},
																								"qValue": {
																									"H": "item.aggregatedLimitAmount",
																									"T": "prop",
																									"HL": "QS"
																								}
																							},
																							"E": {
																								"change": {
																									"H": "debugger;\r\nlet item;\r\nlet changeAmountRowList = [];\r\nlet newAmountRowList = [];\r\nchangeAmountRowList = quick.store.get('changeAmountRow');\r\nfor (let i = 0; i < changeAmountRowList.length; i++) {\r\n    if (changeAmountRowList[i].packageId == item.packageId) {\r\n        if (changeAmountRowList[i].aggregatedLimitAmount != value) {\r\n            item.aggregatedLimitAmount = value;\r\n            newAmountRowList = quick.store.get('newAmountRowList');\r\n            let itemExists = newAmountRowList.some(item => item.packageId === changeAmountRowList[i].packageId);\r\n            if (itemExists) {\r\n                //Push yapmayacağız da olan datanın tutarını güncelleyeceğiz.\r\n            }\r\n            else {\r\n                newAmountRowList.push(changeAmountRowList[i]);\r\n            }\r\n            quick.store.set('newAmountRowList', newAmountRowList);\r\n            break;\r\n        }\r\n    }\r\n}",
																									"P": "value:any",
																									"HL": "TS"
																								}
																							},
																							"C": {},
																							"_Editor": {
																								"eID": "EdtrComp_11"
																							},
																							"S": {
																								"xs-xl": {
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "",
																									"paddingBottom": "",
																									"paddingLeft": "",
																									"paddingRight": "",
																									"width": "",
																									"height": "",
																									"maxWidth": "",
																									"maxHeight": "",
																									"minWidth": "",
																									"minHeight": "",
																									"unlink": "false",
																									"unlinkMax": "false",
																									"unlinkMin": "false",
																									"isSizeCollapsed": "false",
																									"dense": "",
																									"labelDefaultFontColor": "#686868",
																									"labelDefaultFontFamily": "Roboto",
																									"labelDefaultFontSize": "16px",
																									"labelDefaultFontStyle": "normal",
																									"labelDefaultFontWeight": "400",
																									"labelDefaultCombinedFont": "Roboto-Regular",
																									"labelDefaultThemeFont": "Custom",
																									"prefixFontColor": "#000",
																									"prefixFontFamily": "Roboto",
																									"prefixFontSize": "16px",
																									"prefixFontStyle": "normal",
																									"prefixFontWeight": "400",
																									"prefixCombinedFont": "Roboto-Regular",
																									"prefixThemeFont": "Custom",
																									"PHFontColor": "#686868",
																									"PHFontFamily": "Roboto",
																									"PHFontSize": "16px",
																									"PHFontStyle": "normal",
																									"PHFontWeight": "400",
																									"PHCombinedFont": "Roboto-Regular",
																									"PHThemeFont": "Custom",
																									"inputFontColor": "#000",
																									"inputFontFamily": "Roboto",
																									"inputFontSize": "16px",
																									"inputFontStyle": "normal",
																									"inputFontWeight": "400",
																									"inputCombinedFont": "Roboto-Regular",
																									"inputDefaultThemeFont": "Custom",
																									"errorMessageFontColor": "#E96767",
																									"errorMessageFontFamily": "Roboto",
																									"errorMessageFontSize": "12px",
																									"errorMessageFontStyle": "normal",
																									"errorMessageFontWeight": "400",
																									"EMCombinedFont": "Roboto-Regular",
																									"errorMessageThemeFont": "Custom",
																									"errorMessageLineHeight": "",
																									"backgroundColor": "#ffffff",
																									"innerBoxShadow": "",
																									"activeBorderColor": "#1976d2",
																									"innerBoxSizing": "",
																									"innerBorderTopStyle": "solid",
																									"innerBorderRightStyle": "solid",
																									"innerBorderBottomStyle": "solid",
																									"innerBorderLeftStyle": "solid",
																									"innerBorderTopLeftRadius": "",
																									"innerBorderTopRightRadius": "",
																									"innerBorderBottomLeftRadius": "",
																									"innerBorderBottomRightRadius": "",
																									"innerBorderTopWidth": "1px",
																									"innerBorderRightWidth": "1px",
																									"innerBorderBottomWidth": "1px",
																									"innerBorderLeftWidth": "1px",
																									"innerDefaultBorderColor": "#0000006b",
																									"innerSides": "Top,Right,Bottom,Left",
																									"outlined": "true"
																								}
																							},
																							"O": {
																								"cType": "slot",
																								"compDomClasses": "v-input v-input--hide-details v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--prefix v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded undefined pt-0 newDropBorder"
																							}
																						}
																					],
																					"cType": "scopedSlot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_26"
																			},
																			"O": {
																				"cType": "scopedSlot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "colCreatePlace",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_25"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column"
																		]
																	},
																	"class": "d-flex flex-column"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_24"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "px",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "156px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_2"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"sp:pt-0",
											"sp:pl-3",
											"sp:pr-3",
											"sp:pb-3"
										]
									},
									"class": "pt-0 pl-3 pr-3 pb-3"
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_4"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pt-0",
							"sp:pb-0"
						]
					},
					"class": "pt-0 pb-0"
				}
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "containerAmountInfo",
					"T": "prop",
					"HL": "QS"
				},
				"class": {
					"H": "'container container--fluid'",
					"T": "class"
				},
				"visible": {
					"H": "false",
					"T": "prop",
					"HL": "QS"
				},
				"eager": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_71",
									"T": "prop"
								},
								"color": {
									"H": "'white'",
									"T": "prop"
								},
								"visible": {
									"H": "true",
									"T": "prop"
								},
								"elevation": {
									"H": "0",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_72",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCard",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_74",
																					"T": "prop"
																				},
																				"color": {
																					"H": "'primary'",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"height": {
																					"H": "'50px'",
																					"T": "prop"
																				},
																				"flat": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "'b-0'",
																					"T": "prop"
																				},
																				"dark": {
																					"H": "true",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VRow",
																							"P": {
																								"ID": {
																									"H": "EdtrComp_75",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VCol",
																											"C": {
																												"default": {
																													"c": [
																														{
																															"T": "QLabel",
																															"P": {
																																"ID": {
																																	"H": "EdtrComp_77",
																																	"T": "prop"
																																},
																																"tagType": {
																																	"H": "'span'",
																																	"T": "prop"
																																},
																																"text": {
																																	"H": "'Prim Tutarı'",
																																	"T": "prop",
																																	"HL": "QS"
																																},
																																"visible": {
																																	"H": "true",
																																	"T": "prop"
																																},
																																"processHtml": {
																																	"H": "false",
																																	"T": "prop"
																																}
																															},
																															"E": {},
																															"C": {},
																															"_Editor": {
																																"eID": "EdtrComp_77"
																															},
																															"O": {
																																"cType": "slot",
																																"layout": {
																																	"dOpt": {
																																		"xs": [
																																			"sp:ml-5",
																																			"tt:text-h6"
																																		]
																																	},
																																	"class": "ml-5 text-h6"
																																}
																															}
																														}
																													],
																													"cType": "slot"
																												}
																											},
																											"E": {},
																											"P": {
																												"ID": {
																													"H": "EdtrComp_76",
																													"T": "prop"
																												}
																											},
																											"_Editor": {
																												"eID": "EdtrComp_76"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"d:d-flex",
																															"fd:flex-column",
																															"sp:pb-3",
																															"sp:pt-3",
																															"sp:pl-3",
																															"sp:pr-3"
																														]
																													},
																													"class": "d-flex flex-column pb-3 pt-3 pl-3 pr-3"
																												}
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_75"
																							},
																							"O": {
																								"cType": "slot"
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_74"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_73",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_73"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"sp:pt-0",
																			"sp:pl-0",
																			"sp:pr-0",
																			"sp:pb-2"
																		]
																	},
																	"class": "d-flex flex-column pt-0 pl-0 pr-0 pb-2"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_72"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"backgroundColor": "",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "",
													"borderRightStyle": "",
													"borderBottomStyle": "",
													"borderLeftStyle": "",
													"borderTopLeftRadius": "",
													"borderTopRightRadius": "",
													"borderBottomLeftRadius": "",
													"borderBottomRightRadius": "",
													"borderTopWidth": "",
													"borderRightWidth": "",
													"borderBottomWidth": "",
													"borderLeftWidth": "",
													"defaultBorderColor": "",
													"sides": ""
												}
											},
											"O": {
												"cType": "slot"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_79",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_81",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "Ghost",
																											"P": {
																												"ID": {
																													"H": "EdtrComp_535",
																													"T": "prop"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_535"
																											},
																											"O": {
																												"cType": "child"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_82",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_82"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pr-3",
																											"sp:pl-3",
																											"c:col-3",
																											"sp:pb-0",
																											"sp:pt-3"
																										]
																									},
																									"class": "d-flex pr-3 pl-3 col-3 pb-0 pt-3"
																								},
																								"compDomClasses": "col d-flex pr-3 pt-3 pl-3 col-3 pb-0 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						},
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VTextField",
																											"P": {
																												"ID": {
																													"H": "txt_cashAmount",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"label": {
																													"H": "'Peşin Tutar'",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"visible": {
																													"H": "true",
																													"T": "prop"
																												},
																												"hideDetails": {
																													"H": "false",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"DiscardFormat": {
																													"H": "true",
																													"T": "prop"
																												},
																												"dense": {
																													"H": "true",
																													"T": "prop"
																												},
																												"height": {
																													"H": "'40px'",
																													"T": "prop"
																												},
																												"outlined": {
																													"H": "true",
																													"T": "prop"
																												},
																												"rounded": {
																													"H": "true",
																													"T": "prop"
																												},
																												"disabled": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"suffix": {
																													"H": "'TRY'",
																													"T": "prop",
																													"HL": "QS"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_494"
																											},
																											"S": {
																												"xs-xl": {
																													"marginLeft": "",
																													"marginRight": "",
																													"marginBottom": "",
																													"marginTop": "",
																													"paddingTop": "",
																													"paddingBottom": "",
																													"paddingLeft": "",
																													"paddingRight": "",
																													"width": "",
																													"height": "",
																													"maxWidth": "",
																													"maxHeight": "",
																													"minWidth": "",
																													"minHeight": "",
																													"unlink": "false",
																													"unlinkMax": "false",
																													"unlinkMin": "false",
																													"isSizeCollapsed": "false",
																													"dense": "",
																													"labelDefaultFontColor": "#686868",
																													"labelDefaultFontFamily": "Roboto",
																													"labelDefaultFontSize": "16px",
																													"labelDefaultFontStyle": "normal",
																													"labelDefaultFontWeight": "400",
																													"labelDefaultCombinedFont": "Roboto-Regular",
																													"labelDefaultThemeFont": "Custom",
																													"prefixFontColor": "#000",
																													"prefixFontFamily": "Roboto",
																													"prefixFontSize": "16px",
																													"prefixFontStyle": "normal",
																													"prefixFontWeight": "400",
																													"prefixCombinedFont": "Roboto-Regular",
																													"prefixThemeFont": "Custom",
																													"PHFontColor": "#686868",
																													"PHFontFamily": "Roboto",
																													"PHFontSize": "16px",
																													"PHFontStyle": "normal",
																													"PHFontWeight": "400",
																													"PHCombinedFont": "Roboto-Regular",
																													"PHThemeFont": "Custom",
																													"inputFontColor": "#000",
																													"inputFontFamily": "Roboto",
																													"inputFontSize": "16px",
																													"inputFontStyle": "normal",
																													"inputFontWeight": "400",
																													"inputCombinedFont": "Roboto-Regular",
																													"inputDefaultThemeFont": "Custom",
																													"errorMessageFontColor": "#E96767",
																													"errorMessageFontFamily": "Roboto",
																													"errorMessageFontSize": "12px",
																													"errorMessageFontStyle": "normal",
																													"errorMessageFontWeight": "400",
																													"EMCombinedFont": "Roboto-Regular",
																													"errorMessageThemeFont": "Custom",
																													"errorMessageLineHeight": "",
																													"backgroundColor": "#ffffff",
																													"innerBoxShadow": "",
																													"activeBorderColor": "#1976d2",
																													"innerBoxSizing": "",
																													"innerBorderTopStyle": "solid",
																													"innerBorderRightStyle": "solid",
																													"innerBorderBottomStyle": "solid",
																													"innerBorderLeftStyle": "solid",
																													"innerBorderTopLeftRadius": "",
																													"innerBorderTopRightRadius": "",
																													"innerBorderBottomLeftRadius": "",
																													"innerBorderBottomRightRadius": "",
																													"innerBorderTopWidth": "1px",
																													"innerBorderRightWidth": "1px",
																													"innerBorderBottomWidth": "1px",
																													"innerBorderLeftWidth": "1px",
																													"innerDefaultBorderColor": "#0000006b",
																													"innerSides": "Top,Right,Bottom,Left",
																													"outlined": "true"
																												}
																											},
																											"O": {
																												"cType": "slot",
																												"compDomClasses": "v-input v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--prefix v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded undefined pt-0 newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_493",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_493"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pr-3",
																											"sp:pl-3",
																											"c:col-3",
																											"sp:pb-0",
																											"sp:pt-3"
																										]
																									},
																									"class": "d-flex pr-3 pl-3 col-3 pb-0 pt-3"
																								},
																								"compDomClasses": "col d-flex pr-3 pt-3 pl-3 col-3 pb-0 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_81"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "row newDropBorder"
																			}
																		},
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_86",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VAutocomplete",
																											"P": {
																												"ID": {
																													"H": "vauto_numberOfInstallments",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"eager": {
																													"H": "true",
																													"T": "prop"
																												},
																												"visible": {
																													"H": "true",
																													"T": "prop"
																												},
																												"label": {
																													"H": "'Taksit Sayısı'",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"hideDetails": {
																													"H": "false",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"itemText": {
																													"H": "'text'",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"itemValue": {
																													"H": "value",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"DiscardSettings": {
																													"H": "true",
																													"T": "prop"
																												},
																												"dense": {
																													"H": "true",
																													"T": "prop"
																												},
																												"height": {
																													"H": "'40px'",
																													"T": "prop"
																												},
																												"outlined": {
																													"H": "true",
																													"T": "prop"
																												},
																												"rounded": {
																													"H": "true",
																													"T": "prop"
																												},
																												"attach": {
																													"H": "true",
																													"T": "prop"
																												},
																												"items": {
																													"H": "[]",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"noDataText": {
																													"H": "'Veri bulunamadı'",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"rules": {
																													"H": "[]",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"clearable": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												}
																											},
																											"E": {
																												"change": {
																													"H": "debugger;\r\nlet receiptAmount;\r\nlet termList = quick.store.get('$installmentTermList');\r\nfor (let i = 0; i < termList.length; i++) {\r\n    if (termList[i].valueExtcode == components.vauto_numberOfInstallments.qValue.text) {\r\n        receiptAmount = termList[i].premiumInfoGrossPremium; //'Tahsil Edilecek Tutar'\r\n        break;\r\n    }\r\n};\r\ncomponents.txt_installmentAmount.qValue = receiptAmount;\r\n\r\nif(components.rowAmountInformation.visible == false){\r\n    components.rowAmountInformation.visible = true;\r\n}",
																													"HL": "TS"
																												},
																												"click:clear": {
																													"H": "debugger;\r\n// components.vauto_numberOfInstallments.qValue = '';\r\nquick.Quick.reset('vauto_numberOfInstallments');\r\nquick.Quick.reset('txt_installmentAmount');\r\nquick.EM.trace(components.vauto_numberOfInstallments.qValue);\r\nquick.EM.trace(components.txt_installmentAmount.qValue);\r\ncomponents.rowAmountInformation.visible = false;",
																													"P": "mouseEvent:unknown | undefined",
																													"HL": "TS"
																												}
																											},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_92"
																											},
																											"S": {
																												"xs-xl": {
																													"marginTop": "",
																													"marginRight": "",
																													"marginBottom": "",
																													"marginLeft": "",
																													"paddingTop": "",
																													"paddingRight": "",
																													"paddingBottom": "",
																													"paddingLeft": "",
																													"width": "",
																													"height": "",
																													"maxWidth": "",
																													"maxHeight": "",
																													"minWidth": "",
																													"minHeight": "",
																													"unlink": "false",
																													"unlinkMax": "false",
																													"unlinkMin": "false",
																													"isSizeCollapsed": "false",
																													"dense": "",
																													"defaultFontColor": "#666666",
																													"defaultFontFamily": "Roboto",
																													"defaultFontSize": "16px",
																													"defaultFontStyle": "normal",
																													"defaultFontWeight": "400",
																													"defaultCombinedFont": "Roboto-Regular",
																													"deafultThemeFont": "Custom",
																													"PHFontColor": "#9E9E9E",
																													"PHFontFamily": "Roboto",
																													"PHFontSize": "16px",
																													"PHFontStyle": "normal",
																													"PHFontWeight": "400",
																													"PHCombinedFont": "Roboto-Regular",
																													"PHThemeFont": "Custom",
																													"inputFontColor": "#000",
																													"inputFontFamily": "Roboto",
																													"inputFontSize": "16px",
																													"inputFontStyle": "normal",
																													"inputFontWeight": "400",
																													"inputCombinedFont": "Roboto-Regular",
																													"inputThemeFont": "Custom",
																													"menuFontColor": "#000",
																													"menuFontFamily": "Roboto",
																													"menuFontSize": "16px",
																													"menuFontStyle": "normal",
																													"menuFontWeight": "400",
																													"menuCombinedFont": "Roboto-Regular",
																													"menuThemeFont": "Custom",
																													"errorMessageFontColor": "#E96767",
																													"errorMessageFontFamily": "Roboto",
																													"errorMessageFontSize": "12px",
																													"errorMessageFontStyle": "normal",
																													"errorMessageFontWeight": "400",
																													"EMCombinedFont": "Roboto-Regular",
																													"errorMessageThemeFont": "Custom",
																													"errorMessageLineHeight": "",
																													"backgroundColor": "#FFFFFF",
																													"menuBackgroundColor": "#FFFFFF",
																													"menuDefaultHoverColor": "#000000de",
																													"menuActiveHoverColor": "#1976d2",
																													"innerBoxShadow": "",
																													"menuBoxShadow": "",
																													"activeBorderColor": "#1976d2",
																													"innerBoxSizing": "",
																													"innerBorderTopStyle": "solid",
																													"innerBorderRightStyle": "solid",
																													"innerBorderBottomStyle": "solid",
																													"innerBorderLeftStyle": "solid",
																													"innerBorderTopLeftRadius": "",
																													"innerBorderTopRightRadius": "",
																													"innerBorderBottomLeftRadius": "",
																													"innerBorderBottomRightRadius": "",
																													"innerBorderTopWidth": "1px",
																													"innerBorderRightWidth": "1px",
																													"innerBorderBottomWidth": "1px",
																													"innerBorderLeftWidth": "1px",
																													"innerDefaultBorderColor": "#0000006b",
																													"innerSides": "Top,Right,Bottom,Left",
																													"outlined": "true"
																												}
																											},
																											"O": {
																												"cType": "slot",
																												"compDomClasses": "v-input v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete undefined newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_91",
																									"T": "prop"
																								},
																								"visible": {
																									"H": "true",
																									"T": "prop",
																									"HL": "QS"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_91"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pl-3",
																											"sp:pb-0",
																											"sp:pt-0",
																											"sp:pr-3",
																											"c:col-3"
																										]
																									},
																									"class": "d-flex pl-3 pb-0 pt-0 pr-3 col-3"
																								},
																								"compDomClasses": "col d-flex pl-3 pb-0 pt-0 pr-3 col-3 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						},
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VTextField",
																											"P": {
																												"ID": {
																													"H": "txt_installmentAmount",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"label": {
																													"H": "'Taksitli Tutar (Kredi Kartı)'",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"visible": {
																													"H": "true",
																													"T": "prop"
																												},
																												"hideDetails": {
																													"H": "true",
																													"T": "prop"
																												},
																												"DiscardFormat": {
																													"H": "true",
																													"T": "prop"
																												},
																												"dense": {
																													"H": "true",
																													"T": "prop"
																												},
																												"height": {
																													"H": "'40px'",
																													"T": "prop"
																												},
																												"outlined": {
																													"H": "true",
																													"T": "prop"
																												},
																												"rounded": {
																													"H": "true",
																													"T": "prop"
																												},
																												"disabled": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"suffix": {
																													"H": "'TRY'",
																													"T": "prop",
																													"HL": "QS"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_85"
																											},
																											"S": {
																												"xs-xl": {
																													"marginLeft": "",
																													"marginRight": "",
																													"marginBottom": "",
																													"marginTop": "",
																													"paddingTop": "",
																													"paddingBottom": "",
																													"paddingLeft": "",
																													"paddingRight": "",
																													"width": "",
																													"height": "",
																													"maxWidth": "",
																													"maxHeight": "",
																													"minWidth": "",
																													"minHeight": "",
																													"unlink": "false",
																													"unlinkMax": "false",
																													"unlinkMin": "false",
																													"isSizeCollapsed": "false",
																													"dense": "",
																													"labelDefaultFontColor": "#686868",
																													"labelDefaultFontFamily": "Roboto",
																													"labelDefaultFontSize": "16px",
																													"labelDefaultFontStyle": "normal",
																													"labelDefaultFontWeight": "400",
																													"labelDefaultCombinedFont": "Roboto-Regular",
																													"labelDefaultThemeFont": "Custom",
																													"prefixFontColor": "#000",
																													"prefixFontFamily": "Roboto",
																													"prefixFontSize": "16px",
																													"prefixFontStyle": "normal",
																													"prefixFontWeight": "400",
																													"prefixCombinedFont": "Roboto-Regular",
																													"prefixThemeFont": "Custom",
																													"PHFontColor": "#686868",
																													"PHFontFamily": "Roboto",
																													"PHFontSize": "16px",
																													"PHFontStyle": "normal",
																													"PHFontWeight": "400",
																													"PHCombinedFont": "Roboto-Regular",
																													"PHThemeFont": "Custom",
																													"inputFontColor": "#000",
																													"inputFontFamily": "Roboto",
																													"inputFontSize": "16px",
																													"inputFontStyle": "normal",
																													"inputFontWeight": "400",
																													"inputCombinedFont": "Roboto-Regular",
																													"inputDefaultThemeFont": "Custom",
																													"errorMessageFontColor": "#E96767",
																													"errorMessageFontFamily": "Roboto",
																													"errorMessageFontSize": "12px",
																													"errorMessageFontStyle": "normal",
																													"errorMessageFontWeight": "400",
																													"EMCombinedFont": "Roboto-Regular",
																													"errorMessageThemeFont": "Custom",
																													"errorMessageLineHeight": "",
																													"backgroundColor": "#ffffff",
																													"innerBoxShadow": "",
																													"activeBorderColor": "#1976d2",
																													"innerBoxSizing": "",
																													"innerBorderTopStyle": "solid",
																													"innerBorderRightStyle": "solid",
																													"innerBorderBottomStyle": "solid",
																													"innerBorderLeftStyle": "solid",
																													"innerBorderTopLeftRadius": "",
																													"innerBorderTopRightRadius": "",
																													"innerBorderBottomLeftRadius": "",
																													"innerBorderBottomRightRadius": "",
																													"innerBorderTopWidth": "1px",
																													"innerBorderRightWidth": "1px",
																													"innerBorderBottomWidth": "1px",
																													"innerBorderLeftWidth": "1px",
																													"innerDefaultBorderColor": "#0000006b",
																													"innerSides": "Top,Right,Bottom,Left",
																													"outlined": "true"
																												}
																											},
																											"O": {
																												"cType": "slot",
																												"compDomClasses": "v-input v-input--hide-details v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--prefix v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded undefined pt-0 newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_84",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_84"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pr-3",
																											"sp:pl-3",
																											"c:col-3",
																											"sp:pb-0",
																											"sp:pt-0"
																										]
																									},
																									"class": "d-flex pr-3 pl-3 col-3 pb-0 pt-0"
																								},
																								"compDomClasses": "col d-flex pr-3 pt-3 pl-3 col-3 pb-0 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_86"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "row newDropBorder"
																			}
																		},
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "rowAmountInformation",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "QLabel",
																											"P": {
																												"ID": {
																													"H": "EdtrComp_224",
																													"T": "prop"
																												},
																												"tagType": {
																													"H": "'span'",
																													"T": "prop"
																												},
																												"text": {
																													"H": "'Cari hesap taksit tutarları ödeme adımında görüntülenecektir.'",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"visible": {
																													"H": "true",
																													"T": "prop"
																												},
																												"processHtml": {
																													"H": "false",
																													"T": "prop"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_224"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"tc:error--text",
																															"te:font-weight-medium",
																															"tt:text-body-1"
																														]
																													},
																													"class": "error--text font-weight-medium text-body-1"
																												}
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_139",
																									"T": "prop"
																								},
																								"visible": {
																									"H": "true",
																									"T": "prop",
																									"HL": "QS"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_139"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pl-3",
																											"sp:pt-0",
																											"sp:pr-3",
																											"sp:pb-6"
																										]
																									},
																									"class": "d-flex pl-3 pt-0 pr-3 pb-6"
																								},
																								"compDomClasses": "col d-flex pl-3 pb-0 pt-0 pr-3 col-3 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_138"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "row newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_80",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_80"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"sp:pr-3",
																			"sp:pl-3",
																			"fd:flex-column",
																			"sp:pt-0",
																			"sp:pb-0"
																		]
																	},
																	"class": "d-flex pr-3 pl-3 flex-column pt-0 pb-0"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "#ffffff",
																	"boxShadow": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_79"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_71"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"sp:pt-0",
											"sp:pb-0",
											"sp:pl-3",
											"sp:pr-3"
										]
									},
									"class": "pt-0 pb-0 pl-3 pr-3"
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_70"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pb-0"
						]
					},
					"class": "pb-0"
				}
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "containerBtns",
					"T": "prop",
					"HL": "QS"
				},
				"class": {
					"H": "'container container--fluid'",
					"T": "class"
				},
				"visible": {
					"H": "true",
					"T": "prop"
				},
				"eager": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VRow",
							"P": {
								"ID": {
									"H": "rowCreateProposal",
									"T": "prop",
									"HL": "QS"
								},
								"visible": {
									"H": "true",
									"T": "prop",
									"HL": "QS"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "btn_back",
																	"T": "prop",
																	"HL": "QS"
																},
																"depressed": {
																	"H": "true",
																	"T": "prop"
																},
																"visible": {
																	"H": "true",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "true",
																	"T": "prop"
																},
																"color": {
																	"H": "'#2171DC'",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "true",
																	"T": "prop"
																},
																"height": {
																	"H": "'40px'",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "true",
																	"T": "prop"
																}
															},
															"E": {},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_18",
																					"T": "prop"
																				},
																				"text": {
																					"H": "'Geri'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_18"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						]
																					},
																					"class": "text-body-1 font-weight-regular"
																				}
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_17"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		],
																		"lg": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1 mr-lg-1"
																}
															}
														},
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "btnCreateProposal",
																	"T": "prop",
																	"HL": "QS"
																},
																"depressed": {
																	"H": "true",
																	"T": "prop"
																},
																"visible": {
																	"H": "true",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "true",
																	"T": "prop"
																},
																"color": {
																	"H": "'#2171DC'",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "true",
																	"T": "prop"
																},
																"height": {
																	"H": "'40px'",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "true",
																	"T": "prop"
																}
															},
															"E": {
																"click": {
																	"H": "debugger;\r\n//createProposal\r\n(components.as_loadingCustomComp).open();\r\n\r\nlet listTbl = [];\r\nlet newAmountRowList = [];\r\nlet coverIVOsList = [];\r\nlet coverIVOsListNew = [];\r\nlet DEATH = \"20000099\";\r\nlet newDataList = quick.store.get('$coverList');\r\nfor (let i = 0; i < newDataList.length; i++) {\r\n  let newDatas = {\r\n    \"coverCode\": {\r\n      \"referenceDataType\": {\r\n        \"code\": newDataList[i].item.packageId,\r\n        \"category\": newDataList[i].item.coverName //\"Ölüm\"\r\n      }\r\n    },\r\n    \"aggregatedLimitAmount\": newDataList[i].item.aggregatedLimitAmount //24000\r\n  }\r\n\r\n  coverIVOsListNew.push(newDatas);\r\n}\r\nif (coverIVOsListNew.length > 0) {\r\n  listTbl = quick.store.get('$tblList');\r\n  for (let j = 0; j < listTbl.length; j++) { //Birden fazla tablo listesi olabileceği için yapıldı.\r\n    let foundPackage = listTbl[j].find(pkg => pkg.packageId === DEATH);\r\n    if (foundPackage) {\r\n      let newDataDeath = {\r\n        \"coverCode\": {\r\n          \"referenceDataType\": {\r\n            \"code\": foundPackage.packageId,\r\n            \"category\": foundPackage.coverName //\"Ölüm\"\r\n          }\r\n        },\r\n        \"aggregatedLimitAmount\": foundPackage.aggregatedLimitAmount\r\n      }\r\n\r\n      coverIVOsListNew.push(newDataDeath);\r\n    }\r\n  }\r\n}\r\nelse { //Select'lerde değişiklik yapılmamış.\r\n  newAmountRowList = quick.store.get('newAmountRowList');\r\n  if (newAmountRowList.length > 0) {\r\n    for (let i = 0; i < newAmountRowList.length; i++) {\r\n      coverIVOsListNew.push(newAmountRowList[i]);\r\n    }\r\n  }\r\n  let itemExists = coverIVOsListNew.some(i => i.item.packageId === DEATH);\r\n  if (!itemExists) { //Tutar değişikliği Ölüm'de yapılmamış.\r\n    let deathPackage = newAmountRowList.find(item => item.packageId === DEATH);\r\n    if (deathPackage) {\r\n      coverIVOsListNew.push(deathPackage);\r\n    }\r\n  }\r\n}\r\ncoverIVOsList = [coverIVOsListNew];\r\nquick.store.set('$coverIVOsList', coverIVOsList);\r\n\r\nlet getPolicyInfo = quick.store.get('$policyInfo');\r\nlet getAssuranceInfo = quick.store.get('$getAssuranceCompInfo');\r\nlet getBranchCode = getAssuranceInfo.branchCode;\r\nlet getAssuranceOwnerInfo = quick.store.get('$assuranceOwnerInfoSet');\r\nlet customerInfoType = getAssuranceOwnerInfo?.customerInfoType;\r\nlet customerInfoType2 = quick.store.get(\"$saveInsuredContactResp\")?.customerInfoType;\r\nlet insuranceCustomerNumber = quick.store.get(\"$saveInsuranceResp\")?.externalContactNumber;\r\nlet insuredCustomerNumber = quick.store.get(\"$saveInsuredContactResp\")?.externalContactNumber;\r\nlet packagePKG3 = quick.store.get('$packageDetailPKG3');\r\nlet externalContactNumber;\r\nif (insuredCustomerNumber) {\r\n  externalContactNumber = insuredCustomerNumber;\r\n}\r\nelse {\r\n  externalContactNumber = insuranceCustomerNumber;\r\n}\r\n\r\nlet requestData = {\r\n  policyInfo: {\r\n    policyInfoType: packagePKG3?.type, //\"PACC\"\r\n    insuranceType: packagePKG3?.type, //\"PACC\"\r\n    insurancePackageId: packagePKG3?.packageId,\r\n    ...getPolicyInfo,\r\n    branchCode: getBranchCode,\r\n    ownerUserInfo: {\r\n      userId: (<any>quick.containerServices).getUserContext().userid\r\n    },\r\n    insurerInfo: {\r\n      customerInfoType: customerInfoType,\r\n      insuranceCustomerNumber: insuranceCustomerNumber,\r\n      customerNumber: insuranceCustomerNumber,\r\n      contactRole: \"6\"\r\n    },\r\n    ...(insuredCustomerNumber ? {\r\n      insuredInfo: {\r\n        customerInfoType: customerInfoType2,\r\n        insuranceCustomerNumber: insuredCustomerNumber,\r\n        customerNumber: insuredCustomerNumber,\r\n        contactRole: \"1\"\r\n      }\r\n    } : {\r\n      insuredInfo: {\r\n        customerInfoType: customerInfoType,\r\n        insuranceCustomerNumber: insuranceCustomerNumber,\r\n        customerNumber: insuranceCustomerNumber,\r\n        contactRole: \"1\"\r\n      }\r\n    }),\r\n    assetsList: {\r\n      ...coverIVOsList,\r\n      externalContactNumber: externalContactNumber\r\n    },\r\n    productRelatedList: {\r\n      packageTypeVORef: {\r\n        referenceDataType: {\r\n          code: packagePKG3?.asChannelCode //1000017\r\n        }\r\n      }\r\n    },\r\n    paymentTermsList: {\r\n      collectionMethodVORef: {\r\n        referenceDataType: {\r\n          code: 4,\r\n          category: \"Sanal POS\"\r\n        }\r\n      },\r\n      paymentsTermsVORef: {\r\n        referenceDataType: {\r\n          code: 2000085,\r\n          category: \"1 Taksit\"\r\n        }\r\n      },\r\n      numOfInstallment: 1\r\n    }\r\n  }\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nlet serviceRequest: IRequest = {\r\n  url: '/api/wrapperclient/createProposal',\r\n  http: 'POST',\r\n  data: requestData,\r\n  onFail: 'empty',\r\n  onSuccess: 'empty',\r\n  responseField: 'empty',\r\n  blockRender: false,\r\n}\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n  if (resp?.data) {\r\n    quick.store.set('$createProposalResp', resp?.data);\r\n    quick.store.set('$revisionNo', resp?.data?.revisionNumber);\r\n    quick.MM.trigger('calculatePremium');\r\n    components.rowCreateProposal.visible = false;\r\n    components.rowUpdateProposal.visible = true;\r\n    components.containerAmountInfo.visible = true;\r\n  }\r\n  (components.as_loadingCustomComp).close();\r\n})\r\n  .catch((err) => {\r\n    (components.as_loadingCustomComp).close();\r\n    let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n    (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n  });",
																	"P": "mouseEvent:unknown | undefined",
																	"HL": "TS"
																}
															},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_15",
																					"T": "prop"
																				},
																				"text": {
																					"H": "'Teklif Al'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_15"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						]
																					},
																					"class": "text-body-1 font-weight-regular"
																				}
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_14"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "EdtrComp_13",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_13"
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"d:d-flex",
															"sp:pt-3",
															"sp:pb-0",
															"j:justify-end"
														]
													},
													"class": "d-flex pt-3 pb-0 justify-end"
												}
											},
											"S": {
												"xs-xl": {
													"col": "",
													"flexDirection": "column",
													"alignItems": "",
													"justifyContent": "",
													"marginLeft": "",
													"marginRight": "",
													"marginBottom": "",
													"marginTop": "",
													"paddingTop": "12px",
													"paddingBottom": "12px",
													"paddingLeft": "12px",
													"paddingRight": "12px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_6"
							},
							"O": {
								"cType": "slot"
							},
							"S": {
								"xs-xl": {
									"marginLeft": "0px",
									"marginRight": "0px",
									"marginBottom": "0px",
									"marginTop": "0px",
									"paddingTop": "",
									"paddingBottom": "",
									"paddingLeft": "",
									"paddingRight": "",
									"width": "",
									"height": "",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						},
						{
							"T": "VRow",
							"P": {
								"ID": {
									"H": "rowUpdateProposal",
									"T": "prop",
									"HL": "QS"
								},
								"visible": {
									"H": "false",
									"T": "prop",
									"HL": "QS"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "EdtrComp_50",
																	"T": "prop"
																},
																"depressed": {
																	"H": "true",
																	"T": "prop"
																},
																"visible": {
																	"H": "true",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "true",
																	"T": "prop"
																},
																"color": {
																	"H": "'#2171DC'",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "true",
																	"T": "prop"
																},
																"height": {
																	"H": "'40px'",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "true",
																	"T": "prop"
																}
															},
															"E": {
																"click": {
																	"H": "// debugger;\r\ncomponents.as_loadingCustomComp.open();\r\nquick.MM.trigger('printDocument');",
																	"P": "mouseEvent:unknown | undefined",
																	"HL": "TS"
																}
															},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_51",
																					"T": "prop"
																				},
																				"text": {
																					"H": "'Teklifi Yazdır'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_51"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						],
																						"md": [],
																						"lg": []
																					},
																					"class": "text-body-1 font-weight-regular"
																				}
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_50"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1"
																}
															}
														},
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "EdtrComp_52",
																	"T": "prop"
																},
																"depressed": {
																	"H": "true",
																	"T": "prop"
																},
																"visible": {
																	"H": "true",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "true",
																	"T": "prop"
																},
																"color": {
																	"H": "'#2171DC'",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "true",
																	"T": "prop"
																},
																"height": {
																	"H": "'40px'",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "true",
																	"T": "prop"
																}
															},
															"E": {
																"click": {
																	"H": "debugger;\r\nquick.MM.trigger('sendPolicyEmail');",
																	"P": "mouseEvent:unknown | undefined",
																	"HL": "TS"
																}
															},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_53",
																					"T": "prop"
																				},
																				"text": {
																					"H": "'Teklifi E-Posta İle Gönder'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_53"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						]
																					},
																					"class": "text-body-1 font-weight-regular"
																				}
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_52"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "EdtrComp_47",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_47"
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"d:d-flex",
															"sp:pt-3",
															"sp:pb-0",
															"j:justify-start"
														]
													},
													"class": "d-flex pt-3 pb-0 justify-start"
												}
											},
											"S": {
												"xs-xl": {
													"col": "",
													"flexDirection": "column",
													"alignItems": "",
													"justifyContent": "",
													"marginLeft": "",
													"marginRight": "",
													"marginBottom": "",
													"marginTop": "",
													"paddingTop": "12px",
													"paddingBottom": "12px",
													"paddingLeft": "12px",
													"paddingRight": "12px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "btnUpdateProposal",
																	"T": "prop",
																	"HL": "QS"
																},
																"depressed": {
																	"H": "true",
																	"T": "prop"
																},
																"visible": {
																	"H": "true",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "true",
																	"T": "prop"
																},
																"color": {
																	"H": "'#2171DC'",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "true",
																	"T": "prop"
																},
																"height": {
																	"H": "'40px'",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "true",
																	"T": "prop"
																}
															},
															"E": {
																"click": {
																	"H": "debugger;\r\n//updateProposal\r\n(components.as_loadingCustomComp).open();\r\nlet getPolicyInfo = quick.store.get('$policyInfo');\r\nlet getAssuranceInfo = quick.store.get('$getAssuranceCompInfo');\r\nlet getBranchCode = getAssuranceInfo.branchCode;\r\nlet getAssuranceOwnerInfo = quick.store.get('$assuranceOwnerInfoSet');\r\nlet customerInfoType = getAssuranceOwnerInfo?.customerInfoType;\r\nlet customerInfoType2 = quick.store.get(\"$saveInsuredContactResp\")?.customerInfoType;\r\nlet insuranceCustomerNumber = quick.store.get(\"$saveInsuranceResp\")?.externalContactNumber;\r\nlet insuredCustomerNumber = quick.store.get(\"$saveInsuredContactResp\")?.externalContactNumber;\r\nlet packagePKG3 = quick.store.get('$packageDetailPKG3');\r\nlet createProposalResp = quick.store.get('$createProposalResp');\r\nlet externalContactNumber;\r\nif (insuredCustomerNumber) {\r\n  externalContactNumber = insuredCustomerNumber;\r\n}\r\nelse {\r\n  externalContactNumber = insuranceCustomerNumber;\r\n}\r\n\r\nlet coverIVOsList = [];\r\ncoverIVOsList = quick.store.get('$coverIVOsList');\r\n\r\nlet requestData = {\r\n  policyInfo: {\r\n    policyInfoType: packagePKG3?.type, //\"PACC\"\r\n    insuranceType: packagePKG3?.type, //\"PACC\"\r\n    insurancePackageId: packagePKG3?.packageId,\r\n    ...getPolicyInfo,\r\n    branchCode: getBranchCode,\r\n    ownerUserInfo: {\r\n      userId: (<any>quick.containerServices).getUserContext().userid\r\n    },\r\n    insurerInfo: {\r\n      customerInfoType: customerInfoType,\r\n      insuranceCustomerNumber: insuranceCustomerNumber,\r\n      customerNumber: insuranceCustomerNumber,\r\n      contactRole: \"6\"\r\n    },\r\n    ...(insuredCustomerNumber ? {\r\n      insuredInfo: {\r\n        customerInfoType: customerInfoType2,\r\n        insuranceCustomerNumber: insuredCustomerNumber,\r\n        customerNumber: insuredCustomerNumber,\r\n        contactRole: \"1\"\r\n      }\r\n    } : {\r\n      insuredInfo: {\r\n        customerInfoType: customerInfoType,\r\n        insuranceCustomerNumber: insuranceCustomerNumber,\r\n        customerNumber: insuranceCustomerNumber,\r\n        contactRole: \"1\"\r\n      }\r\n    }),\r\n    proposalNo: createProposalResp?.proposalNumber, //701488453,\r\n    revisionNo: quick.store.get('$revisionNo'), //createProposalResp?.revisionNumber, //0,\r\n    paymentTermsList: {\r\n      collectionMethodVORef: {\r\n        referenceDataType: {\r\n          code: 4,\r\n          category: \"Sanal POS\"\r\n        }\r\n      },\r\n      paymentsTermsVORef: {\r\n        referenceDataType: {\r\n          code: 2000085,\r\n          category: \"1 Taksit\"\r\n        }\r\n      },\r\n      numOfInstallment: 1\r\n    },\r\n    assetsList: {\r\n      ...coverIVOsList,\r\n      externalContactNumber: externalContactNumber\r\n    },\r\n    productRelatedList: {\r\n      packageTypeVORef: {\r\n        referenceDataType: {\r\n          code: packagePKG3?.asChannelCode //1000017\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nlet serviceRequest: IRequest = {\r\n  url: '/api/wrapperclient/updateProposal',\r\n  http: 'POST',\r\n  data: requestData,\r\n  onFail: 'empty',\r\n  onSuccess: 'empty',\r\n  responseField: 'empty',\r\n  blockRender: false,\r\n}\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n  (components.as_loadingCustomComp).close();\r\n  if (resp?.data) {\r\n    quick.store.set('$revisionNo', resp?.data?.revisionNumber);\r\n    quick.MM.trigger('savePolicyInfo'); //updateProposalSuccess\r\n  }\r\n})\r\n  .catch((err) => {\r\n    (components.as_loadingCustomComp).close();\r\n    let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n    (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n  });",
																	"P": "mouseEvent:unknown | undefined",
																	"HL": "TS"
																}
															},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_122",
																					"T": "prop"
																				},
																				"text": {
																					"H": "'Poliçe Oluştur'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_122"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						],
																						"lg": []
																					},
																					"class": "text-body-1 font-weight-regular"
																				}
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_121"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "EdtrComp_116",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_116"
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"d:d-flex",
															"sp:pt-3",
															"sp:pb-0",
															"j:justify-end"
														]
													},
													"class": "d-flex pt-3 pb-0 justify-end"
												}
											},
											"S": {
												"xs-xl": {
													"col": "",
													"flexDirection": "column",
													"alignItems": "",
													"justifyContent": "",
													"marginLeft": "",
													"marginRight": "",
													"marginBottom": "",
													"marginTop": "",
													"paddingTop": "12px",
													"paddingBottom": "12px",
													"paddingLeft": "12px",
													"paddingRight": "12px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_46"
							},
							"O": {
								"cType": "slot"
							},
							"S": {
								"xs-xl": {
									"marginLeft": "0px",
									"marginRight": "0px",
									"marginBottom": "0px",
									"marginTop": "0px",
									"paddingTop": "",
									"paddingBottom": "",
									"paddingLeft": "",
									"paddingRight": "",
									"width": "",
									"height": "",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pt-0",
							"sp:pb-0"
						]
					},
					"class": "pt-0 pb-0"
				}
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_loadingCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bankasASPACC/common/as_loadingCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_78",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_78"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_67"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertSuccess",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bankasASPACC/common/as_alertCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "'success'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "'Tamam'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_400_1_visible": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "components.as_alertSuccess.close();",
					"C": true,
					"HL": "TS"
				},
				"btn1ClickEvent": {
					"H": "components.as_alertSuccess.close();",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_41",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_41"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_40"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bankasASPACC/common/as_alertCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "'error'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "'Tamam'",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "components.as_alertCustomComp.close();",
					"C": true,
					"HL": "TS"
				},
				"btn1ClickEvent": {
					"H": "components.as_alertCustomComp.close();",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_62",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_62"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_61"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		}
	],
	"cJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "╬false╩╩",
					"T": "prop"
				}
			},
			"E": {
				"setData": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar tmpItemList = [];\r\ncomponents.dt_assuranceList.items = [];\r\nvar assuranceList = data.filter(function (contact) { var _a; return ((_a = contact.contactRole) === null || _a === void 0 ? void 0 : _a.description) === \"Sigortalı\"; });\r\nassuranceList.forEach(function (key) {\r\n    var tmpItem = {\r\n        name: key.firstName + ' ' + key.lastName,\r\n        legalType: key.legalType,\r\n    };\r\n    tmpItemList.push(tmpItem);\r\n});\r\ncomponents.dt_assuranceList.items = tmpItemList;\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"savePolicyInfo": {
					"H": "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\n(components.as_loadingCustomComp).open();\r\nvar createProposalResp = quick.store.get('$createProposalResp');\r\nvar proposalNo = createProposalResp === null || createProposalResp === void 0 ? void 0 : createProposalResp.proposalNumber; //701488453,\r\nvar revisionNo = createProposalResp === null || createProposalResp === void 0 ? void 0 : createProposalResp.revisionNumber; //0,\r\nvar getPolicyInfo = quick.store.get('$policyInfo');\r\nvar getAssuranceInfo = quick.store.get('$getAssuranceCompInfo');\r\nvar getBranchCode = getAssuranceInfo.branchCode;\r\nvar getAssuranceOwnerInfo = quick.store.get('$assuranceOwnerInfoSet');\r\nvar customerInfoType = getAssuranceOwnerInfo === null || getAssuranceOwnerInfo === void 0 ? void 0 : getAssuranceOwnerInfo.customerInfoType;\r\nvar customerInfoType2 = (_a = quick.store.get(\"$saveInsuredContactResp\")) === null || _a === void 0 ? void 0 : _a.customerInfoType;\r\nvar insuranceCustomerNumber = (_b = quick.store.get(\"$saveInsuranceResp\")) === null || _b === void 0 ? void 0 : _b.externalContactNumber;\r\nvar insuredCustomerNumber = (_c = quick.store.get(\"$saveInsuredContactResp\")) === null || _c === void 0 ? void 0 : _c.externalContactNumber;\r\nvar customerInfoId = quick.store.get(\"$saveInsuranceResp\").customerInfoId;\r\nvar customerInsuredInfoId = (_d = quick.store.get(\"$saveInsuredContactResp\")) === null || _d === void 0 ? void 0 : _d.customerInfoId;\r\nvar packagePKG3 = quick.store.get('$packageDetailPKG3');\r\nvar externalContactNumber;\r\nif (insuredCustomerNumber) {\r\n    externalContactNumber = insuredCustomerNumber;\r\n}\r\nelse {\r\n    externalContactNumber = insuranceCustomerNumber;\r\n}\r\nvar reqData = __assign(__assign(__assign(__assign({ revisionNo: revisionNo, proposalNo: proposalNo, policyType: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.type, insuranceType: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.type, insurancePackageId: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.packageId, branchCode: getBranchCode }, getPolicyInfo), { \"netPremium\": {\r\n        \"amount\": {\r\n            \"amount\": (_g = (_f = (_e = createProposalResp === null || createProposalResp === void 0 ? void 0 : createProposalResp.policySummary) === null || _e === void 0 ? void 0 : _e.netPremiumAmount) === null || _f === void 0 ? void 0 : _f.amountTL) === null || _g === void 0 ? void 0 : _g.amount,\r\n            \"currency\": \"TL\"\r\n        },\r\n        \"exchangeRate\": null\r\n    }, \"grossPremium\": {\r\n        \"amount\": {\r\n            \"amount\": (_k = (_j = (_h = createProposalResp === null || createProposalResp === void 0 ? void 0 : createProposalResp.policySummary) === null || _h === void 0 ? void 0 : _h.grossPremiumAmount) === null || _j === void 0 ? void 0 : _j.amountTL) === null || _k === void 0 ? void 0 : _k.amount,\r\n            \"currency\": \"TL\"\r\n        },\r\n        \"exchangeRate\": null\r\n    }, \"currencyCode\": {\r\n        \"referenceDataType\": {\r\n            \"code\": \"TL\"\r\n        }\r\n    }, ownerUserInfo: {\r\n        userId: quick.containerServices.getUserContext().userid\r\n    }, isPolicyRenew: false, insurerInfo: {\r\n        customerInfoType: customerInfoType,\r\n        \"customerInfoId\": customerInfoId,\r\n        \"insuranceCustomerNumber\": insuranceCustomerNumber,\r\n        contactRole: \"6\"\r\n    } }), (insuredCustomerNumber ? {\r\n    insuredInfo: {\r\n        customerInfoType: customerInfoType2,\r\n        customerInfoId: customerInsuredInfoId,\r\n        insuranceCustomerNumber: insuredCustomerNumber,\r\n        contactRole: \"1\"\r\n    }\r\n} : {\r\n    insuredInfo: {\r\n        customerInfoType: customerInfoType,\r\n        \"customerInfoId\": customerInfoId,\r\n        \"insuranceCustomerNumber\": insuranceCustomerNumber,\r\n        contactRole: \"1\"\r\n    }\r\n})), { channelCode: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.asChannelCode, externalContactNumer: insuranceCustomerNumber });\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/bnkasaspolicy/save/policy',\r\n    http: 'POST',\r\n    data: reqData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n    headers: { \"employeeId\": quick.store.get('$redirector') }\r\n};\r\n(_l = quick.Request.async(serviceRequest)) === null || _l === void 0 ? void 0 : _l.then(function (resp) {\r\n    (components.as_loadingCustomComp).close();\r\n    if (resp === null || resp === void 0 ? void 0 : resp.data) {\r\n        quick.store.set('$bankRefId', resp.data);\r\n        quick.Quick.go(\"/static/ui-bankasASPACC/atworkFarmerProtectionPages/compAtworkFarmerProtectionPremiumCollection.qjson\"); //Prim tahsilat ekranı\r\n    }\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    (components.as_loadingCustomComp).close();\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
					"C": true,
					"HL": "JS"
				},
				"sendPolicyEmail": {
					"H": "var _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\ncomponents.as_loadingCustomComp.open();\r\n//Poliçeyi E-Posta İle Gönder\r\nvar requestData = {\r\n    \"policyNo\": 1679936125,\r\n    \"renewalNo\": quick.store.get('$renewalNumber'),\r\n    \"sendPolicyPDF\": 1,\r\n    \"sendInformationFormPDF\": 0,\r\n    \"sendGeneralConditionsPDF\": 0,\r\n    \"email\": quick.store.get('$customerInfo').communicationInfo.emailAddresses[0].address,\r\n    \"policyDescription\": quick.store.get('$policyType')\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo'); //consumerCode ve screenName setlendi.\r\nvar serviceRequest = {\r\n    url: '/api/wrapperclient/sendPolicyEmail',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n};\r\n(_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n    var _a;\r\n    components.as_loadingCustomComp.close();\r\n    if ((_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.emailSent) {\r\n        var successMessage = (quick.store.get('$customerInfo').communicationInfo.emailAddresses[0].address) + ' e-posta adresine gönderim sağlanmıştır.'; //(customerContext?.customerEmail ?? '')\r\n        components.as_alertSuccess.setLabelText({ labelData: { name: 'lbl_400_1', text: successMessage } });\r\n        components.as_alertSuccess.open();\r\n    }\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    quick.EM.trace('hata aldı');\r\n    components.as_loadingCustomComp.close();\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
					"C": true,
					"HL": "JS"
				},
				"setConsumerAndScreenInfo": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n; // debugger;\r\nvar consumer = 'TANE.BANKASUR';\r\nvar screen = 'PACC';\r\nquick.store.set('$customConsumerCode', consumer);\r\nquick.store.set('$customScreenName', screen);\r\n",
					"C": true,
					"HL": "JS"
				},
				"printDocument": {
					"H": "var _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar getAssuranceOwnerInfo = quick.store.get('$getAssuranceCompInfo');\r\nvar branchCode = getAssuranceOwnerInfo.branchCode;\r\nvar branchName = getAssuranceOwnerInfo.branchName;\r\nvar name = getAssuranceOwnerInfo.name;\r\nvar surname = getAssuranceOwnerInfo.surname;\r\nvar phoneNumber = getAssuranceOwnerInfo.phoneList.phoneNumber.phoneNumber;\r\nvar faxNumber = phoneNumber; //(components.as_assuranceOwnerInfo as any).getAssuranceOwnerInfo().faxNumber;\r\nvar address = getAssuranceOwnerInfo.addressList.address.line;\r\nvar packagePKG3 = quick.store.get('$packageDetailPKG3');\r\nvar requestData = {\r\n    \"firmType\": \"AS\",\r\n    \"documentType\": \"info\",\r\n    \"documentFormat\": \"pdf\",\r\n    \"insuranceType\": \"PACC\",\r\n    \"packageCode\": packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.packageId,\r\n    \"userInfo\": {\r\n        \"userId\": quick.containerServices.getUserContext().userid,\r\n        \"branch\": quick.containerServices.getUserContext().branchCode,\r\n        \"name\": quick.containerServices.getUserContext().name,\r\n        \"surname\": quick.containerServices.getUserContext().surname\r\n    },\r\n    \"branchInfo\": {\r\n        \"code\": branchCode,\r\n        \"address\": address,\r\n        \"name\": branchName,\r\n        \"phoneNumber\": phoneNumber,\r\n        \"faxNumber\": faxNumber,\r\n        \"contactName\": name + surname\r\n    },\r\n    \"insurerInfo\": {\r\n        \"customerNumber\": quick.store.get('$customerInfo').customerNumber, //'164014466'\r\n    }\r\n};\r\nquick.store.set('$createDocFromTemplateRequest', requestData);\r\nquick.MM.trigger('setDatasConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/wrapperclient/createDocumentFromTemplate',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n};\r\n(_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n    var _a, _b, _c, _d;\r\n    (components.as_loadingCustomComp).close();\r\n    if (resp === null || resp === void 0 ? void 0 : resp.data) {\r\n        components.as_loadingCustomComp.close();\r\n        quick.store.get('$bnkas_utils').print('name.pdf', (_b = (_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.createDocumentFromTemplateDTO) === null || _b === void 0 ? void 0 : _b.content, '');\r\n        quick.store.set('$content', (_d = (_c = resp === null || resp === void 0 ? void 0 : resp.data) === null || _c === void 0 ? void 0 : _c.createDocumentFromTemplateDTO) === null || _d === void 0 ? void 0 : _d.content);\r\n    }\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    (components.as_loadingCustomComp).close();\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
					"C": true,
					"HL": "JS"
				},
				"calculatePremium": {
					"H": "var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar datas = quick.store.get(\"$createProposalResp\");\r\n//Toplam Tutar\r\nvar grossPremiumAmount;\r\nvar commissionFeeAmount;\r\nvar decimal;\r\nif ((_c = (_b = (_a = datas === null || datas === void 0 ? void 0 : datas.policySummary) === null || _a === void 0 ? void 0 : _a.grossPremiumAmount) === null || _b === void 0 ? void 0 : _b.amountTL) === null || _c === void 0 ? void 0 : _c.amount) {\r\n    quick.store.set('$cashPaymentAmount', (_f = (_e = (_d = datas === null || datas === void 0 ? void 0 : datas.policySummary) === null || _d === void 0 ? void 0 : _d.grossPremiumAmount) === null || _e === void 0 ? void 0 : _e.amountTL) === null || _f === void 0 ? void 0 : _f.amount);\r\n    grossPremiumAmount = quick.Quick.toMoney(Number((_j = (_h = (_g = datas === null || datas === void 0 ? void 0 : datas.policySummary) === null || _g === void 0 ? void 0 : _g.grossPremiumAmount) === null || _h === void 0 ? void 0 : _h.amountTL) === null || _j === void 0 ? void 0 : _j.amount)); //'124.0';\r\n    if (grossPremiumAmount.split(',')[1]) { }\r\n    else {\r\n        decimal = ',00';\r\n        grossPremiumAmount = grossPremiumAmount + decimal;\r\n    }\r\n    quick.store.set('$totalAmount', grossPremiumAmount);\r\n    commissionFeeAmount = quick.Quick.toMoney(Number((_m = (_l = (_k = datas === null || datas === void 0 ? void 0 : datas.policySummary) === null || _k === void 0 ? void 0 : _k.commissionFeeAmount) === null || _l === void 0 ? void 0 : _l.amountTL) === null || _m === void 0 ? void 0 : _m.amount)); //'124.0';\r\n    if (commissionFeeAmount.split(',')[1]) { }\r\n    else {\r\n        decimal = ',00';\r\n        commissionFeeAmount = commissionFeeAmount + decimal;\r\n    }\r\n    quick.store.set('$commissionFeeAmount', commissionFeeAmount);\r\n}\r\nvar newData;\r\nvar newData2;\r\nvar newDatasReceiptType = [];\r\nvar newDatasPaymentMethodList = [];\r\nvar payMethod = (_q = (_p = (_o = datas === null || datas === void 0 ? void 0 : datas.policySummary) === null || _o === void 0 ? void 0 : _o.paymentTerms) === null || _p === void 0 ? void 0 : _p.paymentTermList) === null || _q === void 0 ? void 0 : _q.paymentMethod;\r\nif (payMethod) {\r\n    for (var i = 0; i < payMethod.length; i++) {\r\n        if (payMethod[i].paymentCode) {\r\n            newData = { value: payMethod[i].paymentCode.id, text: payMethod[i].paymentCode.type };\r\n            newDatasReceiptType.push(newData);\r\n            newData2 = {\r\n                idPaymentCode: payMethod[i].paymentCode.id,\r\n                typePaymentCode: payMethod[i].paymentCode.type,\r\n                codeExtCode: payMethod[i].extCode.code,\r\n                valueExtCode: payMethod[i].extCode.value\r\n            };\r\n            newDatasPaymentMethodList.push(newData2);\r\n        }\r\n    }\r\n}\r\nquick.store.set('$itemsReceiptType', newDatasReceiptType);\r\nquick.store.set('$paymentMethodList', newDatasPaymentMethodList);\r\ndebugger;\r\nvar newDatasInstallmentCountCredit = [];\r\nvar newDatasInstallmentCountAccount = [];\r\nvar newDatasInstallmentCountCreditInstallment = [];\r\nvar newDatasInstallmentCountAccountInstallment = [];\r\nvar newDatasInstallmentCountCash = [];\r\nvar installmentTerm = (_t = (_s = (_r = datas === null || datas === void 0 ? void 0 : datas.policySummary) === null || _r === void 0 ? void 0 : _r.paymentTerms) === null || _s === void 0 ? void 0 : _s.installmentTypeList) === null || _t === void 0 ? void 0 : _t.installmentTerm;\r\nvar typeInstallmentTerm;\r\nvar installmentTermList = [];\r\nvar newInstallmentTerm;\r\nvar installmentGrossPremiumAmount;\r\nif ((_w = (_v = (_u = datas === null || datas === void 0 ? void 0 : datas.policySummary) === null || _u === void 0 ? void 0 : _u.paymentTerms) === null || _v === void 0 ? void 0 : _v.installmentTypeList) === null || _w === void 0 ? void 0 : _w.installmentTerm) {\r\n    for (var i = 0; i < installmentTerm.length; i++) {\r\n        if (installmentTerm[i].installmentPremiumInfo) {\r\n            installmentGrossPremiumAmount = quick.Quick.toMoney(Number((_y = (_x = installmentTerm[i]) === null || _x === void 0 ? void 0 : _x.installmentPremiumInfo) === null || _y === void 0 ? void 0 : _y.grossPremium)); //Tahsil Edilecek tutar\r\n            if (installmentGrossPremiumAmount.split(',')[1]) { }\r\n            else {\r\n                decimal = ',00';\r\n                installmentGrossPremiumAmount = installmentGrossPremiumAmount + decimal;\r\n            }\r\n        }\r\n        else {\r\n            installmentGrossPremiumAmount = grossPremiumAmount;\r\n        }\r\n        newInstallmentTerm = {\r\n            codeExtCode: installmentTerm[i].extCode.code,\r\n            valueExtcode: installmentTerm[i].extCode.value,\r\n            paymentMethodCode: installmentTerm[i].paymentMethod.extCode.code,\r\n            paymentMethodType: installmentTerm[i].paymentMethod.paymentCode.type,\r\n            paymentMethodId: installmentTerm[i].paymentMethod.paymentCode.id,\r\n            premiumInfoGrossPremium: installmentGrossPremiumAmount\r\n        };\r\n        installmentTermList.push(newInstallmentTerm);\r\n        typeInstallmentTerm = (installmentTerm[i].paymentMethod.paymentCode.type).toLowerCase();\r\n        if (typeInstallmentTerm.includes(\"taksit\")) {\r\n            if (typeInstallmentTerm.includes(\"cari\")) {\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountAccountInstallment.push(newData);\r\n            }\r\n            else if (typeInstallmentTerm.includes(\"kredi\")) {\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountCreditInstallment.push(newData);\r\n            }\r\n        }\r\n        else {\r\n            if (typeInstallmentTerm.includes(\"cari\")) {\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountAccount.push(newData);\r\n            }\r\n            else if (typeInstallmentTerm.includes(\"kredi\")) {\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountCredit.push(newData);\r\n            }\r\n            else { //Nakit\r\n                newData = { value: installmentTerm[i].extCode.code, text: installmentTerm[i].extCode.value };\r\n                newDatasInstallmentCountCash.push(newData);\r\n            }\r\n        }\r\n    }\r\n}\r\nquick.store.set('$installmentTermList', installmentTermList);\r\nquick.store.set('$itemsInstallmentCountCredit', newDatasInstallmentCountCredit);\r\nquick.store.set('$itemsInstallmentCountAccount', newDatasInstallmentCountAccount);\r\nquick.store.set('$itemsInstallmentCountCreditInstallment', newDatasInstallmentCountCreditInstallment);\r\nquick.store.set('$itemsInstallmentCountAccountInstallment', newDatasInstallmentCountAccountInstallment);\r\nquick.store.set('$itemsInstallmentCountCash', newDatasInstallmentCountCash);\r\ncomponents.vauto_numberOfInstallments.items = newDatasInstallmentCountCreditInstallment;\r\ncomponents.txt_cashAmount.qValue = grossPremiumAmount;\r\n",
					"C": true,
					"HL": "JS"
				},
				"setTable": {
					"H": "var _a, _b;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar setItems = [];\r\nvar disabledRowList = [];\r\nvar checkedTrueList = [];\r\nvar disabledTxtfield = [];\r\nvar changeAmountRowList = [];\r\nvar i;\r\nvar j;\r\nvar DEATH = \"20000099\"; //20000099 - Ölüm\r\nvar DISABILITY = \"20000100\"; //20000100 - Sürekli Sakatlık\r\nvar TREATMENT = \"20000101\"; //20000101 - Tedavi Masrafları\r\nvar list = (_a = quick.store.get('$coverListResp')) === null || _a === void 0 ? void 0 : _a.coverDetailList;\r\ndebugger;\r\nvar index = 0;\r\nlist === null || list === void 0 ? void 0 : list.forEach(function (serviceResponse) {\r\n    quick.Quick.createComponent({\r\n        templateCompQID: 'dt_assuranceList', newCompQID: 'dt_assuranceList' +\r\n            index, dataSource: list, place: 'Before', placeQID: 'colCreatePlace'\r\n    });\r\n    index += 1;\r\n});\r\nfor (i = 0; i < (list === null || list === void 0 ? void 0 : list.length); i++) {\r\n    quick.getComponent('dt_assuranceList_dt_assuranceList' + i).headers[0].text = list[i].coverName;\r\n    for (j = 0; j < ((_b = list[i]) === null || _b === void 0 ? void 0 : _b.childCoverDetailList).length; j++) {\r\n        list[i].childCoverDetailList[j]['rowId'] = i;\r\n        list[i].childCoverDetailList[j]['rowDisabled'] = false;\r\n        if (list[i].childCoverDetailList[j].coverType == '1') {\r\n            list[i].childCoverDetailList[j]['rowDisabled'] = true;\r\n            disabledRowList.push(list[i].childCoverDetailList[j]);\r\n        }\r\n        if (list[i].childCoverDetailList[j].coverType == '2') {\r\n            list[i].childCoverDetailList[j]['checkedTrue'] = true;\r\n            checkedTrueList.push(list[i].childCoverDetailList[j]);\r\n        }\r\n        debugger;\r\n        list[i].childCoverDetailList[j]['txtfiledDisabled'] = true;\r\n        if (list[i].childCoverDetailList[j].packageId == DEATH ||\r\n            list[i].childCoverDetailList[j].packageId == DISABILITY ||\r\n            list[i].childCoverDetailList[j].packageId == TREATMENT &&\r\n                (list[i].childCoverDetailList[j].coverType == '1')) { //Limit değiştirilebilirdir.\r\n            changeAmountRowList = quick.store.get('changeAmountRow');\r\n            changeAmountRowList.push(list[i].childCoverDetailList[j]);\r\n            quick.store.set('changeAmountRow', changeAmountRowList);\r\n            list[i].childCoverDetailList[j]['txtfiledDisabled'] = false;\r\n            disabledTxtfield.push(list[i].childCoverDetailList[j]);\r\n        }\r\n        // if(list[i].childCoverDetailList[j].packageId == DEATH){\r\n        //     let deathPackage = list[i].childCoverDetailList[j];\r\n        //     quick.store.set('deathPackageDetail', deathPackage);\r\n        // }\r\n    }\r\n    quick.getComponent('dt_assuranceList_dt_assuranceList' + i).items = list[i].childCoverDetailList;\r\n    debugger;\r\n    quick.getComponent('dt_assuranceList_dt_assuranceList' + i).itemClass = function (item) {\r\n        if (item.rowDisabled == true && item.txtfiledDisabled == true) {\r\n            return \"unSelectedRow unSelectedTxtfield tblBackgroundNone\"; //Tüm row disable ama textfield etkilenmemeli.\r\n        }\r\n        else if (item.rowDisabled == true && item.txtfiledDisabled == false) {\r\n            return \"unSelectedRow tblBackgroundNone\";\r\n        }\r\n        else if (item.rowDisabled == false && item.txtfiledDisabled == true) {\r\n            return \"unSelectedTxtfield tblBackgroundNone\";\r\n        }\r\n        return \"tblBackgroundNone\";\r\n    };\r\n    disabledRowList === null || disabledRowList === void 0 ? void 0 : disabledRowList.forEach(function (item) {\r\n        var _a;\r\n        quick.store.set('postRenderSelectTrue', true);\r\n        (_a = quick.getComponent('dt_assuranceList_dt_assuranceList' + i)) === null || _a === void 0 ? void 0 : _a.select(item);\r\n    });\r\n    checkedTrueList === null || checkedTrueList === void 0 ? void 0 : checkedTrueList.forEach(function (item) {\r\n        var _a;\r\n        quick.store.set('postRenderSelectTrue', true);\r\n        (_a = quick.getComponent('dt_assuranceList_dt_assuranceList' + i)) === null || _a === void 0 ? void 0 : _a.select(item);\r\n    });\r\n    var tblList = quick.store.get('$tblList');\r\n    tblList.push(quick.getComponent('dt_assuranceList_dt_assuranceList' + i).items);\r\n    quick.store.set('$tblList', tblList);\r\n}\r\nquick.store.delete('postRenderSelectTrue');\r\n",
					"C": true,
					"HL": "JS"
				},
				"PostRender": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar newDataList = [];\r\nquick.store.set('$coverList', newDataList);\r\nvar tblList = [];\r\nquick.store.set('$tblList', tblList);\r\nvar changeAmountRowList = [];\r\nquick.store.set('changeAmountRow', changeAmountRowList);\r\nvar newAmountRowList = [];\r\nquick.store.set('newAmountRowList', newAmountRowList);\r\nquick.MM.trigger('setTable');\r\n",
					"TO": 1,
					"HL": "JS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child",
				"compDomClasses": "newDropBorder"
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "containerFarmerProtectionInfo",
					"T": "prop",
					"HL": "QS"
				},
				"class": {
					"H": "╬'container container--fluid'╩╩",
					"T": "class"
				},
				"visible": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"eager": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_2",
									"T": "prop"
								},
								"color": {
									"H": "╬'white'╩╩",
									"T": "prop"
								},
								"visible": {
									"H": "╬true╩╩",
									"T": "prop"
								},
								"elevation": {
									"H": "╬0╩╩",
									"T": "prop"
								},
								"disabled": {
									"H": "╬false╩╩",
									"T": "prop",
									"HL": "QS"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_3",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCard",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_20",
																					"T": "prop"
																				},
																				"color": {
																					"H": "╬'primary'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"height": {
																					"H": "╬'50px'╩╩",
																					"T": "prop"
																				},
																				"flat": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "╬'b-0'╩╩",
																					"T": "prop"
																				},
																				"dark": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VRow",
																							"P": {
																								"ID": {
																									"H": "EdtrComp_21",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VCol",
																											"C": {
																												"default": {
																													"c": [
																														{
																															"T": "QLabel",
																															"P": {
																																"ID": {
																																	"H": "EdtrComp_23",
																																	"T": "prop"
																																},
																																"tagType": {
																																	"H": "╬'span'╩╩",
																																	"T": "prop"
																																},
																																"visible": {
																																	"H": "╬true╩╩",
																																	"T": "prop"
																																},
																																"processHtml": {
																																	"H": "╬false╩╩",
																																	"T": "prop"
																																},
																																"text": {
																																	"H": "╬'İşte Kobi Sigorta Bilgileri'╩╩",
																																	"T": "prop",
																																	"HL": "QS"
																																}
																															},
																															"E": {},
																															"C": {},
																															"_Editor": {
																																"eID": "EdtrComp_23"
																															},
																															"O": {
																																"cType": "slot",
																																"layout": {
																																	"dOpt": {
																																		"xs": [
																																			"sp:ml-5",
																																			"tt:text-h6"
																																		]
																																	},
																																	"class": "ml-5 text-h6"
																																},
																																"compDomClasses": "q-label ml-5 text-h6 newDropBorder"
																															}
																														}
																													],
																													"cType": "slot"
																												}
																											},
																											"E": {},
																											"P": {
																												"ID": {
																													"H": "EdtrComp_22",
																													"T": "prop"
																												}
																											},
																											"_Editor": {
																												"eID": "EdtrComp_22"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"d:d-flex",
																															"fd:flex-column",
																															"sp:pb-3",
																															"sp:pt-3",
																															"sp:pl-3",
																															"sp:pr-3"
																														]
																													},
																													"class": "d-flex flex-column pb-3 pt-3 pl-3 pr-3"
																												},
																												"compDomClasses": "col d-flex flex-column pb-3 pt-3 pl-3 pr-3 pb-0 newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_21"
																							},
																							"O": {
																								"cType": "slot",
																								"compDomClasses": "row newDropBorder"
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_20"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				},
																				"compDomClasses": "v-card v-card--flat v-sheet theme--dark rounded-b-0 primary newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_19",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_19"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"sp:pt-0",
																			"sp:pl-0",
																			"sp:pr-0",
																			"sp:pb-3"
																		]
																	},
																	"class": "d-flex flex-column pt-0 pl-0 pr-0 pb-3"
																},
																"compDomClasses": "col d-flex flex-column pt-0 pl-0 pr-0 pb-3 pb-0 newDropBorder"
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_3"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_24",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VDataTable",
																			"P": {
																				"ID": {
																					"H": "dt_assuranceList",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"headers": {
																					"H": "╬[]╠{}╠=╣text╩╠'Teminat Adı'╩╩╠=╣align╩╠'start'╩╩╠=╣sortable╩╠false╩╩╠=╣value╩╠'coverName'╩╩╩╠{}╠=╣text╩╠'Limit'╩╩╠=╣value╩╠'limit'╩╩╠=╣sortable╩╠false╩╩╠=╣align╩╠'center'╩╩╠=╣width╩╠'250px'╩╩╩╠{}╠=╣text╩╠'Muafiyet'╩╩╠=╣align╩╠'start'╩╩╠=╣sortable╩╠false╩╩╠=╣value╩╠'excess'╩╩╩╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"noDataText": {
																					"H": "╬'Veri bulunamadı'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"noResultsText": {
																					"H": "╬'Veri bulunamadı'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDefaultFooter": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"showSelect": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"Render": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"items": {
																					"H": "╬[]╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"uniqueSlots": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"class": {
																					"H": "╬'tblBackgroundNone'╩╩",
																					"T": "class"
																				},
																				"itemKey": {
																					"H": "╬'text'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"click:row": {
																					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n//clickRow\r\nquick.EM.trace('Index= ' + index + ' Row= ' + row);\r\n",
																					"P": "index:any,row:IVDataTableClickRow",
																					"HL": "JS"
																				},
																				"item-selected": {
																					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\nrowObj;\r\nvar DEATH = \"20000099\"; //20000099 - Ölüm\r\nvar DISABILITY = \"20000100\"; //20000100 - Sürekli Sakatlık\r\nvar TREATMENT = \"20000101\"; //20000101 - Tedavi Masrafları\r\nvar coverListData;\r\nvar newDataList = [];\r\nif (quick.store.get('postRenderSelectTrue') == true) {\r\n}\r\nelse {\r\n    rowObj.item.selected = rowObj.value;\r\n    quick.EM.trace(rowObj.item.selected);\r\n    var rowId = rowObj.item.rowId; //Tablo'nun idsi\r\n    if (rowObj.item.packageId == DEATH ||\r\n        rowObj.item.packageId == DISABILITY ||\r\n        rowObj.item.packageId == TREATMENT &&\r\n            rowObj.value == true) { //Limit değiştirilebilirdir.\r\n        rowObj.item.txtfiledDisabled = false;\r\n    }\r\n    else {\r\n        rowObj.item.txtfiledDisabled = true;\r\n    }\r\n    quick.getComponent('dt_assuranceList_dt_assuranceList' + rowId).itemClass = function (item) {\r\n        if (item.rowDisabled == true && item.txtfiledDisabled == true) {\r\n            return \"unSelectedRow unSelectedTxtfield tblBackgroundNone\"; //Tüm row disable ama textfield etkilenmemeli.\r\n        }\r\n        else if (item.rowDisabled == true && item.txtfiledDisabled == false) {\r\n            return \"unSelectedRow tblBackgroundNone\";\r\n        }\r\n        else if (item.rowDisabled == false && item.txtfiledDisabled == true) {\r\n            return \"unSelectedTxtfield tblBackgroundNone\";\r\n        }\r\n        return \"tblBackgroundNone\";\r\n    };\r\n    debugger;\r\n    if (rowObj.value == true) {\r\n        newDataList = quick.store.get('$coverList');\r\n        // Aynı id'ye sahip bir öğe olup olmadığını kontrol et\r\n        var itemExists = newDataList.some(function (i) { return i.item.packageId === rowObj.item.packageId; });\r\n        if (!itemExists) {\r\n            newDataList.push(rowObj); // Eğer yoksa, ekle\r\n            quick.store.set('$coverList', newDataList);\r\n        }\r\n    }\r\n    else {\r\n        newDataList = quick.store.get('$coverList');\r\n        var isInList = newDataList.some(function (i) { return i.item.packageId === rowObj.item.packageId; });\r\n        quick.EM.trace(isInList);\r\n        if (isInList) {\r\n            // `filter()` ile id'ye göre objeyi çıkarıyoruz\r\n            var updatedList = newDataList.filter(function (i) { return i.item.packageId !== rowObj.item.packageId; });\r\n            quick.EM.trace(updatedList);\r\n            quick.store.set('$coverList', updatedList);\r\n        }\r\n        else {\r\n        }\r\n    }\r\n}\r\n",
																					"P": "rowObj:IVDataTableItemSelect",
																					"HL": "JS"
																				}
																			},
																			"C": {
																				"item.aggregatedLimitAmount": {
																					"c": [
																						{
																							"T": "VTextField",
																							"P": {
																								"ID": {
																									"H": "txt_aggregatedLimitAmount",
																									"T": "prop",
																									"HL": "QS"
																								},
																								"visible": {
																									"H": "╬true╩╩",
																									"T": "prop"
																								},
																								"hideDetails": {
																									"H": "╬true╩╩",
																									"T": "prop"
																								},
																								"DiscardFormat": {
																									"H": "╬true╩╩",
																									"T": "prop"
																								},
																								"dense": {
																									"H": "╬true╩╩",
																									"T": "prop"
																								},
																								"height": {
																									"H": "╬'40px'╩╩",
																									"T": "prop"
																								},
																								"outlined": {
																									"H": "╬true╩╩",
																									"T": "prop"
																								},
																								"rounded": {
																									"H": "╬true╩╩",
																									"T": "prop"
																								},
																								"suffix": {
																									"H": "╬'TRY'╩╩",
																									"T": "prop",
																									"HL": "QS"
																								},
																								"qValue": {
																									"H": "╬.╣item╩╠aggregatedLimitAmount╩╩╩",
																									"T": "prop",
																									"HL": "QS"
																								}
																							},
																							"E": {
																								"change": {
																									"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\nvar item;\r\nvar changeAmountRowList = [];\r\nvar newAmountRowList = [];\r\nchangeAmountRowList = quick.store.get('changeAmountRow');\r\nvar _loop_1 = function (i) {\r\n    if (changeAmountRowList[i].packageId == item.packageId) {\r\n        if (changeAmountRowList[i].aggregatedLimitAmount != value) {\r\n            item.aggregatedLimitAmount = value;\r\n            newAmountRowList = quick.store.get('newAmountRowList');\r\n            var itemExists = newAmountRowList.some(function (item) { return item.packageId === changeAmountRowList[i].packageId; });\r\n            if (itemExists) {\r\n                //Push yapmayacağız da olan datanın tutarını güncelleyeceğiz.\r\n            }\r\n            else {\r\n                newAmountRowList.push(changeAmountRowList[i]);\r\n            }\r\n            quick.store.set('newAmountRowList', newAmountRowList);\r\n            return \"break\";\r\n        }\r\n    }\r\n};\r\nfor (var i = 0; i < changeAmountRowList.length; i++) {\r\n    var state_1 = _loop_1(i);\r\n    if (state_1 === \"break\")\r\n        break;\r\n}\r\n",
																									"P": "value:any",
																									"HL": "JS"
																								}
																							},
																							"C": {},
																							"_Editor": {
																								"eID": "EdtrComp_11"
																							},
																							"S": {
																								"xs-xl": {
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "",
																									"paddingBottom": "",
																									"paddingLeft": "",
																									"paddingRight": "",
																									"width": "",
																									"height": "",
																									"maxWidth": "",
																									"maxHeight": "",
																									"minWidth": "",
																									"minHeight": "",
																									"unlink": "false",
																									"unlinkMax": "false",
																									"unlinkMin": "false",
																									"isSizeCollapsed": "false",
																									"dense": "",
																									"labelDefaultFontColor": "#686868",
																									"labelDefaultFontFamily": "Roboto",
																									"labelDefaultFontSize": "16px",
																									"labelDefaultFontStyle": "normal",
																									"labelDefaultFontWeight": "400",
																									"labelDefaultCombinedFont": "Roboto-Regular",
																									"labelDefaultThemeFont": "Custom",
																									"prefixFontColor": "#000",
																									"prefixFontFamily": "Roboto",
																									"prefixFontSize": "16px",
																									"prefixFontStyle": "normal",
																									"prefixFontWeight": "400",
																									"prefixCombinedFont": "Roboto-Regular",
																									"prefixThemeFont": "Custom",
																									"PHFontColor": "#686868",
																									"PHFontFamily": "Roboto",
																									"PHFontSize": "16px",
																									"PHFontStyle": "normal",
																									"PHFontWeight": "400",
																									"PHCombinedFont": "Roboto-Regular",
																									"PHThemeFont": "Custom",
																									"inputFontColor": "#000",
																									"inputFontFamily": "Roboto",
																									"inputFontSize": "16px",
																									"inputFontStyle": "normal",
																									"inputFontWeight": "400",
																									"inputCombinedFont": "Roboto-Regular",
																									"inputDefaultThemeFont": "Custom",
																									"errorMessageFontColor": "#E96767",
																									"errorMessageFontFamily": "Roboto",
																									"errorMessageFontSize": "12px",
																									"errorMessageFontStyle": "normal",
																									"errorMessageFontWeight": "400",
																									"EMCombinedFont": "Roboto-Regular",
																									"errorMessageThemeFont": "Custom",
																									"errorMessageLineHeight": "",
																									"backgroundColor": "#ffffff",
																									"innerBoxShadow": "",
																									"activeBorderColor": "#1976d2",
																									"innerBoxSizing": "",
																									"innerBorderTopStyle": "solid",
																									"innerBorderRightStyle": "solid",
																									"innerBorderBottomStyle": "solid",
																									"innerBorderLeftStyle": "solid",
																									"innerBorderTopLeftRadius": "",
																									"innerBorderTopRightRadius": "",
																									"innerBorderBottomLeftRadius": "",
																									"innerBorderBottomRightRadius": "",
																									"innerBorderTopWidth": "1px",
																									"innerBorderRightWidth": "1px",
																									"innerBorderBottomWidth": "1px",
																									"innerBorderLeftWidth": "1px",
																									"innerDefaultBorderColor": "#0000006b",
																									"innerSides": "Top,Right,Bottom,Left",
																									"outlined": "true"
																								}
																							},
																							"O": {
																								"cType": "slot",
																								"compDomClasses": "v-input v-input--hide-details v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--prefix v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded undefined pt-0 newDropBorder"
																							}
																						}
																					],
																					"cType": "scopedSlot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_26"
																			},
																			"O": {
																				"cType": "scopedSlot",
																				"compDomClasses": "v-data-table theme--light tblBackgroundNone newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "colCreatePlace",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_25"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column"
																		]
																	},
																	"class": "d-flex flex-column"
																},
																"compDomClasses": "col d-flex flex-column pb-0 newDropBorder"
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_24"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "px",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "156px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_2"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"sp:pt-0",
											"sp:pl-3",
											"sp:pr-3",
											"sp:pb-3"
										]
									},
									"class": "pt-0 pl-3 pr-3 pb-3"
								},
								"compDomClasses": "v-card v-sheet theme--light elevation-0 white pt-0 pl-3 pr-3 pb-3 newDropBorder"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_4"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pt-0",
							"sp:pb-0"
						]
					},
					"class": "pt-0 pb-0"
				},
				"compDomClasses": "container container--fluid pt-0 pb-0 newDropBorder"
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "containerAmountInfo",
					"T": "prop",
					"HL": "QS"
				},
				"class": {
					"H": "╬'container container--fluid'╩╩",
					"T": "class"
				},
				"visible": {
					"H": "╬false╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"eager": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_71",
									"T": "prop"
								},
								"color": {
									"H": "╬'white'╩╩",
									"T": "prop"
								},
								"visible": {
									"H": "╬true╩╩",
									"T": "prop"
								},
								"elevation": {
									"H": "╬0╩╩",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_72",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCard",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_74",
																					"T": "prop"
																				},
																				"color": {
																					"H": "╬'primary'╩╩",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"height": {
																					"H": "╬'50px'╩╩",
																					"T": "prop"
																				},
																				"flat": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "╬'b-0'╩╩",
																					"T": "prop"
																				},
																				"dark": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VRow",
																							"P": {
																								"ID": {
																									"H": "EdtrComp_75",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VCol",
																											"C": {
																												"default": {
																													"c": [
																														{
																															"T": "QLabel",
																															"P": {
																																"ID": {
																																	"H": "EdtrComp_77",
																																	"T": "prop"
																																},
																																"tagType": {
																																	"H": "╬'span'╩╩",
																																	"T": "prop"
																																},
																																"text": {
																																	"H": "╬'Prim Tutarı'╩╩",
																																	"T": "prop",
																																	"HL": "QS"
																																},
																																"visible": {
																																	"H": "╬true╩╩",
																																	"T": "prop"
																																},
																																"processHtml": {
																																	"H": "╬false╩╩",
																																	"T": "prop"
																																}
																															},
																															"E": {},
																															"C": {},
																															"_Editor": {
																																"eID": "EdtrComp_77"
																															},
																															"O": {
																																"cType": "slot",
																																"layout": {
																																	"dOpt": {
																																		"xs": [
																																			"sp:ml-5",
																																			"tt:text-h6"
																																		]
																																	},
																																	"class": "ml-5 text-h6"
																																},
																																"compDomClasses": "q-label ml-5 text-h6 newDropBorder"
																															}
																														}
																													],
																													"cType": "slot"
																												}
																											},
																											"E": {},
																											"P": {
																												"ID": {
																													"H": "EdtrComp_76",
																													"T": "prop"
																												}
																											},
																											"_Editor": {
																												"eID": "EdtrComp_76"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"d:d-flex",
																															"fd:flex-column",
																															"sp:pb-3",
																															"sp:pt-3",
																															"sp:pl-3",
																															"sp:pr-3"
																														]
																													},
																													"class": "d-flex flex-column pb-3 pt-3 pl-3 pr-3"
																												},
																												"compDomClasses": "col d-flex flex-column pb-3 pt-3 pl-3 pr-3 pb-0 newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_75"
																							},
																							"O": {
																								"cType": "slot",
																								"compDomClasses": "row newDropBorder"
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_74"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				},
																				"compDomClasses": "v-card v-card--flat v-sheet theme--dark rounded-b-0 primary newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_73",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_73"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"sp:pt-0",
																			"sp:pl-0",
																			"sp:pr-0",
																			"sp:pb-2"
																		]
																	},
																	"class": "d-flex flex-column pt-0 pl-0 pr-0 pb-2"
																},
																"compDomClasses": "col d-flex flex-column pt-0 pl-0 pr-0 pb-2 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_72"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"backgroundColor": "",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "",
													"borderRightStyle": "",
													"borderBottomStyle": "",
													"borderLeftStyle": "",
													"borderTopLeftRadius": "",
													"borderTopRightRadius": "",
													"borderBottomLeftRadius": "",
													"borderBottomRightRadius": "",
													"borderTopWidth": "",
													"borderRightWidth": "",
													"borderBottomWidth": "",
													"borderLeftWidth": "",
													"defaultBorderColor": "",
													"sides": ""
												}
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_79",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_81",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "Ghost",
																											"P": {
																												"ID": {
																													"H": "EdtrComp_535",
																													"T": "prop"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_535"
																											},
																											"O": {
																												"cType": "child",
																												"compDomClasses": "editor-ghost-comp newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_82",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_82"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pr-3",
																											"sp:pl-3",
																											"c:col-3",
																											"sp:pb-0",
																											"sp:pt-3"
																										]
																									},
																									"class": "d-flex pr-3 pl-3 col-3 pb-0 pt-3"
																								},
																								"compDomClasses": "col d-flex pr-3 pl-3 col-3 pb-0 pt-3 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						},
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VTextField",
																											"P": {
																												"ID": {
																													"H": "txt_cashAmount",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"label": {
																													"H": "╬'Peşin Tutar'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"visible": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"hideDetails": {
																													"H": "╬false╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"DiscardFormat": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"dense": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"height": {
																													"H": "╬'40px'╩╩",
																													"T": "prop"
																												},
																												"outlined": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"rounded": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"disabled": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"suffix": {
																													"H": "╬'TRY'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_494"
																											},
																											"S": {
																												"xs-xl": {
																													"marginLeft": "",
																													"marginRight": "",
																													"marginBottom": "",
																													"marginTop": "",
																													"paddingTop": "",
																													"paddingBottom": "",
																													"paddingLeft": "",
																													"paddingRight": "",
																													"width": "",
																													"height": "",
																													"maxWidth": "",
																													"maxHeight": "",
																													"minWidth": "",
																													"minHeight": "",
																													"unlink": "false",
																													"unlinkMax": "false",
																													"unlinkMin": "false",
																													"isSizeCollapsed": "false",
																													"dense": "",
																													"labelDefaultFontColor": "#686868",
																													"labelDefaultFontFamily": "Roboto",
																													"labelDefaultFontSize": "16px",
																													"labelDefaultFontStyle": "normal",
																													"labelDefaultFontWeight": "400",
																													"labelDefaultCombinedFont": "Roboto-Regular",
																													"labelDefaultThemeFont": "Custom",
																													"prefixFontColor": "#000",
																													"prefixFontFamily": "Roboto",
																													"prefixFontSize": "16px",
																													"prefixFontStyle": "normal",
																													"prefixFontWeight": "400",
																													"prefixCombinedFont": "Roboto-Regular",
																													"prefixThemeFont": "Custom",
																													"PHFontColor": "#686868",
																													"PHFontFamily": "Roboto",
																													"PHFontSize": "16px",
																													"PHFontStyle": "normal",
																													"PHFontWeight": "400",
																													"PHCombinedFont": "Roboto-Regular",
																													"PHThemeFont": "Custom",
																													"inputFontColor": "#000",
																													"inputFontFamily": "Roboto",
																													"inputFontSize": "16px",
																													"inputFontStyle": "normal",
																													"inputFontWeight": "400",
																													"inputCombinedFont": "Roboto-Regular",
																													"inputDefaultThemeFont": "Custom",
																													"errorMessageFontColor": "#E96767",
																													"errorMessageFontFamily": "Roboto",
																													"errorMessageFontSize": "12px",
																													"errorMessageFontStyle": "normal",
																													"errorMessageFontWeight": "400",
																													"EMCombinedFont": "Roboto-Regular",
																													"errorMessageThemeFont": "Custom",
																													"errorMessageLineHeight": "",
																													"backgroundColor": "#ffffff",
																													"innerBoxShadow": "",
																													"activeBorderColor": "#1976d2",
																													"innerBoxSizing": "",
																													"innerBorderTopStyle": "solid",
																													"innerBorderRightStyle": "solid",
																													"innerBorderBottomStyle": "solid",
																													"innerBorderLeftStyle": "solid",
																													"innerBorderTopLeftRadius": "",
																													"innerBorderTopRightRadius": "",
																													"innerBorderBottomLeftRadius": "",
																													"innerBorderBottomRightRadius": "",
																													"innerBorderTopWidth": "1px",
																													"innerBorderRightWidth": "1px",
																													"innerBorderBottomWidth": "1px",
																													"innerBorderLeftWidth": "1px",
																													"innerDefaultBorderColor": "#0000006b",
																													"innerSides": "Top,Right,Bottom,Left",
																													"outlined": "true"
																												}
																											},
																											"O": {
																												"cType": "slot",
																												"compDomClasses": "v-input v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded undefined pt-0 newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_493",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_493"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pr-3",
																											"sp:pl-3",
																											"c:col-3",
																											"sp:pb-0",
																											"sp:pt-3"
																										]
																									},
																									"class": "d-flex pr-3 pl-3 col-3 pb-0 pt-3"
																								},
																								"compDomClasses": "col d-flex pr-3 pl-3 col-3 pb-0 pt-3 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_81"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "row newDropBorder"
																			}
																		},
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_86",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VAutocomplete",
																											"P": {
																												"ID": {
																													"H": "vauto_numberOfInstallments",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"eager": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"visible": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"label": {
																													"H": "╬'Taksit Sayısı'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"hideDetails": {
																													"H": "╬false╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"itemText": {
																													"H": "╬'text'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"itemValue": {
																													"H": "╬value╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"DiscardSettings": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"dense": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"height": {
																													"H": "╬'40px'╩╩",
																													"T": "prop"
																												},
																												"outlined": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"rounded": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"attach": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"items": {
																													"H": "╬[]╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"noDataText": {
																													"H": "╬'Veri bulunamadı'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"rules": {
																													"H": "╬[]╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"clearable": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												}
																											},
																											"E": {
																												"change": {
																													"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar receiptAmount;\r\nvar termList = quick.store.get('$installmentTermList');\r\nfor (var i = 0; i < termList.length; i++) {\r\n    if (termList[i].valueExtcode == components.vauto_numberOfInstallments.qValue.text) {\r\n        receiptAmount = termList[i].premiumInfoGrossPremium; //'Tahsil Edilecek Tutar'\r\n        break;\r\n    }\r\n}\r\n;\r\ncomponents.txt_installmentAmount.qValue = receiptAmount;\r\nif (components.rowAmountInformation.visible == false) {\r\n    components.rowAmountInformation.visible = true;\r\n}\r\n",
																													"HL": "JS"
																												},
																												"click:clear": {
																													"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\n// components.vauto_numberOfInstallments.qValue = '';\r\nquick.Quick.reset('vauto_numberOfInstallments');\r\nquick.Quick.reset('txt_installmentAmount');\r\nquick.EM.trace(components.vauto_numberOfInstallments.qValue);\r\nquick.EM.trace(components.txt_installmentAmount.qValue);\r\ncomponents.rowAmountInformation.visible = false;\r\n",
																													"P": "mouseEvent:unknown | undefined",
																													"HL": "JS"
																												}
																											},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_92"
																											},
																											"S": {
																												"xs-xl": {
																													"marginTop": "",
																													"marginRight": "",
																													"marginBottom": "",
																													"marginLeft": "",
																													"paddingTop": "",
																													"paddingRight": "",
																													"paddingBottom": "",
																													"paddingLeft": "",
																													"width": "",
																													"height": "",
																													"maxWidth": "",
																													"maxHeight": "",
																													"minWidth": "",
																													"minHeight": "",
																													"unlink": "false",
																													"unlinkMax": "false",
																													"unlinkMin": "false",
																													"isSizeCollapsed": "false",
																													"dense": "",
																													"defaultFontColor": "#666666",
																													"defaultFontFamily": "Roboto",
																													"defaultFontSize": "16px",
																													"defaultFontStyle": "normal",
																													"defaultFontWeight": "400",
																													"defaultCombinedFont": "Roboto-Regular",
																													"deafultThemeFont": "Custom",
																													"PHFontColor": "#9E9E9E",
																													"PHFontFamily": "Roboto",
																													"PHFontSize": "16px",
																													"PHFontStyle": "normal",
																													"PHFontWeight": "400",
																													"PHCombinedFont": "Roboto-Regular",
																													"PHThemeFont": "Custom",
																													"inputFontColor": "#000",
																													"inputFontFamily": "Roboto",
																													"inputFontSize": "16px",
																													"inputFontStyle": "normal",
																													"inputFontWeight": "400",
																													"inputCombinedFont": "Roboto-Regular",
																													"inputThemeFont": "Custom",
																													"menuFontColor": "#000",
																													"menuFontFamily": "Roboto",
																													"menuFontSize": "16px",
																													"menuFontStyle": "normal",
																													"menuFontWeight": "400",
																													"menuCombinedFont": "Roboto-Regular",
																													"menuThemeFont": "Custom",
																													"errorMessageFontColor": "#E96767",
																													"errorMessageFontFamily": "Roboto",
																													"errorMessageFontSize": "12px",
																													"errorMessageFontStyle": "normal",
																													"errorMessageFontWeight": "400",
																													"EMCombinedFont": "Roboto-Regular",
																													"errorMessageThemeFont": "Custom",
																													"errorMessageLineHeight": "",
																													"backgroundColor": "#FFFFFF",
																													"menuBackgroundColor": "#FFFFFF",
																													"menuDefaultHoverColor": "#000000de",
																													"menuActiveHoverColor": "#1976d2",
																													"innerBoxShadow": "",
																													"menuBoxShadow": "",
																													"activeBorderColor": "#1976d2",
																													"innerBoxSizing": "",
																													"innerBorderTopStyle": "solid",
																													"innerBorderRightStyle": "solid",
																													"innerBorderBottomStyle": "solid",
																													"innerBorderLeftStyle": "solid",
																													"innerBorderTopLeftRadius": "",
																													"innerBorderTopRightRadius": "",
																													"innerBorderBottomLeftRadius": "",
																													"innerBorderBottomRightRadius": "",
																													"innerBorderTopWidth": "1px",
																													"innerBorderRightWidth": "1px",
																													"innerBorderBottomWidth": "1px",
																													"innerBorderLeftWidth": "1px",
																													"innerDefaultBorderColor": "#0000006b",
																													"innerSides": "Top,Right,Bottom,Left",
																													"outlined": "true"
																												}
																											},
																											"O": {
																												"cType": "slot",
																												"compDomClasses": "v-input v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete undefined newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_91",
																									"T": "prop"
																								},
																								"visible": {
																									"H": "╬true╩╩",
																									"T": "prop",
																									"HL": "QS"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_91"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pl-3",
																											"sp:pb-0",
																											"sp:pt-0",
																											"sp:pr-3",
																											"c:col-3"
																										]
																									},
																									"class": "d-flex pl-3 pb-0 pt-0 pr-3 col-3"
																								},
																								"compDomClasses": "col d-flex pl-3 pb-0 pt-0 pr-3 col-3 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						},
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VTextField",
																											"P": {
																												"ID": {
																													"H": "txt_installmentAmount",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"label": {
																													"H": "╬'Taksitli Tutar (Kredi Kartı)'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"visible": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"hideDetails": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"DiscardFormat": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"dense": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"height": {
																													"H": "╬'40px'╩╩",
																													"T": "prop"
																												},
																												"outlined": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"rounded": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"disabled": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"suffix": {
																													"H": "╬'TRY'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_85"
																											},
																											"S": {
																												"xs-xl": {
																													"marginLeft": "",
																													"marginRight": "",
																													"marginBottom": "",
																													"marginTop": "",
																													"paddingTop": "",
																													"paddingBottom": "",
																													"paddingLeft": "",
																													"paddingRight": "",
																													"width": "",
																													"height": "",
																													"maxWidth": "",
																													"maxHeight": "",
																													"minWidth": "",
																													"minHeight": "",
																													"unlink": "false",
																													"unlinkMax": "false",
																													"unlinkMin": "false",
																													"isSizeCollapsed": "false",
																													"dense": "",
																													"labelDefaultFontColor": "#686868",
																													"labelDefaultFontFamily": "Roboto",
																													"labelDefaultFontSize": "16px",
																													"labelDefaultFontStyle": "normal",
																													"labelDefaultFontWeight": "400",
																													"labelDefaultCombinedFont": "Roboto-Regular",
																													"labelDefaultThemeFont": "Custom",
																													"prefixFontColor": "#000",
																													"prefixFontFamily": "Roboto",
																													"prefixFontSize": "16px",
																													"prefixFontStyle": "normal",
																													"prefixFontWeight": "400",
																													"prefixCombinedFont": "Roboto-Regular",
																													"prefixThemeFont": "Custom",
																													"PHFontColor": "#686868",
																													"PHFontFamily": "Roboto",
																													"PHFontSize": "16px",
																													"PHFontStyle": "normal",
																													"PHFontWeight": "400",
																													"PHCombinedFont": "Roboto-Regular",
																													"PHThemeFont": "Custom",
																													"inputFontColor": "#000",
																													"inputFontFamily": "Roboto",
																													"inputFontSize": "16px",
																													"inputFontStyle": "normal",
																													"inputFontWeight": "400",
																													"inputCombinedFont": "Roboto-Regular",
																													"inputDefaultThemeFont": "Custom",
																													"errorMessageFontColor": "#E96767",
																													"errorMessageFontFamily": "Roboto",
																													"errorMessageFontSize": "12px",
																													"errorMessageFontStyle": "normal",
																													"errorMessageFontWeight": "400",
																													"EMCombinedFont": "Roboto-Regular",
																													"errorMessageThemeFont": "Custom",
																													"errorMessageLineHeight": "",
																													"backgroundColor": "#ffffff",
																													"innerBoxShadow": "",
																													"activeBorderColor": "#1976d2",
																													"innerBoxSizing": "",
																													"innerBorderTopStyle": "solid",
																													"innerBorderRightStyle": "solid",
																													"innerBorderBottomStyle": "solid",
																													"innerBorderLeftStyle": "solid",
																													"innerBorderTopLeftRadius": "",
																													"innerBorderTopRightRadius": "",
																													"innerBorderBottomLeftRadius": "",
																													"innerBorderBottomRightRadius": "",
																													"innerBorderTopWidth": "1px",
																													"innerBorderRightWidth": "1px",
																													"innerBorderBottomWidth": "1px",
																													"innerBorderLeftWidth": "1px",
																													"innerDefaultBorderColor": "#0000006b",
																													"innerSides": "Top,Right,Bottom,Left",
																													"outlined": "true"
																												}
																											},
																											"O": {
																												"cType": "slot",
																												"compDomClasses": "v-input v-input--hide-details v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded undefined pt-0 newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_84",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_84"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pr-3",
																											"sp:pl-3",
																											"c:col-3",
																											"sp:pb-0",
																											"sp:pt-0"
																										]
																									},
																									"class": "d-flex pr-3 pl-3 col-3 pb-0 pt-0"
																								},
																								"compDomClasses": "col d-flex pr-3 pl-3 col-3 pb-0 pt-0 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_86"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "row newDropBorder"
																			}
																		},
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "rowAmountInformation",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "QLabel",
																											"P": {
																												"ID": {
																													"H": "EdtrComp_224",
																													"T": "prop"
																												},
																												"tagType": {
																													"H": "╬'span'╩╩",
																													"T": "prop"
																												},
																												"text": {
																													"H": "╬'Cari hesap taksit tutarları ödeme adımında görüntülenecektir.'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"visible": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"processHtml": {
																													"H": "╬false╩╩",
																													"T": "prop"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_224"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"tc:error--text",
																															"te:font-weight-medium",
																															"tt:text-body-1"
																														]
																													},
																													"class": "error--text font-weight-medium text-body-1"
																												},
																												"compDomClasses": "q-label error--text font-weight-medium text-body-1 newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_139",
																									"T": "prop"
																								},
																								"visible": {
																									"H": "╬true╩╩",
																									"T": "prop",
																									"HL": "QS"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_139"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pl-3",
																											"sp:pt-0",
																											"sp:pr-3",
																											"sp:pb-6"
																										]
																									},
																									"class": "d-flex pl-3 pt-0 pr-3 pb-6"
																								},
																								"compDomClasses": "col d-flex pl-3 pt-0 pr-3 pb-6 pb-0 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_138"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "row newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_80",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_80"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"sp:pr-3",
																			"sp:pl-3",
																			"fd:flex-column",
																			"sp:pt-0",
																			"sp:pb-0"
																		]
																	},
																	"class": "d-flex pr-3 pl-3 flex-column pt-0 pb-0"
																},
																"compDomClasses": "col d-flex pr-3 pl-3 flex-column pt-0 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "#ffffff",
																	"boxShadow": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_79"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_71"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"sp:pt-0",
											"sp:pb-0",
											"sp:pl-3",
											"sp:pr-3"
										]
									},
									"class": "pt-0 pb-0 pl-3 pr-3"
								},
								"compDomClasses": "v-card v-sheet theme--light elevation-0 white pt-0 pb-0 pl-3 pr-3 newDropBorder"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_70"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pb-0"
						]
					},
					"class": "pb-0"
				},
				"compDomClasses": "container container--fluid pb-0 newDropBorder"
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "containerBtns",
					"T": "prop",
					"HL": "QS"
				},
				"class": {
					"H": "╬'container container--fluid'╩╩",
					"T": "class"
				},
				"visible": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"eager": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VRow",
							"P": {
								"ID": {
									"H": "rowCreateProposal",
									"T": "prop",
									"HL": "QS"
								},
								"visible": {
									"H": "╬true╩╩",
									"T": "prop",
									"HL": "QS"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "btn_back",
																	"T": "prop",
																	"HL": "QS"
																},
																"depressed": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"visible": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"color": {
																	"H": "╬'#2171DC'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"height": {
																	"H": "╬'40px'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "╬true╩╩",
																	"T": "prop"
																}
															},
															"E": {},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_18",
																					"T": "prop"
																				},
																				"text": {
																					"H": "╬'Geri'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_18"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						]
																					},
																					"class": "text-body-1 font-weight-regular"
																				},
																				"compDomClasses": "q-label text-body-1 font-weight-regular newDropBorder"
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_17"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		],
																		"lg": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1 mr-lg-1"
																},
																"compDomClasses": "v-btn v-btn--depressed v-btn--rounded theme--dark v-size--default mr-1 mr-lg-1 newDropBorder"
															}
														},
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "btnCreateProposal",
																	"T": "prop",
																	"HL": "QS"
																},
																"depressed": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"visible": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"color": {
																	"H": "╬'#2171DC'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"height": {
																	"H": "╬'40px'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "╬true╩╩",
																	"T": "prop"
																}
															},
															"E": {
																"click": {
																	"H": "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar _a, _b, _c, _d;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\n//createProposal\r\n(components.as_loadingCustomComp).open();\r\nvar listTbl = [];\r\nvar newAmountRowList = [];\r\nvar coverIVOsList = [];\r\nvar coverIVOsListNew = [];\r\nvar DEATH = \"20000099\";\r\nvar newDataList = quick.store.get('$coverList');\r\nfor (var i = 0; i < newDataList.length; i++) {\r\n    var newDatas = {\r\n        \"coverCode\": {\r\n            \"referenceDataType\": {\r\n                \"code\": newDataList[i].item.packageId,\r\n                \"category\": newDataList[i].item.coverName //\"Ölüm\"\r\n            }\r\n        },\r\n        \"aggregatedLimitAmount\": newDataList[i].item.aggregatedLimitAmount //24000\r\n    };\r\n    coverIVOsListNew.push(newDatas);\r\n}\r\nif (coverIVOsListNew.length > 0) {\r\n    listTbl = quick.store.get('$tblList');\r\n    for (var j = 0; j < listTbl.length; j++) { //Birden fazla tablo listesi olabileceği için yapıldı.\r\n        var foundPackage = listTbl[j].find(function (pkg) { return pkg.packageId === DEATH; });\r\n        if (foundPackage) {\r\n            var newDataDeath = {\r\n                \"coverCode\": {\r\n                    \"referenceDataType\": {\r\n                        \"code\": foundPackage.packageId,\r\n                        \"category\": foundPackage.coverName //\"Ölüm\"\r\n                    }\r\n                },\r\n                \"aggregatedLimitAmount\": foundPackage.aggregatedLimitAmount\r\n            };\r\n            coverIVOsListNew.push(newDataDeath);\r\n        }\r\n    }\r\n}\r\nelse { //Select'lerde değişiklik yapılmamış.\r\n    newAmountRowList = quick.store.get('newAmountRowList');\r\n    if (newAmountRowList.length > 0) {\r\n        for (var i = 0; i < newAmountRowList.length; i++) {\r\n            coverIVOsListNew.push(newAmountRowList[i]);\r\n        }\r\n    }\r\n    var itemExists = coverIVOsListNew.some(function (i) { return i.item.packageId === DEATH; });\r\n    if (!itemExists) { //Tutar değişikliği Ölüm'de yapılmamış.\r\n        var deathPackage = newAmountRowList.find(function (item) { return item.packageId === DEATH; });\r\n        if (deathPackage) {\r\n            coverIVOsListNew.push(deathPackage);\r\n        }\r\n    }\r\n}\r\ncoverIVOsList = [coverIVOsListNew];\r\nquick.store.set('$coverIVOsList', coverIVOsList);\r\nvar getPolicyInfo = quick.store.get('$policyInfo');\r\nvar getAssuranceInfo = quick.store.get('$getAssuranceCompInfo');\r\nvar getBranchCode = getAssuranceInfo.branchCode;\r\nvar getAssuranceOwnerInfo = quick.store.get('$assuranceOwnerInfoSet');\r\nvar customerInfoType = getAssuranceOwnerInfo === null || getAssuranceOwnerInfo === void 0 ? void 0 : getAssuranceOwnerInfo.customerInfoType;\r\nvar customerInfoType2 = (_a = quick.store.get(\"$saveInsuredContactResp\")) === null || _a === void 0 ? void 0 : _a.customerInfoType;\r\nvar insuranceCustomerNumber = (_b = quick.store.get(\"$saveInsuranceResp\")) === null || _b === void 0 ? void 0 : _b.externalContactNumber;\r\nvar insuredCustomerNumber = (_c = quick.store.get(\"$saveInsuredContactResp\")) === null || _c === void 0 ? void 0 : _c.externalContactNumber;\r\nvar packagePKG3 = quick.store.get('$packageDetailPKG3');\r\nvar externalContactNumber;\r\nif (insuredCustomerNumber) {\r\n    externalContactNumber = insuredCustomerNumber;\r\n}\r\nelse {\r\n    externalContactNumber = insuranceCustomerNumber;\r\n}\r\nvar requestData = {\r\n    policyInfo: __assign(__assign(__assign(__assign({ policyInfoType: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.type, insuranceType: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.type, insurancePackageId: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.packageId }, getPolicyInfo), { branchCode: getBranchCode, ownerUserInfo: {\r\n            userId: quick.containerServices.getUserContext().userid\r\n        }, insurerInfo: {\r\n            customerInfoType: customerInfoType,\r\n            insuranceCustomerNumber: insuranceCustomerNumber,\r\n            customerNumber: insuranceCustomerNumber,\r\n            contactRole: \"6\"\r\n        } }), (insuredCustomerNumber ? {\r\n        insuredInfo: {\r\n            customerInfoType: customerInfoType2,\r\n            insuranceCustomerNumber: insuredCustomerNumber,\r\n            customerNumber: insuredCustomerNumber,\r\n            contactRole: \"1\"\r\n        }\r\n    } : {\r\n        insuredInfo: {\r\n            customerInfoType: customerInfoType,\r\n            insuranceCustomerNumber: insuranceCustomerNumber,\r\n            customerNumber: insuranceCustomerNumber,\r\n            contactRole: \"1\"\r\n        }\r\n    })), { assetsList: __assign(__assign({}, coverIVOsList), { externalContactNumber: externalContactNumber }), productRelatedList: {\r\n            packageTypeVORef: {\r\n                referenceDataType: {\r\n                    code: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.asChannelCode //1000017\r\n                }\r\n            }\r\n        }, paymentTermsList: {\r\n            collectionMethodVORef: {\r\n                referenceDataType: {\r\n                    code: 4,\r\n                    category: \"Sanal POS\"\r\n                }\r\n            },\r\n            paymentsTermsVORef: {\r\n                referenceDataType: {\r\n                    code: 2000085,\r\n                    category: \"1 Taksit\"\r\n                }\r\n            },\r\n            numOfInstallment: 1\r\n        } })\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/wrapperclient/createProposal',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n};\r\n(_d = quick.Request.async(serviceRequest)) === null || _d === void 0 ? void 0 : _d.then(function (resp) {\r\n    var _a;\r\n    if (resp === null || resp === void 0 ? void 0 : resp.data) {\r\n        quick.store.set('$createProposalResp', resp === null || resp === void 0 ? void 0 : resp.data);\r\n        quick.store.set('$revisionNo', (_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.revisionNumber);\r\n        quick.MM.trigger('calculatePremium');\r\n        components.rowCreateProposal.visible = false;\r\n        components.rowUpdateProposal.visible = true;\r\n        components.containerAmountInfo.visible = true;\r\n    }\r\n    (components.as_loadingCustomComp).close();\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    (components.as_loadingCustomComp).close();\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
																	"P": "mouseEvent:unknown | undefined",
																	"HL": "JS"
																}
															},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_15",
																					"T": "prop"
																				},
																				"text": {
																					"H": "╬'Teklif Al'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_15"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						]
																					},
																					"class": "text-body-1 font-weight-regular"
																				},
																				"compDomClasses": "q-label text-body-1 font-weight-regular newDropBorder"
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_14"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1"
																},
																"compDomClasses": "v-btn v-btn--depressed v-btn--rounded theme--dark v-size--default mr-1 newDropBorder"
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "EdtrComp_13",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_13"
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"d:d-flex",
															"sp:pt-3",
															"sp:pb-0",
															"j:justify-end"
														]
													},
													"class": "d-flex pt-3 pb-0 justify-end"
												},
												"compDomClasses": "col d-flex pt-3 pb-0 justify-end newDropBorder"
											},
											"S": {
												"xs-xl": {
													"col": "",
													"flexDirection": "column",
													"alignItems": "",
													"justifyContent": "",
													"marginLeft": "",
													"marginRight": "",
													"marginBottom": "",
													"marginTop": "",
													"paddingTop": "12px",
													"paddingBottom": "12px",
													"paddingLeft": "12px",
													"paddingRight": "12px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_6"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": "row newDropBorder"
							},
							"S": {
								"xs-xl": {
									"marginLeft": "0px",
									"marginRight": "0px",
									"marginBottom": "0px",
									"marginTop": "0px",
									"paddingTop": "",
									"paddingBottom": "",
									"paddingLeft": "",
									"paddingRight": "",
									"width": "",
									"height": "",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						},
						{
							"T": "VRow",
							"P": {
								"ID": {
									"H": "rowUpdateProposal",
									"T": "prop",
									"HL": "QS"
								},
								"visible": {
									"H": "╬false╩╩",
									"T": "prop",
									"HL": "QS"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "EdtrComp_50",
																	"T": "prop"
																},
																"depressed": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"visible": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"color": {
																	"H": "╬'#2171DC'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"height": {
																	"H": "╬'40px'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "╬true╩╩",
																	"T": "prop"
																}
															},
															"E": {
																"click": {
																	"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ncomponents.as_loadingCustomComp.open();\r\nquick.MM.trigger('printDocument');\r\n",
																	"P": "mouseEvent:unknown | undefined",
																	"HL": "JS"
																}
															},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_51",
																					"T": "prop"
																				},
																				"text": {
																					"H": "╬'Teklifi Yazdır'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_51"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						],
																						"md": [],
																						"lg": []
																					},
																					"class": "text-body-1 font-weight-regular"
																				},
																				"compDomClasses": "q-label text-body-1 font-weight-regular newDropBorder"
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_50"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1"
																},
																"compDomClasses": "v-btn v-btn--depressed v-btn--rounded theme--dark v-size--default mr-1 newDropBorder"
															}
														},
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "EdtrComp_52",
																	"T": "prop"
																},
																"depressed": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"visible": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"color": {
																	"H": "╬'#2171DC'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"height": {
																	"H": "╬'40px'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "╬true╩╩",
																	"T": "prop"
																}
															},
															"E": {
																"click": {
																	"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\nquick.MM.trigger('sendPolicyEmail');\r\n",
																	"P": "mouseEvent:unknown | undefined",
																	"HL": "JS"
																}
															},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_53",
																					"T": "prop"
																				},
																				"text": {
																					"H": "╬'Teklifi E-Posta İle Gönder'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_53"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						]
																					},
																					"class": "text-body-1 font-weight-regular"
																				},
																				"compDomClasses": "q-label text-body-1 font-weight-regular newDropBorder"
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_52"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1"
																},
																"compDomClasses": "v-btn v-btn--depressed v-btn--rounded theme--dark v-size--default mr-1 newDropBorder"
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "EdtrComp_47",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_47"
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"d:d-flex",
															"sp:pt-3",
															"sp:pb-0",
															"j:justify-start"
														]
													},
													"class": "d-flex pt-3 pb-0 justify-start"
												},
												"compDomClasses": "col d-flex pt-3 pb-0 justify-start newDropBorder"
											},
											"S": {
												"xs-xl": {
													"col": "",
													"flexDirection": "column",
													"alignItems": "",
													"justifyContent": "",
													"marginLeft": "",
													"marginRight": "",
													"marginBottom": "",
													"marginTop": "",
													"paddingTop": "12px",
													"paddingBottom": "12px",
													"paddingLeft": "12px",
													"paddingRight": "12px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VBtn",
															"P": {
																"ID": {
																	"H": "btnUpdateProposal",
																	"T": "prop",
																	"HL": "QS"
																},
																"depressed": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"visible": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"DiscardSettings": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"color": {
																	"H": "╬'#2171DC'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"dark": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"height": {
																	"H": "╬'40px'╩╩",
																	"T": "prop",
																	"HL": "QS"
																},
																"rounded": {
																	"H": "╬true╩╩",
																	"T": "prop"
																}
															},
															"E": {
																"click": {
																	"H": "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar _a, _b, _c, _d;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\n//updateProposal\r\n(components.as_loadingCustomComp).open();\r\nvar getPolicyInfo = quick.store.get('$policyInfo');\r\nvar getAssuranceInfo = quick.store.get('$getAssuranceCompInfo');\r\nvar getBranchCode = getAssuranceInfo.branchCode;\r\nvar getAssuranceOwnerInfo = quick.store.get('$assuranceOwnerInfoSet');\r\nvar customerInfoType = getAssuranceOwnerInfo === null || getAssuranceOwnerInfo === void 0 ? void 0 : getAssuranceOwnerInfo.customerInfoType;\r\nvar customerInfoType2 = (_a = quick.store.get(\"$saveInsuredContactResp\")) === null || _a === void 0 ? void 0 : _a.customerInfoType;\r\nvar insuranceCustomerNumber = (_b = quick.store.get(\"$saveInsuranceResp\")) === null || _b === void 0 ? void 0 : _b.externalContactNumber;\r\nvar insuredCustomerNumber = (_c = quick.store.get(\"$saveInsuredContactResp\")) === null || _c === void 0 ? void 0 : _c.externalContactNumber;\r\nvar packagePKG3 = quick.store.get('$packageDetailPKG3');\r\nvar createProposalResp = quick.store.get('$createProposalResp');\r\nvar externalContactNumber;\r\nif (insuredCustomerNumber) {\r\n    externalContactNumber = insuredCustomerNumber;\r\n}\r\nelse {\r\n    externalContactNumber = insuranceCustomerNumber;\r\n}\r\nvar coverIVOsList = [];\r\ncoverIVOsList = quick.store.get('$coverIVOsList');\r\nvar requestData = {\r\n    policyInfo: __assign(__assign(__assign(__assign({ policyInfoType: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.type, insuranceType: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.type, insurancePackageId: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.packageId }, getPolicyInfo), { branchCode: getBranchCode, ownerUserInfo: {\r\n            userId: quick.containerServices.getUserContext().userid\r\n        }, insurerInfo: {\r\n            customerInfoType: customerInfoType,\r\n            insuranceCustomerNumber: insuranceCustomerNumber,\r\n            customerNumber: insuranceCustomerNumber,\r\n            contactRole: \"6\"\r\n        } }), (insuredCustomerNumber ? {\r\n        insuredInfo: {\r\n            customerInfoType: customerInfoType2,\r\n            insuranceCustomerNumber: insuredCustomerNumber,\r\n            customerNumber: insuredCustomerNumber,\r\n            contactRole: \"1\"\r\n        }\r\n    } : {\r\n        insuredInfo: {\r\n            customerInfoType: customerInfoType,\r\n            insuranceCustomerNumber: insuranceCustomerNumber,\r\n            customerNumber: insuranceCustomerNumber,\r\n            contactRole: \"1\"\r\n        }\r\n    })), { proposalNo: createProposalResp === null || createProposalResp === void 0 ? void 0 : createProposalResp.proposalNumber, revisionNo: quick.store.get('$revisionNo'), paymentTermsList: {\r\n            collectionMethodVORef: {\r\n                referenceDataType: {\r\n                    code: 4,\r\n                    category: \"Sanal POS\"\r\n                }\r\n            },\r\n            paymentsTermsVORef: {\r\n                referenceDataType: {\r\n                    code: 2000085,\r\n                    category: \"1 Taksit\"\r\n                }\r\n            },\r\n            numOfInstallment: 1\r\n        }, assetsList: __assign(__assign({}, coverIVOsList), { externalContactNumber: externalContactNumber }), productRelatedList: {\r\n            packageTypeVORef: {\r\n                referenceDataType: {\r\n                    code: packagePKG3 === null || packagePKG3 === void 0 ? void 0 : packagePKG3.asChannelCode //1000017\r\n                }\r\n            }\r\n        } })\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/wrapperclient/updateProposal',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n};\r\n(_d = quick.Request.async(serviceRequest)) === null || _d === void 0 ? void 0 : _d.then(function (resp) {\r\n    var _a;\r\n    (components.as_loadingCustomComp).close();\r\n    if (resp === null || resp === void 0 ? void 0 : resp.data) {\r\n        quick.store.set('$revisionNo', (_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.revisionNumber);\r\n        quick.MM.trigger('savePolicyInfo'); //updateProposalSuccess\r\n    }\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    (components.as_loadingCustomComp).close();\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
																	"P": "mouseEvent:unknown | undefined",
																	"HL": "JS"
																}
															},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"C": {},
																			"E": {},
																			"P": {
																				"ID": {
																					"H": "EdtrComp_122",
																					"T": "prop"
																				},
																				"text": {
																					"H": "╬'Poliçe Oluştur'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_122"
																			},
																			"O": {
																				"cType": "child",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"tt:text-body-1",
																							"te:font-weight-regular"
																						],
																						"lg": []
																					},
																					"class": "text-body-1 font-weight-regular"
																				},
																				"compDomClasses": "q-label text-body-1 font-weight-regular newDropBorder"
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"fontColor": "#000000",
																					"fontFamily": "Roboto",
																					"fontSize": "16px",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"lineHeight": "20px"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_121"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "10px",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "16px",
																	"paddingBottom": "",
																	"paddingLeft": "16px",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"fontColor": "#ffffff",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px",
																	"backgroundColor": "#1976D2",
																	"disabledBackgroundColor": "rgba(0,0,0,.12)",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"SC": {
																"fontColor": {
																	"VIcon": "iconColor",
																	"QLabel": "fontColor"
																},
																"fontStyle": {
																	"QLabel": "fontStyle"
																},
																"fontSize": {
																	"QLabel": "fontSize"
																},
																"fontFamily": {
																	"QLabel": "fontFamily"
																},
																"fontWeight": {
																	"QLabel": "fontWeight"
																},
																"combinedFont": {
																	"QLabel": "combinedFont"
																},
																"lineHeight": {
																	"QLabel": "lineHeight"
																},
																"bacgroundColor": {
																	"VIcon": "backgroundColor"
																}
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:mr-1"
																		]
																	},
																	"class": "mr-1"
																},
																"compDomClasses": "v-btn v-btn--depressed v-btn--rounded theme--dark v-size--default mr-1 newDropBorder"
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "EdtrComp_116",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_116"
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"d:d-flex",
															"sp:pt-3",
															"sp:pb-0",
															"j:justify-end"
														]
													},
													"class": "d-flex pt-3 pb-0 justify-end"
												},
												"compDomClasses": "col d-flex pt-3 pb-0 justify-end newDropBorder"
											},
											"S": {
												"xs-xl": {
													"col": "",
													"flexDirection": "column",
													"alignItems": "",
													"justifyContent": "",
													"marginLeft": "",
													"marginRight": "",
													"marginBottom": "",
													"marginTop": "",
													"paddingTop": "12px",
													"paddingBottom": "12px",
													"paddingLeft": "12px",
													"paddingRight": "12px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_46"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": "row newDropBorder"
							},
							"S": {
								"xs-xl": {
									"marginLeft": "0px",
									"marginRight": "0px",
									"marginBottom": "0px",
									"marginTop": "0px",
									"paddingTop": "",
									"paddingBottom": "",
									"paddingLeft": "",
									"paddingRight": "",
									"width": "",
									"height": "",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pt-0",
							"sp:pb-0"
						]
					},
					"class": "pt-0 pb-0"
				},
				"compDomClasses": "container container--fluid pt-0 pb-0 newDropBorder"
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_loadingCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bankasASPACC/common/as_loadingCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_78",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_78"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_67"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": "newDropBorder"
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertSuccess",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bankasASPACC/common/as_alertCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "╬'success'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "╬'Tamam'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_400_1_visible": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alertSuccess.close();\r\n",
					"C": true,
					"HL": "JS"
				},
				"btn1ClickEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alertSuccess.close();\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_41",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_41"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_40"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": "newDropBorder"
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bankasASPACC/common/as_alertCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "╬'error'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "╬'Tamam'╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alertCustomComp.close();\r\n",
					"C": true,
					"HL": "JS"
				},
				"btn1ClickEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alertCustomComp.close();\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_62",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_62"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_61"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": "newDropBorder"
			}
		}
	],
	"lrids": {},
	"clrids": {},
	"opt": {}
};
export default pjson