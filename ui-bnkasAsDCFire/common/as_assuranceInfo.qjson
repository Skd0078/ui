let pjson = {
	"pJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "false",
					"T": "prop"
				},
				"externalProps": {
					"H": "['assuranceType','assuranceTypeDisabled','consumerCode', 'screenName','branchCode','branchCodeItems','redirector','redirectorItems','isExternalSaleTeam','externalSaleTeam', 'validationErrors']",
					"T": "prop",
					"HL": "QS"
				},
				"externalEvents": {
					"H": "[{name = validateComponents, params = []}]",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"PostRender": {
					"H": "//if (+((<any>quick.containerServices).getUserContext().branchCode) <= 1000) {\r\n// components.vauto_branchCode.items = [{\r\n//     name: (<any>quick.containerServices).getUserContext().branchCode + ' ' + (<any>quick.containerServices).getUserContext().branchName,\r\n//     code: (<any>quick.containerServices).getUserContext().branchName\r\n// }]\r\n// //components.vauto_branchCode.qValue = (<any>quick.containerServices).getUserContext().branchCode + ' ' + (<any>quick.containerServices).getUserContext().branchName;\r\n//}\r\n//else {\r\n// components.vauto_branchCode.items = [{\r\n//     name: (<any>quick.containerServices).getUserContext().branchCode + ' ' + (<any>quick.containerServices).getUserContext().branchName,\r\n//     code: (<any>quick.containerServices).getUserContext().branchName\r\n//    }]\r\n// components.vauto_branchCode.qValue = {\r\n//     name: (<any>quick.containerServices).getUserContext().branchCode + ' ' + (<any>quick.containerServices).getUserContext().branchName,\r\n//     code: (<any>quick.containerServices).getUserContext().branchCode\r\n// };\r\n//}\r\n",
					"TO": 1,
					"HL": "TS"
				},
				"retrieveBranchUsers": {
					"H": "// debugger;\r\nsetTimeout(() => {\r\n  (<any>components.as_loadingCustomComp).open();\r\n}, 0);\r\n\r\n\r\nlet requestData = {\r\n  \"branchCode\": quick.store.get('$branchCode'),\r\n  \"includeSubBranch\": true\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nlet serviceRequest: IRequest = {\r\n  url: '/api/uiclient/retrieveBranchUsers',\r\n  http: 'POST',\r\n  data: requestData,\r\n  onFail: 'empty',\r\n  onSuccess: 'empty',\r\n  responseField: 'empty',\r\n  blockRender: false,\r\n}\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n  quick.EM.trace(resp?.data);\r\n  if (resp?.data?.branchUserList) {\r\n    components.as_loadingCustomComp.close();\r\n    components.vauto_redirector.items = resp?.data?.branchUserList.map((item) => ({\r\n      name: item.userName + ' ' + item.userSurname + (item?.userPositionDefinition ? ' - ' + item.userPositionDefinition : ''),\r\n      code: item.userId + '-' + item.userName\r\n    }));\r\n  }\r\n})\r\n  .catch((err) => {\r\n    quick.EM.trace('hata aldı')\r\n    components.as_loadingCustomComp.close();\r\n    let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n    (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n  });",
					"C": true,
					"HL": "TS"
				},
				"retrieveCodeStrings": {
					"H": "declare let codeString;\r\n\r\ndebugger\r\nlet requestData = {\r\n    \"codeStringCategory\": \"INSURANCE_TYPE\"\r\n}\r\n\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\n\r\nlet serviceRequest: IRequest = {\r\n    url: '/api/bnkasgeneral/retrieveCodeStrings',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n}\r\n\r\nfunction getCodeString(response) {\r\n\r\n    for (var i = 0; i < response.length; i++) {\r\n        if (codeString == response[i].codeString) {\r\n            return response[i].value;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n    quick.EM.trace(resp?.data);\r\n\r\n    if (resp?.data?.codeStringsDtoList) {\r\n        let codeStringValue;\r\n        codeStringValue = getCodeString(resp?.data?.codeStringsDtoList);\r\n        components.txt_assuranceType.qValue = codeStringValue;\r\n        quick.store.set('$policyType', codeStringValue);\r\n    }\r\n})\r\n    .catch((err) => {\r\n\r\n        let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n        (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n        components.as_alertCustomComp.open();\r\n    });",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"setAssuranceType": {
					"H": "declare let value;\r\n\r\ncomponents.txt_assuranceType.qValue = value;",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"saleTeamChangedEvent": {
					"H": "let blankList = [];\r\nif (components.ch_externalSaleTeam) {\r\n    if (components.rdg_externalSaleTeam.qValue === 0) {\r\n        quick.store.set('$branchCode', 146);\r\n        quick.MM.trigger('retrieveBranchUsers');\r\n    } else if (components.rdg_externalSaleTeam.qValue === 1) {\r\n        quick.store.set('$branchCode', 300);\r\n        quick.MM.trigger('retrieveBranchUsers');\r\n    }\r\n}\r\nelse {\r\n    quick.MM.trigger('retrieveBranchUsers');\r\n}",
					"C": true,
					"HL": "TS"
				},
				"saleTeamCheckedEvent": {
					"H": "let blankList = [];\r\nif (components.ch_externalSaleTeam) {\r\n    if (components.rdg_externalSaleTeam.qValue === 0) {\r\n        quick.store.set('$branchCode', 146);\r\n        quick.MM.trigger('retrieveBranchUsers');\r\n    } else if (components.rdg_externalSaleTeam.qValue === 1) {\r\n        quick.store.set('$branchCode', 300);\r\n        quick.MM.trigger('retrieveBranchUsers');\r\n    }\r\n}\r\nelse {\r\n    quick.MM.trigger('retrieveBranchUsers');\r\n}",
					"C": true,
					"HL": "TS"
				},
				"getAssuranceCompInfo": {
					"H": "debugger;\r\n\r\nlet redirectorId = components.vauto_redirector.qValue.split('-')[0]\r\nlet branchCode = components.vauto_branchCode.qValue.split(' - ')[0];\r\nlet branchName = components.vauto_branchCode.qValue.split(' - ')[1];\r\nlet info = {\r\n    assuranceType: components.txt_assuranceType.qValue,\r\n    branchCode: branchCode,\r\n    branchName: branchName,\r\n    redirector: redirectorId\r\n}\r\nquick.store.set(\"$getAssuranceCompInfo\", info);\r\nquick.return(info);",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"findOrganizationUnitList": {
					"H": "// debugger;\r\nsetTimeout(() => {\r\n\r\n  (<any>components.as_loadingCustomComp).open();\r\n}, 1);\r\n\r\nlet requestData = {\r\n  \"typeFilter\": {\r\n    \"typeID\": [\r\n      4\r\n    ]\r\n  }\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nlet serviceRequest: IRequest = {\r\n  url: '/api/uiclient/findOrganizationUnitList',\r\n  http: 'POST',\r\n  data: requestData,\r\n  onFail: 'empty',\r\n  onSuccess: 'empty',\r\n  responseField: 'empty',\r\n  blockRender: false,\r\n}\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n  quick.EM.trace(resp?.data);\r\n  components.as_loadingCustomComp.close();\r\n\r\n  if (resp?.data?.findOrganizationUnitList) {\r\n    let filteredData;\r\n\r\n    filteredData = resp?.data?.findOrganizationUnitList.filter(unit => unit.code >= 1000);\r\n    if (filteredData) {\r\n      components.vauto_branchCode.items = filteredData.map((item) => ({\r\n        name: item.code + ' - ' + item.name,\r\n        code: item.code + ' - ' + item.name\r\n      }));\r\n    }\r\n\r\n    //ikinci ekrandan geri geliniyorsa;\r\n    // let storeData = quick.store.get('getAssuranceCompInfo');\r\n\r\n    // components.vauto_branchCode.qValue = {\r\n    //   name: storeData.branchCode + ' - ' + storeData.branchName,\r\n    //   code: storeData.branchCode + ' - ' + storeData.branchName\r\n    // }\r\n  }\r\n})\r\n  .catch((err) => {\r\n    quick.EM.trace('hata aldı')\r\n    components.as_loadingCustomComp.close();\r\n    let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n    (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n  });",
					"C": true,
					"HL": "TS"
				},
				"componentStatusFirst": {
					"H": "debugger\r\nconst componentsList = [\r\n    'txt_assuranceType',\r\n    'vauto_branchCode',\r\n    'vauto_redirector',\r\n    'ch_externalSaleTeam',\r\n    'rdg_externalSaleTeam'\r\n];\r\n\r\nlet assuranceCompStatus = componentsList.reduce((status, component) => {\r\n    status[component] = components[component].disabled;\r\n    return status;\r\n}, {});\r\n\r\nquick.EM.trace(assuranceCompStatus)\r\nquick.store.set('$assuranceCompStatus', assuranceCompStatus);",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"componentStatusDisabled": {
					"H": "debugger\r\nconst componentsList = [\r\n  'txt_assuranceType',\r\n  'vauto_branchCode',\r\n  'vauto_redirector',\r\n  'ch_externalSaleTeam',\r\n  'rdg_externalSaleTeam'\r\n];\r\n\r\ncomponentsList.forEach(component => {\r\n  if (components[component].disabled === false) {\r\n    components[component].disabled = true;\r\n  }\r\n});\r\n\r\nquick.return(components);\r\n",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"componentStatusBackFirst": {
					"H": "debugger\r\nvar assuranceCompStatus = quick.store.get('$assuranceCompStatus');\r\nObject.keys(assuranceCompStatus).forEach(function (component) {\r\n    if (components[component]) {\r\n        components[component].disabled = assuranceCompStatus[component];\r\n    }\r\n});",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"setConsumerAndScreenInfo": {
					"H": "debugger; \r\n//setConsumerAndScreenInfo\r\n\r\nlet consumerCode = quick?.parent?.props?.consumerCode;\r\nlet screenName = quick?.parent?.props?.screenName;\r\nquick.store.set('$customConsumerCode', consumerCode);\r\nquick.store.set('$customScreenName', screenName);",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"EndRender": {
					"H": "// debugger;\r\nquick.store.set('$branchCode', (<any>quick.containerServices).getUserContext().branchCode);\r\nquick.MM.trigger('findOrganizationUnitList');\r\nquick.MM.trigger('retrieveBranchUsers');",
					"HL": "TS"
				},
				"validateComponents": {
					"H": "debugger;\r\nlet validationErrors = []\r\nlet isBranchCodeValid = quick.Quick.validate(\"vauto_branchCode\", false, false);\r\nlet isRedirectorValid = quick.Quick.validate(\"vauto_redirector\", false, false);\r\nlet isAssuranceTypeValid = quick.Quick.validate(\"txt_assuranceType\", false, false);\r\n\r\nif (!isBranchCodeValid) validationErrors.push(\"Şube Kodu boş olamaz\");\r\nif (!isRedirectorValid) validationErrors.push(\"Yönlendiren boş olamaz\");\r\nif (!isAssuranceTypeValid) validationErrors.push(\"Sigorta Türü boş olamaz\");\r\n\r\nquick.parent.props.validationErrors = validationErrors;",
					"C": true,
					"EV": true,
					"HL": "TS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child"
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "VContainerComp",
					"T": "prop"
				},
				"class": {
					"H": "'container container--fluid'",
					"T": "class"
				},
				"visible": {
					"H": "true",
					"T": "prop"
				},
				"eager": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_2",
									"T": "prop"
								},
								"color": {
									"H": "'white'",
									"T": "prop"
								},
								"visible": {
									"H": "true",
									"T": "prop"
								},
								"elevation": {
									"H": "0",
									"T": "prop"
								},
								"disabled": {
									"H": "false",
									"T": "prop",
									"HL": "QS"
								},
								"width": {
									"H": "'100%'",
									"T": "prop",
									"HL": "QS"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_17",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCard",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_19",
																					"T": "prop"
																				},
																				"color": {
																					"H": "'primary'",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"height": {
																					"H": "'50px'",
																					"T": "prop"
																				},
																				"flat": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "'b-0'",
																					"T": "prop"
																				},
																				"dark": {
																					"H": "true",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VRow",
																							"P": {
																								"ID": {
																									"H": "EdtrComp_21",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VCol",
																											"C": {
																												"default": {
																													"c": [
																														{
																															"T": "QLabel",
																															"P": {
																																"ID": {
																																	"H": "EdtrComp_23",
																																	"T": "prop"
																																},
																																"tagType": {
																																	"H": "'span'",
																																	"T": "prop"
																																},
																																"text": {
																																	"H": "'Sigorta Bilgileri'",
																																	"T": "prop"
																																},
																																"visible": {
																																	"H": "true",
																																	"T": "prop"
																																},
																																"processHtml": {
																																	"H": "false",
																																	"T": "prop"
																																}
																															},
																															"E": {},
																															"C": {},
																															"_Editor": {
																																"eID": "EdtrComp_23"
																															},
																															"O": {
																																"cType": "slot",
																																"layout": {
																																	"dOpt": {
																																		"xs": [
																																			"sp:ml-5",
																																			"tt:text-h6"
																																		]
																																	},
																																	"class": "ml-5 text-h6"
																																}
																															}
																														}
																													],
																													"cType": "slot"
																												}
																											},
																											"E": {},
																											"P": {
																												"ID": {
																													"H": "EdtrComp_22",
																													"T": "prop"
																												}
																											},
																											"_Editor": {
																												"eID": "EdtrComp_22"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"d:d-flex",
																															"fd:flex-column",
																															"sp:pb-3",
																															"sp:pt-3",
																															"sp:pl-3",
																															"sp:pr-3"
																														]
																													},
																													"class": "d-flex flex-column pb-3 pt-3 pl-3 pr-3"
																												}
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_21"
																							},
																							"O": {
																								"cType": "slot"
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_19"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_18",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_18"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"sp:pt-0",
																			"sp:pb-3",
																			"sp:pl-0",
																			"sp:pr-0"
																		]
																	},
																	"class": "d-flex flex-column pt-0 pb-3 pl-0 pr-0"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_17"
											},
											"O": {
												"cType": "slot"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "VRowComp",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txt_assuranceType",
																					"T": "prop"
																				},
																				"label": {
																					"H": "'Sigorta Türü'",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"disabled": {
																					"H": "true",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "true",
																					"T": "prop"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop"
																				},
																				"DiscardSettings": {
																					"H": "true",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_26"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginTop": "",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"labelDefaultFontColor": "#686868",
																					"labelDefaultFontFamily": "Roboto",
																					"labelDefaultFontSize": "16px",
																					"labelDefaultFontStyle": "normal",
																					"labelDefaultFontWeight": "400",
																					"labelDefaultCombinedFont": "Roboto-Regular",
																					"labelDefaultThemeFont": "Custom",
																					"prefixFontColor": "#000",
																					"prefixFontFamily": "Roboto",
																					"prefixFontSize": "16px",
																					"prefixFontStyle": "normal",
																					"prefixFontWeight": "400",
																					"prefixCombinedFont": "Roboto-Regular",
																					"prefixThemeFont": "Custom",
																					"PHFontColor": "#686868",
																					"PHFontFamily": "Roboto",
																					"PHFontSize": "16px",
																					"PHFontStyle": "normal",
																					"PHFontWeight": "400",
																					"PHCombinedFont": "Roboto-Regular",
																					"PHThemeFont": "Custom",
																					"inputFontColor": "#000",
																					"inputFontFamily": "Roboto",
																					"inputFontSize": "16px",
																					"inputFontStyle": "normal",
																					"inputFontWeight": "400",
																					"inputCombinedFont": "Roboto-Regular",
																					"inputDefaultThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "",
																					"backgroundColor": "#ffffff",
																					"innerBoxShadow": "",
																					"activeBorderColor": "#1976d2",
																					"innerBoxSizing": "",
																					"innerBorderTopStyle": "solid",
																					"innerBorderRightStyle": "solid",
																					"innerBorderBottomStyle": "solid",
																					"innerBorderLeftStyle": "solid",
																					"innerBorderTopLeftRadius": "",
																					"innerBorderTopRightRadius": "",
																					"innerBorderBottomLeftRadius": "",
																					"innerBorderBottomRightRadius": "",
																					"innerBorderTopWidth": "1px",
																					"innerBorderRightWidth": "1px",
																					"innerBorderBottomWidth": "1px",
																					"innerBorderLeftWidth": "1px",
																					"innerDefaultBorderColor": "#0000006b",
																					"innerSides": "Top,Right,Bottom,Left",
																					"outlined": "true"
																				}
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "VColComp",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_3"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-row",
																			"j:justify-center",
																			"sp:pt-3",
																			"sp:pr-3",
																			"sp:pl-3",
																			"sp:pb-3",
																			"a:align-start"
																		]
																	},
																	"class": "d-flex flex-row justify-center pt-3 pr-3 pl-3 pb-3 align-start"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "row",
																	"alignItems": "center",
																	"justifyContent": "center",
																	"marginLeft": "px",
																	"marginRight": "px",
																	"marginBottom": "px",
																	"marginTop": "px",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "#ffffff",
																	"boxShadow": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_branchCode",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "true",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "'name'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "'code'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"label": {
																					"H": "'Şube Kodu'",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "true",
																					"T": "prop"
																				},
																				"DiscardSettings": {
																					"H": "true",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop"
																				},
																				"attach": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rules": {
																					"H": "[Quick.validation.required('Lütfen Şube Kodu seçiniz.')]",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"noDataText": {
																					"H": "'Veri bulunamadı'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_53"
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"defaultFontColor": "#666666",
																					"defaultFontFamily": "Roboto",
																					"defaultFontSize": "16px",
																					"defaultFontStyle": "normal",
																					"defaultFontWeight": "400",
																					"defaultCombinedFont": "Roboto-Regular",
																					"deafultThemeFont": "Custom",
																					"PHFontColor": "#9E9E9E",
																					"PHFontFamily": "Roboto",
																					"PHFontSize": "16px",
																					"PHFontStyle": "normal",
																					"PHFontWeight": "400",
																					"PHCombinedFont": "Roboto-Regular",
																					"PHThemeFont": "Custom",
																					"inputFontColor": "#000",
																					"inputFontFamily": "Roboto",
																					"inputFontSize": "16px",
																					"inputFontStyle": "normal",
																					"inputFontWeight": "400",
																					"inputCombinedFont": "Roboto-Regular",
																					"inputThemeFont": "Custom",
																					"menuFontColor": "#000",
																					"menuFontFamily": "Roboto",
																					"menuFontSize": "16px",
																					"menuFontStyle": "normal",
																					"menuFontWeight": "400",
																					"menuCombinedFont": "Roboto-Regular",
																					"menuThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "",
																					"backgroundColor": "#FFFFFF",
																					"menuBackgroundColor": "#FFFFFF",
																					"menuDefaultHoverColor": "#000000de",
																					"menuActiveHoverColor": "#1976d2",
																					"innerBoxShadow": "",
																					"menuBoxShadow": "",
																					"activeBorderColor": "#1976d2",
																					"innerBoxSizing": "",
																					"innerBorderTopStyle": "solid",
																					"innerBorderRightStyle": "solid",
																					"innerBorderBottomStyle": "solid",
																					"innerBorderLeftStyle": "solid",
																					"innerBorderTopLeftRadius": "",
																					"innerBorderTopRightRadius": "",
																					"innerBorderBottomLeftRadius": "",
																					"innerBorderBottomRightRadius": "",
																					"innerBorderTopWidth": "1px",
																					"innerBorderRightWidth": "1px",
																					"innerBorderBottomWidth": "1px",
																					"innerBorderLeftWidth": "1px",
																					"innerDefaultBorderColor": "#0000006b",
																					"innerSides": "Top,Right,Bottom,Left",
																					"outlined": "true"
																				}
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_8",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_8"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"sp:pl-3",
																			"sp:pt-3",
																			"sp:pr-3",
																			"sp:pb-3",
																			"j:justify-center",
																			"fd:flex-row",
																			"a:align-start"
																		]
																	},
																	"class": "d-flex pl-3 pt-3 pr-3 pb-3 justify-center flex-row align-start"
																}
															},
															"S": {
																"xs-xl": {
																	"alignItems": "center",
																	"justifyContent": "center",
																	"flexDirection": "row"
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_redirector",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "true",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"label": {
																					"H": "'Yönlendiren'",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "true",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "'name'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "'code'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"DiscardSettings": {
																					"H": "true",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop"
																				},
																				"attach": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rules": {
																					"H": "[Quick.validation.required('Lütfen Yönlendiren seçiniz.')]",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"noDataText": {
																					"H": "'Veri bulunamadı'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"change": {
																					"H": "debugger\r\nquick.store.set('$selectedRedirector',components.vauto_redirector.qValue)",
																					"HL": "TS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_80"
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"defaultFontColor": "#666666",
																					"defaultFontFamily": "Roboto",
																					"defaultFontSize": "16px",
																					"defaultFontStyle": "normal",
																					"defaultFontWeight": "400",
																					"defaultCombinedFont": "Roboto-Regular",
																					"deafultThemeFont": "Custom",
																					"PHFontColor": "#9E9E9E",
																					"PHFontFamily": "Roboto",
																					"PHFontSize": "16px",
																					"PHFontStyle": "normal",
																					"PHFontWeight": "400",
																					"PHCombinedFont": "Roboto-Regular",
																					"PHThemeFont": "Custom",
																					"inputFontColor": "#000",
																					"inputFontFamily": "Roboto",
																					"inputFontSize": "16px",
																					"inputFontStyle": "normal",
																					"inputFontWeight": "400",
																					"inputCombinedFont": "Roboto-Regular",
																					"inputThemeFont": "Custom",
																					"menuFontColor": "#000",
																					"menuFontFamily": "Roboto",
																					"menuFontSize": "16px",
																					"menuFontStyle": "normal",
																					"menuFontWeight": "400",
																					"menuCombinedFont": "Roboto-Regular",
																					"menuThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "",
																					"backgroundColor": "#FFFFFF",
																					"menuBackgroundColor": "#FFFFFF",
																					"menuDefaultHoverColor": "#000000de",
																					"menuActiveHoverColor": "#1976d2",
																					"innerBoxShadow": "",
																					"menuBoxShadow": "",
																					"activeBorderColor": "#1976d2",
																					"innerBoxSizing": "",
																					"innerBorderTopStyle": "solid",
																					"innerBorderRightStyle": "solid",
																					"innerBorderBottomStyle": "solid",
																					"innerBorderLeftStyle": "solid",
																					"innerBorderTopLeftRadius": "",
																					"innerBorderTopRightRadius": "",
																					"innerBorderBottomLeftRadius": "",
																					"innerBorderBottomRightRadius": "",
																					"innerBorderTopWidth": "1px",
																					"innerBorderRightWidth": "1px",
																					"innerBorderBottomWidth": "1px",
																					"innerBorderLeftWidth": "1px",
																					"innerDefaultBorderColor": "#0000006b",
																					"innerSides": "Top,Right,Bottom,Left",
																					"outlined": "true"
																				}
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_14",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_14"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"sp:pt-3",
																			"sp:pl-3",
																			"sp:pr-3",
																			"sp:pb-3",
																			"fd:flex-row",
																			"j:justify-center",
																			"a:align-start"
																		]
																	},
																	"class": "d-flex pt-3 pl-3 pr-3 pb-3 flex-row justify-center align-start"
																}
															},
															"S": {
																"xs-xl": {
																	"alignItems": "center",
																	"justifyContent": "center",
																	"flexDirection": "row"
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCheckbox",
																			"P": {
																				"ID": {
																					"H": "ch_externalSaleTeam",
																					"T": "prop"
																				},
																				"label": {
																					"H": "'Şube Dışı Satış Ekibi'",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"DiscardSettings": {
																					"H": "true",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "true",
																					"T": "prop"
																				}
																			},
																			"E": {
																				"click": {
																					"H": "debugger\r\nif (quick.this.qValue == true) {\r\n    components.rdg_externalSaleTeam.visible = true;\r\n    components.rdg_externalSaleTeam.qValue = 0;\r\n\r\n} else {\r\n    components.rdg_externalSaleTeam.visible = false;\r\n}\r\n\r\nquick.MM.trigger('saleTeamCheckedEvent');",
																					"P": "mouseEvent:unknown | undefined",
																					"HL": "TS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_113"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginTop": "",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"fontColor": "#686868",
																					"fontFamily": "Roboto",
																					"fontSize": "16",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "",
																					"imageSize": "24px",
																					"backgroundColor": "#fffff",
																					"defaultBorderColor": "#686868",
																					"selectedBorderColor": "#686868",
																					"boxShadow": "",
																					"boxSizing": "",
																					"borderTopStyle": "",
																					"borderRightStyle": "",
																					"borderBottomStyle": "",
																					"borderLeftStyle": "",
																					"borderTopLeftRadius": "",
																					"borderTopRightRadius": "",
																					"borderBottomLeftRadius": "",
																					"borderBottomRightRadius": "",
																					"borderTopWidth": "",
																					"borderRightWidth": "",
																					"borderBottomWidth": "",
																					"borderLeftWidth": "",
																					"outerBorderColor": "",
																					"sides": ""
																				}
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:mt-0"
																						]
																					},
																					"class": "mt-0"
																				}
																			}
																		},
																		{
																			"T": "VRadioGroup",
																			"P": {
																				"ID": {
																					"H": "rdg_externalSaleTeam",
																					"T": "prop"
																				},
																				"column": {
																					"H": "false",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "false",
																					"T": "prop"
																				},
																				"row": {
																					"H": "true",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "true",
																					"T": "prop"
																				},
																				"DiscardSettings": {
																					"H": "true",
																					"T": "prop"
																				}
																			},
																			"E": {
																				"change": {
																					"H": "quick.MM.trigger('saleTeamChangedEvent');",
																					"P": "value:any",
																					"HL": "TS"
																				}
																			},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VRadio",
																							"P": {
																								"ID": {
																									"H": "vradio_individual",
																									"T": "prop"
																								},
																								"label": {
																									"H": "'Bireysel'",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {},
																							"_Editor": {
																								"eID": "EdtrComp_119"
																							},
																							"O": {
																								"cType": "child",
																								"layout": {
																									"dOpt": {
																										"xs": []
																									},
																									"class": ""
																								}
																							},
																							"S": {
																								"xs-xl": {
																									"marginLeft": "",
																									"marginRight": "4px",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "",
																									"paddingBottom": "",
																									"paddingLeft": "",
																									"paddingRight": "",
																									"width": "",
																									"height": "",
																									"maxWidth": "",
																									"maxHeight": "",
																									"minWidth": "",
																									"minHeight": "",
																									"unlink": "false",
																									"unlinkMax": "false",
																									"unlinkMin": "false",
																									"isSizeCollapsed": "false",
																									"fontColor": "#686868",
																									"fontFamily": "Roboto",
																									"fontSize": "16",
																									"fontStyle": "normal",
																									"fontWeight": "400",
																									"combinedFont": "Roboto-Regular",
																									"ThemeFont": "Custom",
																									"imageSize": "24px",
																									"defaultBorderColor": "#686868",
																									"selectedBorderColor": "#686868",
																									"boxShadow": "",
																									"boxSizing": "",
																									"borderTopStyle": "",
																									"borderRightStyle": "",
																									"borderBottomStyle": "",
																									"borderLeftStyle": "",
																									"borderTopLeftRadius": "",
																									"borderTopRightRadius": "",
																									"borderBottomLeftRadius": "",
																									"borderBottomRightRadius": "",
																									"borderTopWidth": "",
																									"borderRightWidth": "",
																									"borderBottomWidth": "",
																									"borderLeftWidth": "",
																									"outerBorderColor": "",
																									"sides": ""
																								}
																							}
																						},
																						{
																							"T": "VRadio",
																							"P": {
																								"ID": {
																									"H": "vradio_commercial",
																									"T": "prop"
																								},
																								"label": {
																									"H": "'Ticari'",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {},
																							"_Editor": {
																								"eID": "EdtrComp_120"
																							},
																							"O": {
																								"cType": "child"
																							},
																							"S": {
																								"xs-xl": {
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "",
																									"paddingBottom": "",
																									"paddingLeft": "",
																									"paddingRight": "",
																									"width": "",
																									"height": "",
																									"maxWidth": "",
																									"maxHeight": "",
																									"minWidth": "",
																									"minHeight": "",
																									"unlink": "false",
																									"unlinkMax": "false",
																									"unlinkMin": "false",
																									"isSizeCollapsed": "false",
																									"fontColor": "#686868",
																									"fontFamily": "Roboto",
																									"fontSize": "16",
																									"fontStyle": "normal",
																									"fontWeight": "400",
																									"combinedFont": "Roboto-Regular",
																									"ThemeFont": "Custom",
																									"imageSize": "24px",
																									"defaultBorderColor": "#686868",
																									"selectedBorderColor": "#686868",
																									"boxShadow": "",
																									"boxSizing": "",
																									"borderTopStyle": "",
																									"borderRightStyle": "",
																									"borderBottomStyle": "",
																									"borderLeftStyle": "",
																									"borderTopLeftRadius": "",
																									"borderTopRightRadius": "",
																									"borderBottomLeftRadius": "",
																									"borderBottomRightRadius": "",
																									"borderTopWidth": "",
																									"borderRightWidth": "",
																									"borderBottomWidth": "",
																									"borderLeftWidth": "",
																									"outerBorderColor": "",
																									"sides": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_116"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginTop": "",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"activeRadioLabelFontColor": "#000000",
																					"activeRadioLabelFontFamily": "Roboto",
																					"activeRadioLabelFontSize": "16px",
																					"activeRadioLabelFontStyle": "normal",
																					"activeRadioLabelFontWeight": "400",
																					"activeRadioCombinedFont": "Roboto-Regular",
																					"activeRadioThemeFont": "Custom",
																					"inactiveRadioLabelFontColor": "#000000",
																					"inactiveRadioLabelFontFamily": "Roboto",
																					"inactiveRadioLabelFontSize": "16px",
																					"inactiveRadioLabelFontStyle": "normal",
																					"inactiveRadioLabelFontWeight": "400",
																					"inactiveRadioCombinedFont": "Roboto-Regular",
																					"inactiveRadioThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "12px",
																					"backgroundColor": "#ffffff",
																					"hoverColor": "",
																					"activeRadioButtonColor": "#1976d2",
																					"inactiveRadioButtonColor": "rgba(0,0,0,.54)",
																					"boxShadow": "",
																					"boxSizing": "",
																					"borderTopStyle": "",
																					"borderRightStyle": "",
																					"borderBottomStyle": "",
																					"borderLeftStyle": "",
																					"borderTopLeftRadius": "",
																					"borderTopRightRadius": "",
																					"borderBottomLeftRadius": "",
																					"borderBottomRightRadius": "",
																					"borderTopWidth": "",
																					"borderRightWidth": "",
																					"borderBottomWidth": "",
																					"borderLeftWidth": "",
																					"defaultBorderColor": "",
																					"sides": ""
																				}
																			},
																			"SC": {
																				"inactiveRadioLabelFontColor": {
																					"VRadio": "fontColor"
																				},
																				"inactiveRadioLabelFontFamily": {
																					"VRadio": "fontFamily"
																				},
																				"inactiveRadioLabelFontSize": {
																					"VRadio": "fontSize"
																				},
																				"inactiveRadioLabelFontStyle": {
																					"VRadio": "fontStyle"
																				},
																				"inactiveRadioLabelFontWeight": {
																					"VRadio": "fontWeight"
																				},
																				"inactiveRadioCombinedFont": {
																					"VRadio": "combinedFont"
																				}
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pt-0",
																							"sp:pr-0",
																							"sp:pb-0",
																							"sp:pl-0",
																							"sp:mb-0",
																							"sp:ml-0",
																							"sp:mt-0",
																							"sp:mr-0"
																						]
																					},
																					"class": "pt-0 pr-0 pb-0 pl-0 mb-0 ml-0 mt-0 mr-0"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_20",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_20"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"sp:pl-3",
																			"sp:pt-3",
																			"sp:pr-3",
																			"sp:pb-3",
																			"fd:flex-column"
																		]
																	},
																	"class": "d-flex pl-3 pt-3 pr-3 pb-3 flex-column"
																}
															},
															"S": {
																"xs-xl": {
																	"alignItems": "center",
																	"justifyContent": "center",
																	"flexDirection": "column"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_4"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "px",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "156px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_2"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"sp:pb-0",
											"sp:pt-0",
											"sp:pl-3",
											"sp:pr-3"
										]
									},
									"class": "pb-0 pt-0 pl-3 pr-3"
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pl-0",
							"sp:pt-0",
							"sp:pr-0",
							"sp:pb-0"
						]
					},
					"class": "pl-0 pt-0 pr-0 pb-0"
				}
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bnkasAsDCFire/common/as_alertCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "'Tamam'",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "'error'",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "components.as_alertCustomComp.close();",
					"C": true,
					"HL": "TS"
				},
				"btn1ClickEvent": {
					"H": "components.as_alertCustomComp.close();",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_37",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_37"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_29"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_loadingCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bnkasAsDCFire/common/as_loadingCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_36",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_36"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_28"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		}
	],
	"cJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "╬false╩╩",
					"T": "prop"
				},
				"externalProps": {
					"H": "╬[]╠'assuranceType'╩╠'assuranceTypeDisabled'╩╠'consumerCode'╩╠'screenName'╩╠'branchCode'╩╠'branchCodeItems'╩╠'redirector'╩╠'redirectorItems'╩╠'isExternalSaleTeam'╩╠'externalSaleTeam'╩╠'validationErrors'╩╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"externalEvents": {
					"H": "╬[]╠{}╠=╣name╩╠validateComponents╩╩╠=╣params╩╠[]╩╩╩╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"PostRender": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n; //if (+((<any>quick.containerServices).getUserContext().branchCode) <= 1000) {\r\n",
					"TO": 1,
					"HL": "JS"
				},
				"retrieveBranchUsers": {
					"H": "var _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n; // debugger;\r\nsetTimeout(function () {\r\n    components.as_loadingCustomComp.open();\r\n}, 0);\r\nvar requestData = {\r\n    \"branchCode\": quick.store.get('$branchCode'),\r\n    \"includeSubBranch\": true\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/uiclient/retrieveBranchUsers',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n};\r\n(_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n    var _a, _b;\r\n    quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n    if ((_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.branchUserList) {\r\n        components.as_loadingCustomComp.close();\r\n        components.vauto_redirector.items = (_b = resp === null || resp === void 0 ? void 0 : resp.data) === null || _b === void 0 ? void 0 : _b.branchUserList.map(function (item) { return ({\r\n            name: item.userName + ' ' + item.userSurname + ((item === null || item === void 0 ? void 0 : item.userPositionDefinition) ? ' - ' + item.userPositionDefinition : ''),\r\n            code: item.userId + '-' + item.userName\r\n        }); });\r\n    }\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    quick.EM.trace('hata aldı');\r\n    components.as_loadingCustomComp.close();\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
					"C": true,
					"HL": "JS"
				},
				"retrieveCodeStrings": {
					"H": "var _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar requestData = {\r\n    \"codeStringCategory\": \"INSURANCE_TYPE\"\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/bnkasgeneral/retrieveCodeStrings',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n};\r\nfunction getCodeString(response) {\r\n    for (var i = 0; i < response.length; i++) {\r\n        if (codeString == response[i].codeString) {\r\n            return response[i].value;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n(_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n    var _a, _b;\r\n    quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n    if ((_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.codeStringsDtoList) {\r\n        var codeStringValue = void 0;\r\n        codeStringValue = getCodeString((_b = resp === null || resp === void 0 ? void 0 : resp.data) === null || _b === void 0 ? void 0 : _b.codeStringsDtoList);\r\n        components.txt_assuranceType.qValue = codeStringValue;\r\n        quick.store.set('$policyType', codeStringValue);\r\n    }\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"setAssuranceType": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.txt_assuranceType.qValue = value;\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"saleTeamChangedEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\nvar blankList = [];\r\nif (components.ch_externalSaleTeam) {\r\n    if (components.rdg_externalSaleTeam.qValue === 0) {\r\n        quick.store.set('$branchCode', 146);\r\n        quick.MM.trigger('retrieveBranchUsers');\r\n    }\r\n    else if (components.rdg_externalSaleTeam.qValue === 1) {\r\n        quick.store.set('$branchCode', 300);\r\n        quick.MM.trigger('retrieveBranchUsers');\r\n    }\r\n}\r\nelse {\r\n    quick.MM.trigger('retrieveBranchUsers');\r\n}\r\n",
					"C": true,
					"HL": "JS"
				},
				"saleTeamCheckedEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\nvar blankList = [];\r\nif (components.ch_externalSaleTeam) {\r\n    if (components.rdg_externalSaleTeam.qValue === 0) {\r\n        quick.store.set('$branchCode', 146);\r\n        quick.MM.trigger('retrieveBranchUsers');\r\n    }\r\n    else if (components.rdg_externalSaleTeam.qValue === 1) {\r\n        quick.store.set('$branchCode', 300);\r\n        quick.MM.trigger('retrieveBranchUsers');\r\n    }\r\n}\r\nelse {\r\n    quick.MM.trigger('retrieveBranchUsers');\r\n}\r\n",
					"C": true,
					"HL": "JS"
				},
				"getAssuranceCompInfo": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar redirectorId = components.vauto_redirector.qValue.split('-')[0];\r\nvar branchCode = components.vauto_branchCode.qValue.split(' - ')[0];\r\nvar branchName = components.vauto_branchCode.qValue.split(' - ')[1];\r\nvar info = {\r\n    assuranceType: components.txt_assuranceType.qValue,\r\n    branchCode: branchCode,\r\n    branchName: branchName,\r\n    redirector: redirectorId\r\n};\r\nquick.store.set(\"$getAssuranceCompInfo\", info);\r\nquick.return(info);\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"findOrganizationUnitList": {
					"H": "var _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n; // debugger;\r\nsetTimeout(function () {\r\n    components.as_loadingCustomComp.open();\r\n}, 1);\r\nvar requestData = {\r\n    \"typeFilter\": {\r\n        \"typeID\": [\r\n            4\r\n        ]\r\n    }\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/uiclient/findOrganizationUnitList',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n};\r\n(_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n    var _a, _b;\r\n    quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n    components.as_loadingCustomComp.close();\r\n    if ((_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.findOrganizationUnitList) {\r\n        var filteredData = void 0;\r\n        filteredData = (_b = resp === null || resp === void 0 ? void 0 : resp.data) === null || _b === void 0 ? void 0 : _b.findOrganizationUnitList.filter(function (unit) { return unit.code >= 1000; });\r\n        if (filteredData) {\r\n            components.vauto_branchCode.items = filteredData.map(function (item) { return ({\r\n                name: item.code + ' - ' + item.name,\r\n                code: item.code + ' - ' + item.name\r\n            }); });\r\n        }\r\n        //ikinci ekrandan geri geliniyorsa;\r\n        // let storeData = quick.store.get('getAssuranceCompInfo');\r\n        // components.vauto_branchCode.qValue = {\r\n        //   name: storeData.branchCode + ' - ' + storeData.branchName,\r\n        //   code: storeData.branchCode + ' - ' + storeData.branchName\r\n        // }\r\n    }\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    quick.EM.trace('hata aldı');\r\n    components.as_loadingCustomComp.close();\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
					"C": true,
					"HL": "JS"
				},
				"componentStatusFirst": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar componentsList = [\r\n    'txt_assuranceType',\r\n    'vauto_branchCode',\r\n    'vauto_redirector',\r\n    'ch_externalSaleTeam',\r\n    'rdg_externalSaleTeam'\r\n];\r\nvar assuranceCompStatus = componentsList.reduce(function (status, component) {\r\n    status[component] = components[component].disabled;\r\n    return status;\r\n}, {});\r\nquick.EM.trace(assuranceCompStatus);\r\nquick.store.set('$assuranceCompStatus', assuranceCompStatus);\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"componentStatusDisabled": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar componentsList = [\r\n    'txt_assuranceType',\r\n    'vauto_branchCode',\r\n    'vauto_redirector',\r\n    'ch_externalSaleTeam',\r\n    'rdg_externalSaleTeam'\r\n];\r\ncomponentsList.forEach(function (component) {\r\n    if (components[component].disabled === false) {\r\n        components[component].disabled = true;\r\n    }\r\n});\r\nquick.return(components);\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"componentStatusBackFirst": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar assuranceCompStatus = quick.store.get('$assuranceCompStatus');\r\nObject.keys(assuranceCompStatus).forEach(function (component) {\r\n    if (components[component]) {\r\n        components[component].disabled = assuranceCompStatus[component];\r\n    }\r\n});\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"setConsumerAndScreenInfo": {
					"H": "var _a, _b, _c, _d;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\n//setConsumerAndScreenInfo\r\nvar consumerCode = (_b = (_a = quick === null || quick === void 0 ? void 0 : quick.parent) === null || _a === void 0 ? void 0 : _a.props) === null || _b === void 0 ? void 0 : _b.consumerCode;\r\nvar screenName = (_d = (_c = quick === null || quick === void 0 ? void 0 : quick.parent) === null || _c === void 0 ? void 0 : _c.props) === null || _d === void 0 ? void 0 : _d.screenName;\r\nquick.store.set('$customConsumerCode', consumerCode);\r\nquick.store.set('$customScreenName', screenName);\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"EndRender": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n; // debugger;\r\nquick.store.set('$branchCode', quick.containerServices.getUserContext().branchCode);\r\nquick.MM.trigger('findOrganizationUnitList');\r\nquick.MM.trigger('retrieveBranchUsers');\r\n",
					"HL": "JS"
				},
				"validateComponents": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar validationErrors = [];\r\nvar isBranchCodeValid = quick.Quick.validate(\"vauto_branchCode\", false, false);\r\nvar isRedirectorValid = quick.Quick.validate(\"vauto_redirector\", false, false);\r\nvar isAssuranceTypeValid = quick.Quick.validate(\"txt_assuranceType\", false, false);\r\nif (!isBranchCodeValid)\r\n    validationErrors.push(\"Şube Kodu boş olamaz\");\r\nif (!isRedirectorValid)\r\n    validationErrors.push(\"Yönlendiren boş olamaz\");\r\nif (!isAssuranceTypeValid)\r\n    validationErrors.push(\"Sigorta Türü boş olamaz\");\r\nquick.parent.props.validationErrors = validationErrors;\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child",
				"compDomClasses": "newDropBorder"
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "VContainerComp",
					"T": "prop"
				},
				"class": {
					"H": "╬'container container--fluid'╩╩",
					"T": "class"
				},
				"visible": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"eager": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_2",
									"T": "prop"
								},
								"color": {
									"H": "╬'white'╩╩",
									"T": "prop"
								},
								"visible": {
									"H": "╬true╩╩",
									"T": "prop"
								},
								"elevation": {
									"H": "╬0╩╩",
									"T": "prop"
								},
								"disabled": {
									"H": "╬false╩╩",
									"T": "prop",
									"HL": "QS"
								},
								"width": {
									"H": "╬'100%'╩╩",
									"T": "prop",
									"HL": "QS"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_17",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCard",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_19",
																					"T": "prop"
																				},
																				"color": {
																					"H": "╬'primary'╩╩",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"height": {
																					"H": "╬'50px'╩╩",
																					"T": "prop"
																				},
																				"flat": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "╬'b-0'╩╩",
																					"T": "prop"
																				},
																				"dark": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VRow",
																							"P": {
																								"ID": {
																									"H": "EdtrComp_21",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VCol",
																											"C": {
																												"default": {
																													"c": [
																														{
																															"T": "QLabel",
																															"P": {
																																"ID": {
																																	"H": "EdtrComp_23",
																																	"T": "prop"
																																},
																																"tagType": {
																																	"H": "╬'span'╩╩",
																																	"T": "prop"
																																},
																																"text": {
																																	"H": "╬'Sigorta Bilgileri'╩╩",
																																	"T": "prop"
																																},
																																"visible": {
																																	"H": "╬true╩╩",
																																	"T": "prop"
																																},
																																"processHtml": {
																																	"H": "╬false╩╩",
																																	"T": "prop"
																																}
																															},
																															"E": {},
																															"C": {},
																															"_Editor": {
																																"eID": "EdtrComp_23"
																															},
																															"O": {
																																"cType": "slot",
																																"layout": {
																																	"dOpt": {
																																		"xs": [
																																			"sp:ml-5",
																																			"tt:text-h6"
																																		]
																																	},
																																	"class": "ml-5 text-h6"
																																},
																																"compDomClasses": "q-label ml-5 text-h6 newDropBorder"
																															}
																														}
																													],
																													"cType": "slot"
																												}
																											},
																											"E": {},
																											"P": {
																												"ID": {
																													"H": "EdtrComp_22",
																													"T": "prop"
																												}
																											},
																											"_Editor": {
																												"eID": "EdtrComp_22"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"d:d-flex",
																															"fd:flex-column",
																															"sp:pb-3",
																															"sp:pt-3",
																															"sp:pl-3",
																															"sp:pr-3"
																														]
																													},
																													"class": "d-flex flex-column pb-3 pt-3 pl-3 pr-3"
																												},
																												"compDomClasses": "col d-flex flex-column pb-3 pt-3 pl-3 pr-3 pb-0 newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_21"
																							},
																							"O": {
																								"cType": "slot",
																								"compDomClasses": "row newDropBorder"
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_19"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				},
																				"compDomClasses": "v-card v-card--flat v-sheet theme--dark rounded-b-0 primary newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_18",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_18"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"sp:pt-0",
																			"sp:pb-3",
																			"sp:pl-0",
																			"sp:pr-0"
																		]
																	},
																	"class": "d-flex flex-column pt-0 pb-3 pl-0 pr-0"
																},
																"compDomClasses": "col d-flex flex-column pt-0 pb-3 pl-0 pr-0 pb-0 newDropBorder"
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_17"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "VRowComp",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txt_assuranceType",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬'Sigorta Türü'╩╩",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"disabled": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"DiscardSettings": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_26"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginTop": "",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"labelDefaultFontColor": "#686868",
																					"labelDefaultFontFamily": "Roboto",
																					"labelDefaultFontSize": "16px",
																					"labelDefaultFontStyle": "normal",
																					"labelDefaultFontWeight": "400",
																					"labelDefaultCombinedFont": "Roboto-Regular",
																					"labelDefaultThemeFont": "Custom",
																					"prefixFontColor": "#000",
																					"prefixFontFamily": "Roboto",
																					"prefixFontSize": "16px",
																					"prefixFontStyle": "normal",
																					"prefixFontWeight": "400",
																					"prefixCombinedFont": "Roboto-Regular",
																					"prefixThemeFont": "Custom",
																					"PHFontColor": "#686868",
																					"PHFontFamily": "Roboto",
																					"PHFontSize": "16px",
																					"PHFontStyle": "normal",
																					"PHFontWeight": "400",
																					"PHCombinedFont": "Roboto-Regular",
																					"PHThemeFont": "Custom",
																					"inputFontColor": "#000",
																					"inputFontFamily": "Roboto",
																					"inputFontSize": "16px",
																					"inputFontStyle": "normal",
																					"inputFontWeight": "400",
																					"inputCombinedFont": "Roboto-Regular",
																					"inputDefaultThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "",
																					"backgroundColor": "#ffffff",
																					"innerBoxShadow": "",
																					"activeBorderColor": "#1976d2",
																					"innerBoxSizing": "",
																					"innerBorderTopStyle": "solid",
																					"innerBorderRightStyle": "solid",
																					"innerBorderBottomStyle": "solid",
																					"innerBorderLeftStyle": "solid",
																					"innerBorderTopLeftRadius": "",
																					"innerBorderTopRightRadius": "",
																					"innerBorderBottomLeftRadius": "",
																					"innerBorderBottomRightRadius": "",
																					"innerBorderTopWidth": "1px",
																					"innerBorderRightWidth": "1px",
																					"innerBorderBottomWidth": "1px",
																					"innerBorderLeftWidth": "1px",
																					"innerDefaultBorderColor": "#0000006b",
																					"innerSides": "Top,Right,Bottom,Left",
																					"outlined": "true"
																				}
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "v-input v-input--hide-details v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--enclosed v-text-field--outlined v-text-field--rounded newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "VColComp",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_3"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-row",
																			"j:justify-center",
																			"sp:pt-3",
																			"sp:pr-3",
																			"sp:pl-3",
																			"sp:pb-3",
																			"a:align-start"
																		]
																	},
																	"class": "d-flex flex-row justify-center pt-3 pr-3 pl-3 pb-3 align-start"
																},
																"compDomClasses": "col d-flex flex-row justify-center pt-3 pr-3 pl-3 pb-3 align-start pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "row",
																	"alignItems": "center",
																	"justifyContent": "center",
																	"marginLeft": "px",
																	"marginRight": "px",
																	"marginBottom": "px",
																	"marginTop": "px",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "#ffffff",
																	"boxShadow": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_branchCode",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "╬'name'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "╬'code'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬'Şube Kodu'╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"DiscardSettings": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"attach": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rules": {
																					"H": "╬[]╠()╣.╣.╣Quick╩╠validation╩╩╠required╩╩╠'Lütfen Şube Kodu seçiniz.'╩╩╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"noDataText": {
																					"H": "╬'Veri bulunamadı'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_53"
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"defaultFontColor": "#666666",
																					"defaultFontFamily": "Roboto",
																					"defaultFontSize": "16px",
																					"defaultFontStyle": "normal",
																					"defaultFontWeight": "400",
																					"defaultCombinedFont": "Roboto-Regular",
																					"deafultThemeFont": "Custom",
																					"PHFontColor": "#9E9E9E",
																					"PHFontFamily": "Roboto",
																					"PHFontSize": "16px",
																					"PHFontStyle": "normal",
																					"PHFontWeight": "400",
																					"PHCombinedFont": "Roboto-Regular",
																					"PHThemeFont": "Custom",
																					"inputFontColor": "#000",
																					"inputFontFamily": "Roboto",
																					"inputFontSize": "16px",
																					"inputFontStyle": "normal",
																					"inputFontWeight": "400",
																					"inputCombinedFont": "Roboto-Regular",
																					"inputThemeFont": "Custom",
																					"menuFontColor": "#000",
																					"menuFontFamily": "Roboto",
																					"menuFontSize": "16px",
																					"menuFontStyle": "normal",
																					"menuFontWeight": "400",
																					"menuCombinedFont": "Roboto-Regular",
																					"menuThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "",
																					"backgroundColor": "#FFFFFF",
																					"menuBackgroundColor": "#FFFFFF",
																					"menuDefaultHoverColor": "#000000de",
																					"menuActiveHoverColor": "#1976d2",
																					"innerBoxShadow": "",
																					"menuBoxShadow": "",
																					"activeBorderColor": "#1976d2",
																					"innerBoxSizing": "",
																					"innerBorderTopStyle": "solid",
																					"innerBorderRightStyle": "solid",
																					"innerBorderBottomStyle": "solid",
																					"innerBorderLeftStyle": "solid",
																					"innerBorderTopLeftRadius": "",
																					"innerBorderTopRightRadius": "",
																					"innerBorderBottomLeftRadius": "",
																					"innerBorderBottomRightRadius": "",
																					"innerBorderTopWidth": "1px",
																					"innerBorderRightWidth": "1px",
																					"innerBorderBottomWidth": "1px",
																					"innerBorderLeftWidth": "1px",
																					"innerDefaultBorderColor": "#0000006b",
																					"innerSides": "Top,Right,Bottom,Left",
																					"outlined": "true"
																				}
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				},
																				"compDomClasses": "v-input v-input--hide-details v-input--dense theme--light v-text-field v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_8",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_8"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"sp:pl-3",
																			"sp:pt-3",
																			"sp:pr-3",
																			"sp:pb-3",
																			"j:justify-center",
																			"fd:flex-row",
																			"a:align-start"
																		]
																	},
																	"class": "d-flex pl-3 pt-3 pr-3 pb-3 justify-center flex-row align-start"
																},
																"compDomClasses": "col d-flex pl-3 pt-3 pr-3 pb-3 justify-center flex-row align-start pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"alignItems": "center",
																	"justifyContent": "center",
																	"flexDirection": "row"
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_redirector",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬'Yönlendiren'╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "╬'name'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "╬'code'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"DiscardSettings": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"attach": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rules": {
																					"H": "╬[]╠()╣.╣.╣Quick╩╠validation╩╩╠required╩╩╠'Lütfen Yönlendiren seçiniz.'╩╩╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"noDataText": {
																					"H": "╬'Veri bulunamadı'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"change": {
																					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nquick.store.set('$selectedRedirector', components.vauto_redirector.qValue);\r\n",
																					"HL": "JS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_80"
																			},
																			"S": {
																				"xs-xl": {
																					"marginTop": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginLeft": "",
																					"paddingTop": "",
																					"paddingRight": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"defaultFontColor": "#666666",
																					"defaultFontFamily": "Roboto",
																					"defaultFontSize": "16px",
																					"defaultFontStyle": "normal",
																					"defaultFontWeight": "400",
																					"defaultCombinedFont": "Roboto-Regular",
																					"deafultThemeFont": "Custom",
																					"PHFontColor": "#9E9E9E",
																					"PHFontFamily": "Roboto",
																					"PHFontSize": "16px",
																					"PHFontStyle": "normal",
																					"PHFontWeight": "400",
																					"PHCombinedFont": "Roboto-Regular",
																					"PHThemeFont": "Custom",
																					"inputFontColor": "#000",
																					"inputFontFamily": "Roboto",
																					"inputFontSize": "16px",
																					"inputFontStyle": "normal",
																					"inputFontWeight": "400",
																					"inputCombinedFont": "Roboto-Regular",
																					"inputThemeFont": "Custom",
																					"menuFontColor": "#000",
																					"menuFontFamily": "Roboto",
																					"menuFontSize": "16px",
																					"menuFontStyle": "normal",
																					"menuFontWeight": "400",
																					"menuCombinedFont": "Roboto-Regular",
																					"menuThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "",
																					"backgroundColor": "#FFFFFF",
																					"menuBackgroundColor": "#FFFFFF",
																					"menuDefaultHoverColor": "#000000de",
																					"menuActiveHoverColor": "#1976d2",
																					"innerBoxShadow": "",
																					"menuBoxShadow": "",
																					"activeBorderColor": "#1976d2",
																					"innerBoxSizing": "",
																					"innerBorderTopStyle": "solid",
																					"innerBorderRightStyle": "solid",
																					"innerBorderBottomStyle": "solid",
																					"innerBorderLeftStyle": "solid",
																					"innerBorderTopLeftRadius": "",
																					"innerBorderTopRightRadius": "",
																					"innerBorderBottomLeftRadius": "",
																					"innerBorderBottomRightRadius": "",
																					"innerBorderTopWidth": "1px",
																					"innerBorderRightWidth": "1px",
																					"innerBorderBottomWidth": "1px",
																					"innerBorderLeftWidth": "1px",
																					"innerDefaultBorderColor": "#0000006b",
																					"innerSides": "Top,Right,Bottom,Left",
																					"outlined": "true"
																				}
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "v-input v-input--hide-details v-input--dense theme--light v-text-field v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_14",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_14"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"sp:pt-3",
																			"sp:pl-3",
																			"sp:pr-3",
																			"sp:pb-3",
																			"fd:flex-row",
																			"j:justify-center",
																			"a:align-start"
																		]
																	},
																	"class": "d-flex pt-3 pl-3 pr-3 pb-3 flex-row justify-center align-start"
																},
																"compDomClasses": "col d-flex pt-3 pl-3 pr-3 pb-3 flex-row justify-center align-start pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"alignItems": "center",
																	"justifyContent": "center",
																	"flexDirection": "row"
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCheckbox",
																			"P": {
																				"ID": {
																					"H": "ch_externalSaleTeam",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬'Şube Dışı Satış Ekibi'╩╩",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"DiscardSettings": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {
																				"click": {
																					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\nif (quick.this.qValue == true) {\r\n    components.rdg_externalSaleTeam.visible = true;\r\n    components.rdg_externalSaleTeam.qValue = 0;\r\n}\r\nelse {\r\n    components.rdg_externalSaleTeam.visible = false;\r\n}\r\nquick.MM.trigger('saleTeamCheckedEvent');\r\n",
																					"P": "mouseEvent:unknown | undefined",
																					"HL": "JS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_113"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginTop": "",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"fontColor": "#686868",
																					"fontFamily": "Roboto",
																					"fontSize": "16",
																					"fontStyle": "normal",
																					"fontWeight": "400",
																					"combinedFont": "Roboto-Regular",
																					"ThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "",
																					"imageSize": "24px",
																					"backgroundColor": "#fffff",
																					"defaultBorderColor": "#686868",
																					"selectedBorderColor": "#686868",
																					"boxShadow": "",
																					"boxSizing": "",
																					"borderTopStyle": "",
																					"borderRightStyle": "",
																					"borderBottomStyle": "",
																					"borderLeftStyle": "",
																					"borderTopLeftRadius": "",
																					"borderTopRightRadius": "",
																					"borderBottomLeftRadius": "",
																					"borderBottomRightRadius": "",
																					"borderTopWidth": "",
																					"borderRightWidth": "",
																					"borderBottomWidth": "",
																					"borderLeftWidth": "",
																					"outerBorderColor": "",
																					"sides": ""
																				}
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:mt-0"
																						]
																					},
																					"class": "mt-0"
																				},
																				"compDomClasses": "v-input v-input--hide-details v-input--dense theme--light v-input--selection-controls v-input--checkbox mt-0 newDropBorder"
																			}
																		},
																		{
																			"T": "VRadioGroup",
																			"P": {
																				"ID": {
																					"H": "rdg_externalSaleTeam",
																					"T": "prop"
																				},
																				"column": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"row": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"DiscardSettings": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {
																				"change": {
																					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.MM.trigger('saleTeamChangedEvent');\r\n",
																					"P": "value:any",
																					"HL": "JS"
																				}
																			},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VRadio",
																							"P": {
																								"ID": {
																									"H": "vradio_individual",
																									"T": "prop"
																								},
																								"label": {
																									"H": "╬'Bireysel'╩╩",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {},
																							"_Editor": {
																								"eID": "EdtrComp_119"
																							},
																							"O": {
																								"cType": "child",
																								"layout": {
																									"dOpt": {
																										"xs": []
																									},
																									"class": ""
																								},
																								"compDomClasses": "v-radio theme--light newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"marginLeft": "",
																									"marginRight": "4px",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "",
																									"paddingBottom": "",
																									"paddingLeft": "",
																									"paddingRight": "",
																									"width": "",
																									"height": "",
																									"maxWidth": "",
																									"maxHeight": "",
																									"minWidth": "",
																									"minHeight": "",
																									"unlink": "false",
																									"unlinkMax": "false",
																									"unlinkMin": "false",
																									"isSizeCollapsed": "false",
																									"fontColor": "#686868",
																									"fontFamily": "Roboto",
																									"fontSize": "16",
																									"fontStyle": "normal",
																									"fontWeight": "400",
																									"combinedFont": "Roboto-Regular",
																									"ThemeFont": "Custom",
																									"imageSize": "24px",
																									"defaultBorderColor": "#686868",
																									"selectedBorderColor": "#686868",
																									"boxShadow": "",
																									"boxSizing": "",
																									"borderTopStyle": "",
																									"borderRightStyle": "",
																									"borderBottomStyle": "",
																									"borderLeftStyle": "",
																									"borderTopLeftRadius": "",
																									"borderTopRightRadius": "",
																									"borderBottomLeftRadius": "",
																									"borderBottomRightRadius": "",
																									"borderTopWidth": "",
																									"borderRightWidth": "",
																									"borderBottomWidth": "",
																									"borderLeftWidth": "",
																									"outerBorderColor": "",
																									"sides": ""
																								}
																							}
																						},
																						{
																							"T": "VRadio",
																							"P": {
																								"ID": {
																									"H": "vradio_commercial",
																									"T": "prop"
																								},
																								"label": {
																									"H": "╬'Ticari'╩╩",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {},
																							"_Editor": {
																								"eID": "EdtrComp_120"
																							},
																							"O": {
																								"cType": "child",
																								"compDomClasses": "v-radio theme--light newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "",
																									"paddingBottom": "",
																									"paddingLeft": "",
																									"paddingRight": "",
																									"width": "",
																									"height": "",
																									"maxWidth": "",
																									"maxHeight": "",
																									"minWidth": "",
																									"minHeight": "",
																									"unlink": "false",
																									"unlinkMax": "false",
																									"unlinkMin": "false",
																									"isSizeCollapsed": "false",
																									"fontColor": "#686868",
																									"fontFamily": "Roboto",
																									"fontSize": "16",
																									"fontStyle": "normal",
																									"fontWeight": "400",
																									"combinedFont": "Roboto-Regular",
																									"ThemeFont": "Custom",
																									"imageSize": "24px",
																									"defaultBorderColor": "#686868",
																									"selectedBorderColor": "#686868",
																									"boxShadow": "",
																									"boxSizing": "",
																									"borderTopStyle": "",
																									"borderRightStyle": "",
																									"borderBottomStyle": "",
																									"borderLeftStyle": "",
																									"borderTopLeftRadius": "",
																									"borderTopRightRadius": "",
																									"borderBottomLeftRadius": "",
																									"borderBottomRightRadius": "",
																									"borderTopWidth": "",
																									"borderRightWidth": "",
																									"borderBottomWidth": "",
																									"borderLeftWidth": "",
																									"outerBorderColor": "",
																									"sides": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_116"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginTop": "",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"activeRadioLabelFontColor": "#000000",
																					"activeRadioLabelFontFamily": "Roboto",
																					"activeRadioLabelFontSize": "16px",
																					"activeRadioLabelFontStyle": "normal",
																					"activeRadioLabelFontWeight": "400",
																					"activeRadioCombinedFont": "Roboto-Regular",
																					"activeRadioThemeFont": "Custom",
																					"inactiveRadioLabelFontColor": "#000000",
																					"inactiveRadioLabelFontFamily": "Roboto",
																					"inactiveRadioLabelFontSize": "16px",
																					"inactiveRadioLabelFontStyle": "normal",
																					"inactiveRadioLabelFontWeight": "400",
																					"inactiveRadioCombinedFont": "Roboto-Regular",
																					"inactiveRadioThemeFont": "Custom",
																					"errorMessageFontColor": "#E96767",
																					"errorMessageFontFamily": "Roboto",
																					"errorMessageFontSize": "12px",
																					"errorMessageFontStyle": "normal",
																					"errorMessageFontWeight": "400",
																					"EMCombinedFont": "Roboto-Regular",
																					"errorMessageThemeFont": "Custom",
																					"errorMessageLineHeight": "12px",
																					"backgroundColor": "#ffffff",
																					"hoverColor": "",
																					"activeRadioButtonColor": "#1976d2",
																					"inactiveRadioButtonColor": "rgba(0,0,0,.54)",
																					"boxShadow": "",
																					"boxSizing": "",
																					"borderTopStyle": "",
																					"borderRightStyle": "",
																					"borderBottomStyle": "",
																					"borderLeftStyle": "",
																					"borderTopLeftRadius": "",
																					"borderTopRightRadius": "",
																					"borderBottomLeftRadius": "",
																					"borderBottomRightRadius": "",
																					"borderTopWidth": "",
																					"borderRightWidth": "",
																					"borderBottomWidth": "",
																					"borderLeftWidth": "",
																					"defaultBorderColor": "",
																					"sides": ""
																				}
																			},
																			"SC": {
																				"inactiveRadioLabelFontColor": {
																					"VRadio": "fontColor"
																				},
																				"inactiveRadioLabelFontFamily": {
																					"VRadio": "fontFamily"
																				},
																				"inactiveRadioLabelFontSize": {
																					"VRadio": "fontSize"
																				},
																				"inactiveRadioLabelFontStyle": {
																					"VRadio": "fontStyle"
																				},
																				"inactiveRadioLabelFontWeight": {
																					"VRadio": "fontWeight"
																				},
																				"inactiveRadioCombinedFont": {
																					"VRadio": "combinedFont"
																				}
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pt-0",
																							"sp:pr-0",
																							"sp:pb-0",
																							"sp:pl-0",
																							"sp:mb-0",
																							"sp:ml-0",
																							"sp:mt-0",
																							"sp:mr-0"
																						]
																					},
																					"class": "pt-0 pr-0 pb-0 pl-0 mb-0 ml-0 mt-0 mr-0"
																				},
																				"compDomClasses": "v-input v-input--hide-details theme--light v-input--selection-controls v-input--radio-group v-input--radio-group--row pt-0 pr-0 pb-0 pl-0 mb-0 ml-0 mt-0 mr-0 newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_20",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_20"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"sp:pl-3",
																			"sp:pt-3",
																			"sp:pr-3",
																			"sp:pb-3",
																			"fd:flex-column"
																		]
																	},
																	"class": "d-flex pl-3 pt-3 pr-3 pb-3 flex-column"
																},
																"compDomClasses": "col d-flex pl-3 pt-3 pr-3 pb-3 flex-column pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"alignItems": "center",
																	"justifyContent": "center",
																	"flexDirection": "column"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_4"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "px",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "156px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_2"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"sp:pb-0",
											"sp:pt-0",
											"sp:pl-3",
											"sp:pr-3"
										]
									},
									"class": "pb-0 pt-0 pl-3 pr-3"
								},
								"compDomClasses": "v-card v-sheet theme--light elevation-0 white pb-0 pt-0 pl-3 pr-3 newDropBorder"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pl-0",
							"sp:pt-0",
							"sp:pr-0",
							"sp:pb-0"
						]
					},
					"class": "pl-0 pt-0 pr-0 pb-0"
				},
				"compDomClasses": "container container--fluid pl-0 pt-0 pr-0 pb-0 newDropBorder"
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bnkasAsDCFire/common/as_alertCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "╬'Tamam'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "╬'error'╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alertCustomComp.close();\r\n",
					"C": true,
					"HL": "JS"
				},
				"btn1ClickEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alertCustomComp.close();\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_37",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_37"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_29"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": "newDropBorder"
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_loadingCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bnkasAsDCFire/common/as_loadingCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_36",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_36"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_28"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": "newDropBorder"
			}
		}
	],
	"lrids": {},
	"clrids": {},
	"opt": {}
};
export default pjson