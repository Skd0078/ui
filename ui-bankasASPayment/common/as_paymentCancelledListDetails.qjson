let pjson = {
	"pJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "false",
					"T": "prop"
				},
				"externalProps": {
					"H": "['title','disablePagination','itemKey','tableSingleSelect','headerList']",
					"T": "prop",
					"HL": "QS"
				},
				"externalEvents": {
					"H": "[{name='clickBackButton', params=[]},\r\n{name='cancelSuccess', params=[]}]",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"setItems": {
					"H": "debugger;\r\n\r\nconst raw = quick.store.get('$getPaidInstallmentData');\r\n\r\nconst selected = Array.isArray(raw)\r\n  ? (raw.find((x:any) => x?.selected) || raw[0] || null)\r\n  : (raw || null);\r\n\r\ncomponents.dt_policyPaymentList.items = selected ? [selected] : [];\r\n\r\nconst ac = quick.store.get('$auto_debtorCreditor');\r\nif (selected) {\r\n  if (ac === 'debit') {\r\n    selected.debitAmount = selected.amount;\r\n  } else {\r\n    selected.creditAmount = selected.amount;\r\n  }\r\n}\r\n\r\nconst pol = (selected?.policyNumber || '').split('/');\r\ncomponents.txtPolicyNo.qValue        = pol[0] || '';\r\ncomponents.txtPolicyNo2.qValue       = pol[1] || '';\r\ncomponents.comboOdenecekTutar.qValue = selected?.amount || '';\r\n\r\nconst pRaw = (selected?.paymentTypeRaw || selected?.paymentType || '').toUpperCase();\r\nconst isCash  = (pRaw === 'ACCOUNT' && !(selected?.accountInfo?.branchCode > 0 && selected?.accountInfo?.number > 0));\r\nconst isCari  = (pRaw === 'ACCOUNT' &&  (selected?.accountInfo?.branchCode > 0 && selected?.accountInfo?.number > 0));\r\nconst isCcard = (pRaw === 'CCARD' || pRaw === 'IMCCARD');\r\n\r\ncomponents.comboOdemeSekli.qValue = isCash ? 'Nakit' : (isCari ? 'Cari Hesap' : (isCcard ? 'Kredi Kartı' : (selected?.paymentType || '')));\r\n\r\nconst lblKkn = components.EdtrComp_94;   \r\nconst cmbKkn = components.comboKkn;      \r\n\r\nif (isCash) {\r\n  lblKkn.visible = false;                            \r\n  cmbKkn.visible = false;                           \r\n  cmbKkn.qValue  = '';                                \r\n\r\n} else if (isCcard) {\r\n  lblKkn.visible = true;                            \r\n  cmbKkn.visible = true;                        \r\n  lblKkn.text = 'Kredi Kartı Numarası : ';\r\n  \r\n\r\n  cmbKkn.qValue = selected?.creditCardNumberForList || selected?.creditCardNumber || ''; \r\n\r\n} else if (isCari) {\r\n  lblKkn.visible = true;                             \r\n  cmbKkn.visible = true;                             \r\n  lblKkn.text = 'Hesap Numarası :';\r\n\r\n  const br = Number(selected?.accountInfo?.branchCode) || 0;\r\n  const no = Number(selected?.accountInfo?.number)     || 0;\r\n  cmbKkn.qValue = (br && no) ? `${br}-${no}` : '';     \r\n}",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"pc_makePaymentStart": {
					"H": "debugger;\r\n\r\nquick.MM.trigger('setConsumerAndScreenInfo')\r\n\r\nconst list = quick.store.get('$getPaidInstallmentData') || [];\r\nconst si   = list;\r\n\r\nconst rawAmt       = (si.amount || '').toString().trim();\r\nconst amountParsed = parseFloat(rawAmt.replace(/[^\\d.,-]/g, '').replace(',', '.')) || 0;\r\nconst currencyCode = (rawAmt.match(/[A-Z]{2,3}$/)?.[0]) || 'TRY';\r\n\r\nconst accBranch = (<any>quick.containerServices).getUserContext().branchCode;\r\nconst accBranchFromItem = Number(si.accountInfo?.branchCode ?? si.accountNumber?.branchCode ?? 0);\r\nconst accNumber         = Number(si.accountInfo?.number     ?? si.accountNumber?.number     ?? si.accountNumber ?? 0);\r\n\r\nconst paymentTypeRaw = (si.paymentTypeRaw || si.paymentType || '').toUpperCase();\r\nconst isAccountType  = paymentTypeRaw === 'ACCOUNT';\r\nconst isCardType     = paymentTypeRaw === 'CCARD';\r\nconst isImeceCard    = paymentTypeRaw === 'IMCCARD';\r\nconst hasAccountInfo = isAccountType && accBranchFromItem > 0 && accNumber > 0;\r\n\r\nconst makePaymentPayload:any = {\r\n  customerNumber: si.customerNumber,\r\n  customerName:   si.customerName,\r\n  firmType:            si.firmType || 'AS',\r\n  installmentTypeCode: 'CANCEL',\r\n  insuranceType:       si.insuranceType || 'HOME',\r\n  insuranceTypeName:   si.insuranceTypeName,\r\n  paymentOptionCode:   '1',\r\n  paymentType:         paymentTypeRaw,\r\n  orderId:             si.orderId || si.transactionType || undefined,\r\n  payableItem: [\r\n    {\r\n      amount: {\r\n        amount: amountParsed,\r\n        currencyCode: { code: currencyCode }\r\n      },\r\n      bankRefId:       si.bankRefId, //|| si.creditCardNumber|| '',\r\n      installmentId:   si.installmentId,\r\n      paymentId:       si.paymentId,\r\n      installmentType: 'CREDIT'\r\n    }\r\n  ],\r\n  useOverdraft: false,\r\n  mandatory:    false,\r\n  cyprus:       false\r\n};\r\n\r\nlet chain: Promise<any> = Promise.resolve();\r\nif (isCardType || isImeceCard) {\r\n  makePaymentPayload.paymentType = 'creditCard';\r\n  makePaymentPayload.installment = 1;\r\n\r\n  const reqData = {\r\n    customerNo:    (<any>quick.containerServices).getCustomerContext()?.customerNumber,\r\n    branchCode:    0,\r\n    accountNo:     0,\r\n    pageSize:      0,\r\n    pageNumber:    0,\r\n    transactionType: isImeceCard ? 'I' : 'S'\r\n  };\r\n\r\n  const cardListReq: IRequest = {\r\n    url: '/api/uiclient/retrieveCreditCardList',\r\n    http: 'POST',\r\n    data: reqData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false\r\n  };\r\n\r\n  const fmtExpires = (s:string) => {\r\n    if (!s) return '';\r\n    const t = s.toString().trim();\r\n    return t.length === 4 ? `${t.slice(2)}/${t.slice(0,2)}` : t;\r\n  };\r\n\r\n  chain = quick.Request.async(cardListReq)?.then((resp:any) => {\r\n    const cards = resp?.data?.cardInfo || resp?.data?.creditCardList || [];\r\n    if (Array.isArray(cards) && cards.length) {\r\n      const wanted = (si.creditCardNumber || si.bankRefId || '').toString();\r\n      const last4  = wanted.slice(-4);\r\n\r\n      const found = cards.find((c:any) => {\r\n        const pan = c?.cardNo || c?.ccNumber || c?.mainCardNo || '';\r\n        return (wanted && pan === wanted) || (!!last4 && pan?.slice(-4) === last4);\r\n      }) || cards[0];\r\n\r\n      const ccNumber   = found?.cardNo || found?.ccNumber || found?.mainCardNo || wanted;\r\n      const holderName = found?.embossName || si.customerName || '';\r\n      const expires    = fmtExpires(found?.expireDate || '');\r\n\r\n      makePaymentPayload.creditCardInfo = {\r\n        customerName: holderName,\r\n        ccNumber:     ccNumber,\r\n        expires:      expires\r\n      };\r\n\r\n      if (!makePaymentPayload.payableItem[0].bankRefId) {\r\n        makePaymentPayload.payableItem[0].bankRefId = si.bankRefId || '';\r\n      }\r\n    }\r\n  });\r\n\r\n} else if (hasAccountInfo) {\r\n  makePaymentPayload.paymentType = 'account';\r\n  makePaymentPayload.accountInfo = { branchCode: accBranchFromItem, number: accNumber };\r\n  makePaymentPayload.installment = 1;\r\n\r\n} else if (isAccountType) {\r\n  makePaymentPayload.paymentType = 'cash';\r\n  if (accBranch) makePaymentPayload.branchCode = accBranch;\r\n}\r\n\r\nconst makePaymentRequest: IRequest = {\r\n  url: '/api/wrapperclient/makePayment',\r\n  http: 'POST',\r\n  headers: { employeeId: (<any>quick.containerServices).getUserContext().userid },\r\n  data: { paymentOperationType: makePaymentPayload },\r\n  responseField: '',\r\n  blockRender: true,\r\n  onSuccess: 'empty',\r\n  onFail: 'empty'\r\n};\r\n\r\nchain\r\n  ?.then(() => quick.Request.async(makePaymentRequest))\r\n  .then((resp:any) => {\r\n    quick.EM.trace(resp?.data);\r\n    //components.as_loadingCustomComp?.open?.();\r\n    const siid = resp?.data?.paymentOperationType?.receiptInfo?.siid || resp?.data?.receiptInfo?.siid ;\r\n    if(siid){\r\n      quick.store.set('$eventSourceId', siid);\r\n    }\r\n    \r\n    quick.MM.trigger('pc_cancelPaymentStart');\r\n  })\r\n  .catch((err:any) => {\r\n    components.as_loadingCustomComp?.close?.();\r\n    const errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n    (components.as_errorInfo as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_errorInfo.open();\r\n    quick.MM.trigger('pc_onMakePaymentFail', [{ errorMessage }]);\r\n  });",
					"C": true,
					"HL": "TS"
				},
				"pc_cancelPaymentStart": {
					"H": "debugger;\r\n\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\n\r\nconst si = quick.store.get('$getPaidInstallmentData') || [];\r\nconst rawAmt       = (si.amount || '').toString().trim();\r\nconst amountParsed = parseFloat(rawAmt.replace(/[^\\d.,-]/g, '').replace(',', '.')) || 0;\r\nconst currencyCode = (rawAmt.match(/[A-Z]{2,3}$/)?.[0]) || 'TRY';\r\nconst [policyNo, renewalNo] = (si.policyNumber || '').split('/');\r\n\r\nconst paymentTypeRaw = (si.paymentTypeRaw || si.paymentType || '').toUpperCase();\r\nconst accBranch = Number(si.accountInfo?.branchCode ?? si.accountNumber?.branchCode ?? 0);\r\nconst accNumber = Number(si.accountInfo?.number     ?? si.accountNumber?.number     ?? si.accountNumber ?? 0);\r\nconst hasAccountInfo = paymentTypeRaw === 'ACCOUNT' && accBranch > 0 && accNumber > 0;\r\n\r\nlet cancelPaymentType;\r\nif (paymentTypeRaw === 'CCARD' || paymentTypeRaw === 'CREDIT_CARD') {\r\n  cancelPaymentType = 'CREDIT_CARD';\r\n} else if (paymentTypeRaw === 'ACCOUNT') {\r\n  cancelPaymentType = hasAccountInfo ? 'ACCOUNT' : 'CASH';\r\n} \r\n  // else if (paymentTypeRaw === 'IMCCARD'){\r\n  // cancelPaymentType = 'IMCCARD';\r\n  // }\r\n  else {\r\n  cancelPaymentType = paymentTypeRaw || 'ACCOUNT';\r\n}\r\n\r\nconst cancelRequest: IRequest = {\r\n  url: '/api/wrapperclient/cancelPaymentRecord',\r\n  http: 'POST',\r\n  data: {\r\n    policyNumber: { policyNo, renewalNo },\r\n    installmentInfoList: [\r\n      {\r\n        amount: {\r\n          amount: {\r\n            amount: amountParsed,\r\n            currencyCode: { code: currencyCode }\r\n          },\r\n          amountTL: {\r\n            amount: amountParsed,\r\n            currencyCode: { code: currencyCode }\r\n          }\r\n        },\r\n        bankRefId:         si.bankRefId, \r\n        installmentDate:   si.originalDueDate,  //dueDate \r\n        installmentId:     si.installmentId,\r\n        installmentStatus: 'PAID',\r\n        paymentId:         si.paymentId,\r\n        required:          false,\r\n        transactionId:     si.transactionId ,//|| si.paymentId,\r\n        paymentType:       cancelPaymentType \r\n      }\r\n    ]\r\n  },\r\n  responseField: '',\r\n  blockRender: true,\r\n  onSuccess: 'cancelSuccessAlert',\r\n  onFail: 'cancelFailAlert'\r\n};\r\n\r\nquick.Request.async(cancelRequest);",
					"C": true,
					"HL": "TS"
				},
				"cancelSuccessAlert": {
					"H": "debugger\r\n\r\nconst raw = quick.store.get('$getPaidInstallmentData') || [];\r\nconst si = Array.isArray(raw)\r\n  ? (raw.find((x:any) => x?.selected) || raw[0] || null)\r\n  : (raw || null);\r\n\r\nconst rawAmt = (si.amount || '').toString().trim();\r\nconst amountParsed = parseFloat(rawAmt.replace(/[^\\d.,-]/g, '').replace(',', '.')) || 0;\r\nconst currencyCode = (rawAmt.match(/[A-Z]{2,3}$/)?.[0]) || 'TRY';\r\n\r\nconst paymentTypeRaw = (si.paymentTypeRaw || si.paymentType || '').toUpperCase();\r\nconst isAccountType = paymentTypeRaw === 'ACCOUNT';\r\nconst isCardType = paymentTypeRaw === 'CCARD' || paymentTypeRaw === 'CREDIT_CARD';\r\nconst isImeceCard = paymentTypeRaw === 'IMCCARD';\r\n\r\nconst accBranch = Number(si.accountInfo?.branchCode ?? si.accountNumber?.branchCode ?? 0);\r\nconst accNumber = Number(si.accountInfo?.number ?? si.accountNumber?.number ?? si.accountNumber ?? 0);\r\nconst hasAccountInfo = isAccountType && accBranch > 0 && accNumber > 0;\r\n\r\n// User context\r\nconst userContext = (<any>quick.containerServices).getUserContext();\r\nconst customerContext = (<any>quick.containerServices).getCustomerContext();\r\nconst branchCode = userContext?.organizationUnitCode || userContext?.branchCode || 4299;\r\nconst employeeId = userContext?.userid || userContext?.employeeId;\r\nconst tellerId = userContext?.tellerId;\r\n\r\n// TOD\r\nconst now = new Date();\r\nconst year = now.getFullYear().toString().slice(-2); \r\nconst month = (now.getMonth() + 1).toString().padStart(2, '0'); \r\nconst day = now.getDate().toString().padStart(2, '0'); \r\nconst hours = now.getHours().toString().padStart(2, '0'); \r\nconst minutes = now.getMinutes().toString().padStart(2, '0');\r\nconst seconds = now.getSeconds().toString().padStart(2, '0');\r\nconst millis = now.getMilliseconds().toString().padStart(3, '0');\r\n// son karakteri at\r\nconst dtString = `${year}${month}${day}${hours}${minutes}${seconds}${millis}`;\r\nconst tod = \"BA\" + dtString.substring(0, dtString.length - 1);\r\n\r\n// online date\r\nconst onlineDate = `${now.getFullYear()}-${(now.getMonth()+1).toString().padStart(2,'0')}-${now.getDate().toString().padStart(2,'0')} ${now.getHours().toString().padStart(2,'0')}:${now.getMinutes().toString().padStart(2,'0')}:${now.getSeconds().toString().padStart(2,'0')}`;\r\n\r\n// sequence number\r\nconst sequenceNo = si.transactionId || si.paymentId || si.sequenceNumber || Math.floor(Math.random() * 100) + 1;\r\n\r\n// Default\r\nlet accountType = \"M\"; \r\nlet monetaryType = \"P\"; \r\n\r\n// Account Type ve Monetary Type belirleme\r\nif (hasAccountInfo) {\r\n  accountType = \"1\";\r\n  // monetaryType P olarak kalıyor\r\n} else if (isCardType || isImeceCard) {\r\n  accountType = \"6\";\r\n  // monetaryType P olarak kalıyor\r\n} else {\r\n  // Nakit işlem\r\n  accountType = \"M\";\r\n  monetaryType = \"K\";\r\n}\r\n\r\nconst abmPayload: any = {\r\n  tod: tod,\r\n  part: 0,\r\n  type: \"A\",\r\n  groupType: \"Z001\",\r\n  accountType: accountType,\r\n  onlineDate: onlineDate,\r\n  sequenceNo: sequenceNo,\r\n  processingOrganizationUnit: branchCode,\r\n  channelCode: \"branch\",\r\n  transactionCode: \"ASTAHIP\",\r\n  operationName: \"İptal İşlemi\",\r\n  isCancellation: true,\r\n  pcuBytes: \"A\",\r\n  amount: amountParsed,\r\n  cost: 0,\r\n  currencySwiftCode: currencyCode,\r\n  monetaryType: monetaryType,\r\n  operationAddress: \"10.198.167.167\",\r\n  ofsaProductCode: 410201,\r\n  \r\n  detailMap: {\r\n    isVoucherPrintingNecessary: \"1\",\r\n    voucherPrinted: true\r\n  },\r\n  \r\n  abmFunctionEnum: si.abmFunctionEnum || \"CANCEL_PAYMENT\",\r\n  policyType: si.insuranceType || si.policyType || \"HOME\",\r\n  appType: \"payment\",\r\n  isVoucherPrintingNecessary: \"1\",\r\n  isVoucherPrinted: true,\r\n  branchCode: branchCode,\r\n  sequenceNumber: sequenceNo, \r\n  abmDetailRecordDTO: {\r\n    isVoucherPrintingNecessary: \"1\",\r\n    voucherPrinted: true\r\n  }\r\n};\r\n\r\n// koşullu alanları eklesadece değer varsa\r\nif (customerContext?.customerNumber || si.customerNumber) {\r\n  abmPayload.customerNumber = customerContext?.customerNumber || si.customerNumber;\r\n}\r\n\r\nif (hasAccountInfo) {\r\n  abmPayload.accountNumber = accNumber;\r\n  abmPayload.accountInfo = {\r\n    branchCode: accBranch,\r\n    number: accNumber\r\n  };\r\n}\r\n\r\nif (isCardType || isImeceCard) {\r\n  const cardNo = si.creditCardNumber || si.bankRefId;\r\n  if (cardNo) {\r\n    abmPayload.cardHolderNo = cardNo;\r\n    abmPayload.creditCardNumber = cardNo;\r\n  }\r\n  const custNo = customerContext?.customerNumber || si.customerNumber;\r\n  if (custNo) {\r\n    abmPayload.creditCardCustomerNumber = custNo;\r\n  }\r\n}\r\n\r\nif (tellerId) {\r\n  abmPayload.tellerId = tellerId;\r\n}\r\n\r\nif (employeeId) {\r\n  abmPayload.employeeId = employeeId;\r\n}\r\n\r\nif (si.productCode) {\r\n  abmPayload.productCode = si.productCode;\r\n}\r\n\r\nif (si.commisionAmount) {\r\n  abmPayload.commisionAmount = si.commisionAmount;\r\n}\r\n\r\nif (customerContext?.citizenId || si.citizenId) {\r\n  abmPayload.citizenId = customerContext?.citizenId || si.citizenId;\r\n}\r\n\r\nif (customerContext?.taxId || si.taxId) {\r\n  abmPayload.taxId = customerContext?.taxId || si.taxId;\r\n}\r\n\r\nconst abmRequest: IRequest = {\r\n  url: '/api/abm/create',\r\n  http: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  data: abmPayload,\r\n  responseField: '',\r\n  blockRender: false, \r\n  onSuccess: 'empty', \r\n  onFail: 'empty' \r\n};\r\n\r\nquick.Request.async(abmRequest);\r\n\r\ncomponents.as_loadingCustomComp?.close?.();\r\ncomponents.as_alertInfo.close();\r\nquick.parent.events.cancelSuccess();\r\n\r\nvar message = si.amount + ' ' + \"tutarındaki işlem iptaliniz başarıyla tamamlanmıştır.\";\r\n\r\nalertPerformPayment(message);\r\nfunction alertPerformPayment(message) {\r\n    (components.as_successInfo as any).setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\n    components.as_successInfo.open();\r\n}",
					"C": true,
					"HL": "TS"
				},
				"cancelFailAlert": {
					"H": "debugger\r\ncomponents.as_loadingCustomComp?.close?.();\r\ncomponents.as_alertInfo.close();\r\nlet message = \"İşlem iptali sırasında bir hata oluştu.\"\r\n\r\nalertPerformPayment(message);\r\nfunction alertPerformPayment(message) {\r\n    (components.as_errorInfo as any).setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\n    components.as_errorInfo.open();\r\n}",
					"C": true,
					"HL": "TS"
				},
				"pc_onMakePaymentFail": {
					"H": "debugger\r\ncomponents.as_alertInfo.close();\r\nlet message = \"İşlem iptali sırasında bir hata oluştu.\"\r\n\r\nalertPerformPayment(message);\r\nfunction alertPerformPayment(message) {\r\n    (components.as_errorInfo as any).setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\n    components.as_errorInfo.open();\r\n}",
					"C": true,
					"HL": "TS"
				},
				"setConsumerAndScreenInfo": {
					"H": "debugger;\r\n\r\nquick.store.set('$customConsumerCode', 'TANE.BAHOME');\r\nquick.store.set('$customScreenName', 'TANE.BAHOME');",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pt-0",
							"sp:pl-0",
							"sp:pr-0",
							"sp:pb-0"
						]
					},
					"class": "pt-0 pl-0 pr-0 pb-0"
				}
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "VContainerComp",
					"T": "prop"
				},
				"class": {
					"H": "'container container--fluid'",
					"T": "class"
				},
				"visible": {
					"H": "true",
					"T": "prop"
				},
				"eager": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_276",
									"T": "prop"
								},
								"color": {
									"H": "'white'",
									"T": "prop"
								},
								"visible": {
									"H": "true",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_8",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"P": {
																				"ID": {
																					"H": "lblPolicyCancelationTitle",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"tagType": {
																					"H": "'span'",
																					"T": "prop"
																				},
																				"text": {
																					"H": "'Poliçe No-Yenileme No:'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"processHtml": {
																					"H": "false",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_55"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_23",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_23"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex flex-column col-3"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txtPolicyNo",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "false",
																					"T": "prop"
																				},
																				"label": {
																					"H": "''",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_72"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [],
																						"md": [],
																						"lg": [],
																						"xl": []
																					},
																					"class": ""
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_44",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_44"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txtPolicyNo2",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "false",
																					"T": "prop"
																				},
																				"label": {
																					"H": "''",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_81"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_34",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_34"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_8"
											},
											"O": {
												"cType": "slot"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_6",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "VRowComp",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VDataTable",
																											"P": {
																												"ID": {
																													"H": "dt_policyPaymentList",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"headers": {
																													"H": "[{ text = 'Vade', value= 'dueDate',filterable= true },\n{ text = 'Döviz Tutarı', value= 'amount', filterable= true },\n{ text = 'TL Tutar', value= 'amount', filterable= true }]",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"itemsPerPage": {
																													"H": "10",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"mobileBreakpoint": {
																													"H": "600",
																													"T": "prop"
																												},
																												"visible": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"hideDefaultFooter": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"disablePagination": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"noDataText": {
																													"H": "'Listelenecek Veri Yok.'",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"hideDefaultHeader": {
																													"H": "false",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"fixedHeader": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"dense": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"disableSort": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"dark": {
																													"H": "false",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"itemKey": {
																													"H": "'id'",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"disableFiltering": {
																													"H": "true",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"items": {
																													"H": "[]",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"showSelect": {
																													"H": "false",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"singleSelect": {
																													"H": "false",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"showExpand": {
																													"H": "false",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"singleExpand": {
																													"H": "false",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"footerProps": {
																													"H": "{showFirstLastPage = true,\r\nfirstIcon = 'mdi-arrow-collapse-left',\r\nlastIcon = 'mdi-arrow-collapse-right',\r\nprevIcon = 'mdi-minus',\r\nnextIcon = 'mdi-plus'}",
																													"T": "prop",
																													"HL": "QS"
																												}
																											},
																											"E": {
																												"item-selected": {
																													"H": "// debugger;\r\n// quick.store.set('$policyPayment', null);\r\n// let policy = rowObj.item\r\n// rowObj.item.selected = rowObj.value\r\n// if (rowObj.item.selected == false) {\r\n//     quick.store.set('$selected', false)\r\n//     components.btn_createOrder.visible = false;\r\n// } else {\r\n//     quick.store.set('$policyPayment', policy)\r\n//     quick.store.set('$selected', true)\r\n//     components.btn_createOrder.visible = true;\r\n// }\r\n",
																													"P": "rowObj:IVDataTableItemSelect",
																													"HL": "TS"
																												}
																											},
																											"C": {
																												"item.selected": {
																													"c": [
																														{
																															"T": "VCheckbox",
																															"P": {
																																"ID": {
																																	"H": "EdtrComp_46",
																																	"T": "prop"
																																},
																																"color": {
																																	"H": "'primary'",
																																	"T": "prop"
																																},
																																"hideDetails": {
																																	"H": "false",
																																	"T": "prop"
																																},
																																"label": {
																																	"H": "''",
																																	"T": "prop",
																																	"HL": "QS"
																																},
																																"visible": {
																																	"H": "true",
																																	"T": "prop"
																																}
																															},
																															"E": {},
																															"C": {},
																															"_Editor": {
																																"eID": "EdtrComp_46"
																															},
																															"O": {
																																"cType": "slot"
																															}
																														}
																													],
																													"cType": "scopedSlot"
																												}
																											},
																											"_Editor": {
																												"eID": "EdtrComp_25"
																											},
																											"S": {
																												"xs-xl": {
																													"marginLeft": "",
																													"marginRight": "",
																													"marginBottom": "",
																													"marginTop": "",
																													"paddingTop": "",
																													"paddingBottom": "",
																													"paddingLeft": "",
																													"paddingRight": "",
																													"width": "",
																													"height": "",
																													"maxWidth": "",
																													"maxHeight": "",
																													"minWidth": "",
																													"minHeight": "",
																													"unlink": "false",
																													"unlinkMax": "false",
																													"unlinkMin": "false",
																													"isSizeCollapsed": "false",
																													"dense": "",
																													"headerFontColor": "#686868",
																													"headerFontFamily": "Roboto",
																													"headerFontSize": "12px",
																													"headerFontStyle": "normal",
																													"headerFontWeight": "400",
																													"headerCombinedFont": "Roboto-Regular",
																													"headerThemeFont": "Custom",
																													"footerText": "#686868",
																													"footerFontFamily": "Roboto",
																													"footerFontSize": "12px",
																													"footerFontStyle": "normal",
																													"footerFontWeight": "400",
																													"footerCombinedFont": "Roboto-Regular",
																													"footerThemeFont": "Custom",
																													"textColor": "#010101",
																													"itemFontFamily": "Roboto",
																													"itemFontSize": "14px",
																													"itemFontStyle": "normal",
																													"itemFontWeight": "400",
																													"itemsCombinedFont": "Roboto-Regular",
																													"itemsThemeFont": "Custom",
																													"backgroundColor": "#ffffff",
																													"hoverColor": "#ffffff",
																													"footerColor": "#FFFFFF",
																													"headerColor": "#FFFFFF",
																													"selectedBackground": "#FFFFFF",
																													"expandedContent": "#010101",
																													"lineColor": "#0000001f",
																													"lineSize": "1",
																													"boxShadow": "",
																													"boxSizing": "",
																													"borderTopStyle": "solid",
																													"borderRightStyle": "solid",
																													"borderBottomStyle": "solid",
																													"borderLeftStyle": "solid",
																													"borderTopLeftRadius": "4px",
																													"borderTopRightRadius": "4px",
																													"borderBottomLeftRadius": "4px",
																													"borderBottomRightRadius": "4px",
																													"borderTopWidth": "1px",
																													"borderRightWidth": "1px",
																													"borderBottomWidth": "1px",
																													"borderLeftWidth": "1px",
																													"defaultBorderColor": "#0000001f",
																													"sides": "Top,Right,Bottom,Left"
																												}
																											},
																											"O": {
																												"cType": "scopedSlot"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "VColComp",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_3"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": []
																									},
																									"class": ""
																								}
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_4"
																			},
																			"O": {
																				"cType": "slot"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "0px",
																					"marginRight": "0px",
																					"marginBottom": "0px",
																					"marginTop": "0px",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"backgroundColor": "#ffffff",
																					"boxShadow": ""
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_7",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_7"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": []
																	},
																	"class": ""
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_6"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"backgroundColor": "",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "",
													"borderRightStyle": "",
													"borderBottomStyle": "",
													"borderLeftStyle": "",
													"borderTopLeftRadius": "",
													"borderTopRightRadius": "",
													"borderBottomLeftRadius": "",
													"borderBottomRightRadius": "",
													"borderTopWidth": "",
													"borderRightWidth": "",
													"borderBottomWidth": "",
													"borderLeftWidth": "",
													"defaultBorderColor": "",
													"sides": ""
												}
											},
											"O": {
												"cType": "slot"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_9",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_39",
																					"T": "prop"
																				},
																				"tagType": {
																					"H": "'span'",
																					"T": "prop"
																				},
																				"text": {
																					"H": "'Ödeme Şekli :'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"processHtml": {
																					"H": "false",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_39"
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_27",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_27"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCombobox",
																			"P": {
																				"ID": {
																					"H": "comboOdemeSekli",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"attach": {
																					"H": "true",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "true",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "false",
																					"T": "prop"
																				},
																				"items": {
																					"H": "[{text = 'test1', value = 1},\n{ text = 'test2', value = 2}]",
																					"T": "prop"
																				},
																				"label": {
																					"H": "''",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_52"
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_24",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_24"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-4"
																		]
																	},
																	"class": "d-flex col-4"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_9"
											},
											"O": {
												"cType": "slot"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_92",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_94",
																					"T": "prop"
																				},
																				"tagType": {
																					"H": "'span'",
																					"T": "prop"
																				},
																				"text": {
																					"H": "'Kredi Kartı Numarası/Hesap Numarası :'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"processHtml": {
																					"H": "false",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_94"
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_93",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_93"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCombobox",
																			"P": {
																				"ID": {
																					"H": "comboKkn",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"attach": {
																					"H": "true",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "true",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "false",
																					"T": "prop"
																				},
																				"items": {
																					"H": "[{text = 'test1', value = 1},\n{ text = 'test2', value = 2}]",
																					"T": "prop"
																				},
																				"label": {
																					"H": "''",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_96"
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_95",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_95"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-4"
																		]
																	},
																	"class": "d-flex col-4"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_92"
											},
											"O": {
												"cType": "slot"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_74",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_76",
																					"T": "prop"
																				},
																				"tagType": {
																					"H": "'span'",
																					"T": "prop"
																				},
																				"text": {
																					"H": "'Ödenecek Tutar :'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"processHtml": {
																					"H": "false",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_76"
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_75",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_75"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCombobox",
																			"P": {
																				"ID": {
																					"H": "comboOdenecekTutar",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"attach": {
																					"H": "true",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "true",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "false",
																					"T": "prop"
																				},
																				"items": {
																					"H": "[{text = 'test1', value = 1},\n{ text = 'test2', value = 2}]",
																					"T": "prop"
																				},
																				"label": {
																					"H": "''",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_78"
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_77",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_77"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-4"
																		]
																	},
																	"class": "d-flex col-4"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_74"
											},
											"O": {
												"cType": "slot"
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_276"
							},
							"O": {
								"cType": "slot"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pl-0",
							"sp:pt-0",
							"sp:pr-0",
							"sp:pb-0",
							"sp:mt-0",
							"sp:ml-0",
							"sp:mr-0",
							"sp:mb-0"
						]
					},
					"class": "pl-0 pt-0 pr-0 pb-0 mt-0 ml-0 mr-0 mb-0"
				}
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "VRow",
			"P": {
				"ID": {
					"H": "EdtrComp_2",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCol",
							"C": {
								"default": {
									"c": [
										{
											"T": "VBtn",
											"P": {
												"ID": {
													"H": "btn_geri",
													"T": "prop",
													"HL": "QS"
												},
												"depressed": {
													"H": "true",
													"T": "prop"
												},
												"visible": {
													"H": "true",
													"T": "prop",
													"HL": "QS"
												},
												"DiscardSettings": {
													"H": "true",
													"T": "prop"
												},
												"color": {
													"H": "'#2171DC'",
													"T": "prop"
												},
												"dark": {
													"H": "true",
													"T": "prop"
												},
												"height": {
													"H": "'40px'",
													"T": "prop",
													"HL": "QS"
												},
												"rounded": {
													"H": "true",
													"T": "prop"
												}
											},
											"E": {
												"click": {
													"H": "quick.parent.events.clickBackButton()",
													"P": "mouseEvent:unknown | undefined",
													"HL": "TS"
												}
											},
											"C": {
												"default": {
													"c": [
														{
															"T": "QLabel",
															"C": {},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_16",
																	"T": "prop"
																},
																"text": {
																	"H": "'Geri'",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_16"
															},
															"O": {
																"cType": "child",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"tt:text-body-1",
																			"te:font-weight-regular"
																		]
																	},
																	"class": "text-body-1 font-weight-regular"
																}
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"fontColor": "#000000",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_15"
											},
											"S": {
												"xs-xl": {
													"marginTop": "",
													"marginRight": "10px",
													"marginBottom": "",
													"marginLeft": "",
													"paddingTop": "",
													"paddingRight": "16px",
													"paddingBottom": "",
													"paddingLeft": "16px",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"fontColor": "#ffffff",
													"fontFamily": "Roboto",
													"fontSize": "16px",
													"fontStyle": "normal",
													"fontWeight": "400",
													"combinedFont": "Roboto-Regular",
													"ThemeFont": "Custom",
													"lineHeight": "20px",
													"backgroundColor": "#1976D2",
													"disabledBackgroundColor": "rgba(0,0,0,.12)",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "solid",
													"borderRightStyle": "solid",
													"borderBottomStyle": "solid",
													"borderLeftStyle": "solid",
													"borderTopLeftRadius": "4px",
													"borderTopRightRadius": "4px",
													"borderBottomLeftRadius": "4px",
													"borderBottomRightRadius": "4px",
													"borderTopWidth": "0px",
													"borderRightWidth": "0px",
													"borderBottomWidth": "0px",
													"borderLeftWidth": "0px",
													"defaultBorderColor": "",
													"sides": "Top,Right,Bottom,Left"
												}
											},
											"SC": {
												"fontColor": {
													"VIcon": "iconColor",
													"QLabel": "fontColor"
												},
												"fontStyle": {
													"QLabel": "fontStyle"
												},
												"fontSize": {
													"QLabel": "fontSize"
												},
												"fontFamily": {
													"QLabel": "fontFamily"
												},
												"fontWeight": {
													"QLabel": "fontWeight"
												},
												"combinedFont": {
													"QLabel": "combinedFont"
												},
												"lineHeight": {
													"QLabel": "lineHeight"
												},
												"bacgroundColor": {
													"VIcon": "backgroundColor"
												}
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"sp:mr-1"
														]
													},
													"class": "mr-1"
												}
											}
										},
										{
											"T": "VBtn",
											"P": {
												"ID": {
													"H": "btn_devam",
													"T": "prop",
													"HL": "QS"
												},
												"depressed": {
													"H": "true",
													"T": "prop"
												},
												"visible": {
													"H": "true",
													"T": "prop",
													"HL": "QS"
												},
												"DiscardSettings": {
													"H": "true",
													"T": "prop"
												},
												"color": {
													"H": "'#2171DC'",
													"T": "prop"
												},
												"dark": {
													"H": "true",
													"T": "prop"
												},
												"height": {
													"H": "'40px'",
													"T": "prop",
													"HL": "QS"
												},
												"rounded": {
													"H": "true",
													"T": "prop"
												}
											},
											"E": {
												"click": {
													"H": "debugger;\r\n\r\n\r\nconst raw = quick.store.get('$getPaidInstallmentData') || [];\r\nconst si = Array.isArray(raw)\r\n  ? (raw.find((x:any) => x?.selected) || raw[0] || null)\r\n  : (raw || null);\r\n\r\nconst amountText   = (si?.amount ?? '').toString();\r\nconst WILLBEPAID   = ' ödenecektir ';\r\nconst isRefund     = false;\r\n\r\nconst paymentTypeRaw = (si?.paymentTypeRaw || si?.paymentType || '').toUpperCase();\r\n\r\nconst accBranch = Number(si?.accountInfo?.branchCode ?? si?.accountNumber?.branchCode ?? 0);\r\nconst accNumber = Number(si?.accountInfo?.number     ?? si?.accountNumber?.number     ?? 0);\r\nconst hasAccountInfo = paymentTypeRaw === 'ACCOUNT' && accBranch > 0 && accNumber > 0;\r\n\r\nlet message = `${si?.policyNumber || ''} numaralı poliçe için `;\r\n\r\nif (paymentTypeRaw === 'ACCOUNT') {\r\n  if (hasAccountInfo) {\r\n    const accLabel = accBranch && accNumber ? `${accBranch}-${accNumber} nolu ` : '';\r\n    message += `${accLabel}${isRefund ? 'hesaptan' : 'hesaba'} ${amountText}${WILLBEPAID}`;\r\n  } else {\r\n    message += `${amountText} nakit olarak ödenecektir. `;\r\n  }\r\n\r\n} else if (paymentTypeRaw === 'CURRENT_ACCOUNT') {\r\n  const accLabel = accBranch && accNumber ? `${accBranch}-${accNumber} nolu ` : '';\r\n  message += `${accLabel}${isRefund ? 'hesaptan' : 'hesaba'} ${amountText}${WILLBEPAID}`;\r\n\r\n} else if (paymentTypeRaw === 'CCARD') {\r\n  const cc = si?.creditCardNumber ? `${si.creditCardNumber} nolu ` : '';\r\n  message += `${cc}${isRefund ? 'kredi kartından' : 'kredi kartına'} ${amountText}${WILLBEPAID}`;\r\n\r\n} else if (paymentTypeRaw === 'IMECE_CARD') {\r\n  const cc = si?.creditCardNumber ? `${si.creditCardNumber} nolu ` : '';\r\n  message += `${cc}${isRefund ? 'imece kartından' : 'imece kartına'} ${amountText}${WILLBEPAID}`;\r\n\r\n} else {\r\n  message += `${amountText} ödenecektir. `;\r\n}\r\n\r\nmessage += 'İşleme devam etmek istiyor musunuz ?';\r\n\r\n(components.as_alertInfo as any).setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\ncomponents.as_alertInfo.open();",
													"P": "mouseEvent:unknown | undefined",
													"HL": "TS"
												}
											},
											"C": {
												"default": {
													"c": [
														{
															"T": "QLabel",
															"C": {},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_140",
																	"T": "prop"
																},
																"text": {
																	"H": "'Devam'",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_140"
															},
															"O": {
																"cType": "child",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"tt:text-body-1",
																			"te:font-weight-regular"
																		]
																	},
																	"class": "text-body-1 font-weight-regular"
																}
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"fontColor": "#000000",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_139"
											},
											"S": {
												"xs-xl": {
													"marginTop": "",
													"marginRight": "10px",
													"marginBottom": "",
													"marginLeft": "",
													"paddingTop": "",
													"paddingRight": "16px",
													"paddingBottom": "",
													"paddingLeft": "16px",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"fontColor": "#ffffff",
													"fontFamily": "Roboto",
													"fontSize": "16px",
													"fontStyle": "normal",
													"fontWeight": "400",
													"combinedFont": "Roboto-Regular",
													"ThemeFont": "Custom",
													"lineHeight": "20px",
													"backgroundColor": "#1976D2",
													"disabledBackgroundColor": "rgba(0,0,0,.12)",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "solid",
													"borderRightStyle": "solid",
													"borderBottomStyle": "solid",
													"borderLeftStyle": "solid",
													"borderTopLeftRadius": "4px",
													"borderTopRightRadius": "4px",
													"borderBottomLeftRadius": "4px",
													"borderBottomRightRadius": "4px",
													"borderTopWidth": "0px",
													"borderRightWidth": "0px",
													"borderBottomWidth": "0px",
													"borderLeftWidth": "0px",
													"defaultBorderColor": "",
													"sides": "Top,Right,Bottom,Left"
												}
											},
											"SC": {
												"fontColor": {
													"VIcon": "iconColor",
													"QLabel": "fontColor"
												},
												"fontStyle": {
													"QLabel": "fontStyle"
												},
												"fontSize": {
													"QLabel": "fontSize"
												},
												"fontFamily": {
													"QLabel": "fontFamily"
												},
												"fontWeight": {
													"QLabel": "fontWeight"
												},
												"combinedFont": {
													"QLabel": "combinedFont"
												},
												"lineHeight": {
													"QLabel": "lineHeight"
												},
												"bacgroundColor": {
													"VIcon": "backgroundColor"
												}
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"sp:mr-1"
														]
													},
													"class": "mr-1"
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"E": {},
							"P": {
								"ID": {
									"H": "EdtrComp_14",
									"T": "prop"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_14"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"d:d-flex",
											"sp:pr-3",
											"sp:pl-3",
											"sp:pb-3",
											"sp:pt-3",
											"j:justify-end"
										]
									},
									"class": "d-flex pr-3 pl-3 pb-3 pt-3 justify-end"
								}
							},
							"S": {
								"xs-xl": {
									"col": "",
									"flexDirection": "column",
									"alignItems": "",
									"justifyContent": "",
									"marginLeft": "",
									"marginRight": "",
									"marginBottom": "",
									"marginTop": "",
									"paddingTop": "12px",
									"paddingBottom": "12px",
									"paddingLeft": "12px",
									"paddingRight": "12px",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_2"
			},
			"O": {
				"cType": "slot"
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertInfo",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bnkasASPolicyCancellation/common/as_alertCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "'info'",
					"T": "prop",
					"HL": "QS"
				},
				"doubleBtn": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "'Onayla'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_2": {
					"H": "'Vazgeç'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "message",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"btn2ClickEvent": {
					"H": "components.as_alertInfo.close();",
					"C": true,
					"HL": "TS"
				},
				"btn1ClickEvent": {
					"H": "debugger;\r\n\r\nquick.MM.trigger('pc_makePaymentStart');\r\ncomponents.as_loadingCustomComp?.open?.();\r\n",
					"C": true,
					"HL": "TS"
				},
				"cancelSuccessAlertTEST": {
					"H": "// debugger\r\n// components.as_alertInfo.close();\r\n// let flatList = quick.store.get('$getPaidInstallmentData') || [];\r\n// let selectedItem = flatList[0];\r\n\r\n// let message = selectedItem.amount + \"tutarındaki işlem iptaliniz başarıyla tamamlanmıştır.\";\r\n\r\n// alertPerformPayment(message);\r\n// function alertPerformPayment(message) {\r\n//     (components.EdtrComp_10 as any).setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\n//     components.EdtrComp_10.open();\r\n// }",
					"C": true,
					"HL": "TS"
				},
				"cancelFailAlertTEST": {
					"H": "// debugger\r\n// components.EdtrComp_31.close();\r\n// let message = \"İşlem iptali sırasında bir hata oluştu.\"\r\n\r\n// alertPerformPayment(message);\r\n// function alertPerformPayment(message) {\r\n//     (components.EdtrComp_109 as any).setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\n//     components.EdtrComp_109.open();\r\n// }",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_50",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_50"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_31"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_errorInfo",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bnkasASPolicyCancellation/common/as_alertCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "'error'",
					"T": "prop",
					"HL": "QS"
				},
				"doubleBtn": {
					"H": "false",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "'Vazgeç'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "message",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"btn1ClickEvent": {
					"H": "components.as_errorInfo.close();\r\ncomponents.as_alertInfo.close();",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_110",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_110"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_109"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_successInfo",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bnkasASPolicyCancellation/common/as_alertCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "'success'",
					"T": "prop",
					"HL": "QS"
				},
				"doubleBtn": {
					"H": "false",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "'Tamam'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "message",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"btn1ClickEvent": {
					"H": "components.as_successInfo.close();\r\ncomponents.as_alertInfo.close();",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_11",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_11"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_10"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_loadingCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bankasASOrder/common/as_loadingCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_36",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_36"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_12"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		}
	],
	"cJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "╬false╩╩",
					"T": "prop"
				},
				"externalProps": {
					"H": "╬[]╠'title'╩╠'disablePagination'╩╠'itemKey'╩╠'tableSingleSelect'╩╠'headerList'╩╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"externalEvents": {
					"H": "╬[]╠{}╠=╣name╩╠'clickBackButton'╩╩╠=╣params╩╠[]╩╩╩╠{}╠=╣name╩╠'cancelSuccess'╩╩╠=╣params╩╠[]╩╩╩╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"setItems": {
					"H": "var _a, _b, _c, _d, _e, _f;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar raw = quick.store.get('$getPaidInstallmentData');\r\nvar selected = Array.isArray(raw)\r\n    ? (raw.find(function (x) { return x === null || x === void 0 ? void 0 : x.selected; }) || raw[0] || null)\r\n    : (raw || null);\r\ncomponents.dt_policyPaymentList.items = selected ? [selected] : [];\r\nvar ac = quick.store.get('$auto_debtorCreditor');\r\nif (selected) {\r\n    if (ac === 'debit') {\r\n        selected.debitAmount = selected.amount;\r\n    }\r\n    else {\r\n        selected.creditAmount = selected.amount;\r\n    }\r\n}\r\nvar pol = ((selected === null || selected === void 0 ? void 0 : selected.policyNumber) || '').split('/');\r\ncomponents.txtPolicyNo.qValue = pol[0] || '';\r\ncomponents.txtPolicyNo2.qValue = pol[1] || '';\r\ncomponents.comboOdenecekTutar.qValue = (selected === null || selected === void 0 ? void 0 : selected.amount) || '';\r\nvar pRaw = ((selected === null || selected === void 0 ? void 0 : selected.paymentTypeRaw) || (selected === null || selected === void 0 ? void 0 : selected.paymentType) || '').toUpperCase();\r\nvar isCash = (pRaw === 'ACCOUNT' && !(((_a = selected === null || selected === void 0 ? void 0 : selected.accountInfo) === null || _a === void 0 ? void 0 : _a.branchCode) > 0 && ((_b = selected === null || selected === void 0 ? void 0 : selected.accountInfo) === null || _b === void 0 ? void 0 : _b.number) > 0));\r\nvar isCari = (pRaw === 'ACCOUNT' && (((_c = selected === null || selected === void 0 ? void 0 : selected.accountInfo) === null || _c === void 0 ? void 0 : _c.branchCode) > 0 && ((_d = selected === null || selected === void 0 ? void 0 : selected.accountInfo) === null || _d === void 0 ? void 0 : _d.number) > 0));\r\nvar isCcard = (pRaw === 'CCARD' || pRaw === 'IMCCARD');\r\ncomponents.comboOdemeSekli.qValue = isCash ? 'Nakit' : (isCari ? 'Cari Hesap' : (isCcard ? 'Kredi Kartı' : ((selected === null || selected === void 0 ? void 0 : selected.paymentType) || '')));\r\nvar lblKkn = components.EdtrComp_94;\r\nvar cmbKkn = components.comboKkn;\r\nif (isCash) {\r\n    lblKkn.visible = false;\r\n    cmbKkn.visible = false;\r\n    cmbKkn.qValue = '';\r\n}\r\nelse if (isCcard) {\r\n    lblKkn.visible = true;\r\n    cmbKkn.visible = true;\r\n    lblKkn.text = 'Kredi Kartı Numarası : ';\r\n    cmbKkn.qValue = (selected === null || selected === void 0 ? void 0 : selected.creditCardNumberForList) || (selected === null || selected === void 0 ? void 0 : selected.creditCardNumber) || '';\r\n}\r\nelse if (isCari) {\r\n    lblKkn.visible = true;\r\n    cmbKkn.visible = true;\r\n    lblKkn.text = 'Hesap Numarası :';\r\n    var br = Number((_e = selected === null || selected === void 0 ? void 0 : selected.accountInfo) === null || _e === void 0 ? void 0 : _e.branchCode) || 0;\r\n    var no = Number((_f = selected === null || selected === void 0 ? void 0 : selected.accountInfo) === null || _f === void 0 ? void 0 : _f.number) || 0;\r\n    cmbKkn.qValue = (br && no) ? br + \"-\" + no : '';\r\n}\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"pc_makePaymentStart": {
					"H": "var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nvar list = quick.store.get('$getPaidInstallmentData') || [];\r\nvar si = list;\r\nvar rawAmt = (si.amount || '').toString().trim();\r\nvar amountParsed = parseFloat(rawAmt.replace(/[^\\d.,-]/g, '').replace(',', '.')) || 0;\r\nvar currencyCode = ((_a = rawAmt.match(/[A-Z]{2,3}$/)) === null || _a === void 0 ? void 0 : _a[0]) || 'TRY';\r\nvar accBranch = quick.containerServices.getUserContext().branchCode;\r\nvar accBranchFromItem = Number((_e = (_c = (_b = si.accountInfo) === null || _b === void 0 ? void 0 : _b.branchCode) !== null && _c !== void 0 ? _c : (_d = si.accountNumber) === null || _d === void 0 ? void 0 : _d.branchCode) !== null && _e !== void 0 ? _e : 0);\r\nvar accNumber = Number((_k = (_j = (_g = (_f = si.accountInfo) === null || _f === void 0 ? void 0 : _f.number) !== null && _g !== void 0 ? _g : (_h = si.accountNumber) === null || _h === void 0 ? void 0 : _h.number) !== null && _j !== void 0 ? _j : si.accountNumber) !== null && _k !== void 0 ? _k : 0);\r\nvar paymentTypeRaw = (si.paymentTypeRaw || si.paymentType || '').toUpperCase();\r\nvar isAccountType = paymentTypeRaw === 'ACCOUNT';\r\nvar isCardType = paymentTypeRaw === 'CCARD';\r\nvar isImeceCard = paymentTypeRaw === 'IMCCARD';\r\nvar hasAccountInfo = isAccountType && accBranchFromItem > 0 && accNumber > 0;\r\nvar makePaymentPayload = {\r\n    customerNumber: si.customerNumber,\r\n    customerName: si.customerName,\r\n    firmType: si.firmType || 'AS',\r\n    installmentTypeCode: 'CANCEL',\r\n    insuranceType: si.insuranceType || 'HOME',\r\n    insuranceTypeName: si.insuranceTypeName,\r\n    paymentOptionCode: '1',\r\n    paymentType: paymentTypeRaw,\r\n    orderId: si.orderId || si.transactionType || undefined,\r\n    payableItem: [\r\n        {\r\n            amount: {\r\n                amount: amountParsed,\r\n                currencyCode: { code: currencyCode }\r\n            },\r\n            bankRefId: si.bankRefId,\r\n            installmentId: si.installmentId,\r\n            paymentId: si.paymentId,\r\n            installmentType: 'CREDIT'\r\n        }\r\n    ],\r\n    useOverdraft: false,\r\n    mandatory: false,\r\n    cyprus: false\r\n};\r\nvar chain = Promise.resolve();\r\nif (isCardType || isImeceCard) {\r\n    makePaymentPayload.paymentType = 'creditCard';\r\n    makePaymentPayload.installment = 1;\r\n    var reqData = {\r\n        customerNo: (_l = quick.containerServices.getCustomerContext()) === null || _l === void 0 ? void 0 : _l.customerNumber,\r\n        branchCode: 0,\r\n        accountNo: 0,\r\n        pageSize: 0,\r\n        pageNumber: 0,\r\n        transactionType: isImeceCard ? 'I' : 'S'\r\n    };\r\n    var cardListReq = {\r\n        url: '/api/uiclient/retrieveCreditCardList',\r\n        http: 'POST',\r\n        data: reqData,\r\n        onFail: 'empty',\r\n        onSuccess: 'empty',\r\n        responseField: 'empty',\r\n        blockRender: false\r\n    };\r\n    var fmtExpires_1 = function (s) {\r\n        if (!s)\r\n            return '';\r\n        var t = s.toString().trim();\r\n        return t.length === 4 ? t.slice(2) + \"/\" + t.slice(0, 2) : t;\r\n    };\r\n    chain = (_m = quick.Request.async(cardListReq)) === null || _m === void 0 ? void 0 : _m.then(function (resp) {\r\n        var _a, _b;\r\n        var cards = ((_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.cardInfo) || ((_b = resp === null || resp === void 0 ? void 0 : resp.data) === null || _b === void 0 ? void 0 : _b.creditCardList) || [];\r\n        if (Array.isArray(cards) && cards.length) {\r\n            var wanted_1 = (si.creditCardNumber || si.bankRefId || '').toString();\r\n            var last4_1 = wanted_1.slice(-4);\r\n            var found = cards.find(function (c) {\r\n                var pan = (c === null || c === void 0 ? void 0 : c.cardNo) || (c === null || c === void 0 ? void 0 : c.ccNumber) || (c === null || c === void 0 ? void 0 : c.mainCardNo) || '';\r\n                return (wanted_1 && pan === wanted_1) || (!!last4_1 && (pan === null || pan === void 0 ? void 0 : pan.slice(-4)) === last4_1);\r\n            }) || cards[0];\r\n            var ccNumber = (found === null || found === void 0 ? void 0 : found.cardNo) || (found === null || found === void 0 ? void 0 : found.ccNumber) || (found === null || found === void 0 ? void 0 : found.mainCardNo) || wanted_1;\r\n            var holderName = (found === null || found === void 0 ? void 0 : found.embossName) || si.customerName || '';\r\n            var expires = fmtExpires_1((found === null || found === void 0 ? void 0 : found.expireDate) || '');\r\n            makePaymentPayload.creditCardInfo = {\r\n                customerName: holderName,\r\n                ccNumber: ccNumber,\r\n                expires: expires\r\n            };\r\n            if (!makePaymentPayload.payableItem[0].bankRefId) {\r\n                makePaymentPayload.payableItem[0].bankRefId = si.bankRefId || '';\r\n            }\r\n        }\r\n    });\r\n}\r\nelse if (hasAccountInfo) {\r\n    makePaymentPayload.paymentType = 'account';\r\n    makePaymentPayload.accountInfo = { branchCode: accBranchFromItem, number: accNumber };\r\n    makePaymentPayload.installment = 1;\r\n}\r\nelse if (isAccountType) {\r\n    makePaymentPayload.paymentType = 'cash';\r\n    if (accBranch)\r\n        makePaymentPayload.branchCode = accBranch;\r\n}\r\nvar makePaymentRequest = {\r\n    url: '/api/wrapperclient/makePayment',\r\n    http: 'POST',\r\n    headers: { employeeId: quick.containerServices.getUserContext().userid },\r\n    data: { paymentOperationType: makePaymentPayload },\r\n    responseField: '',\r\n    blockRender: true,\r\n    onSuccess: 'empty',\r\n    onFail: 'empty'\r\n};\r\nchain === null || chain === void 0 ? void 0 : chain.then(function () { return quick.Request.async(makePaymentRequest); }).then(function (resp) {\r\n    var _a, _b, _c, _d, _e;\r\n    quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n    //components.as_loadingCustomComp?.open?.();\r\n    var siid = ((_c = (_b = (_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.paymentOperationType) === null || _b === void 0 ? void 0 : _b.receiptInfo) === null || _c === void 0 ? void 0 : _c.siid) || ((_e = (_d = resp === null || resp === void 0 ? void 0 : resp.data) === null || _d === void 0 ? void 0 : _d.receiptInfo) === null || _e === void 0 ? void 0 : _e.siid);\r\n    if (siid) {\r\n        quick.store.set('$eventSourceId', siid);\r\n    }\r\n    quick.MM.trigger('pc_cancelPaymentStart');\r\n}).catch(function (err) {\r\n    var _a, _b, _c, _d, _e;\r\n    (_b = (_a = components.as_loadingCustomComp) === null || _a === void 0 ? void 0 : _a.close) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n    var errorMessage = (_e = (_d = (_c = err === null || err === void 0 ? void 0 : err.response) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d.responseMessage) !== null && _e !== void 0 ? _e : 'Bir hata oluştu.';\r\n    components.as_errorInfo.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_errorInfo.open();\r\n    quick.MM.trigger('pc_onMakePaymentFail', [{ errorMessage: errorMessage }]);\r\n});\r\n",
					"C": true,
					"HL": "JS"
				},
				"pc_cancelPaymentStart": {
					"H": "var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nvar si = quick.store.get('$getPaidInstallmentData') || [];\r\nvar rawAmt = (si.amount || '').toString().trim();\r\nvar amountParsed = parseFloat(rawAmt.replace(/[^\\d.,-]/g, '').replace(',', '.')) || 0;\r\nvar currencyCode = ((_a = rawAmt.match(/[A-Z]{2,3}$/)) === null || _a === void 0 ? void 0 : _a[0]) || 'TRY';\r\nvar _l = (si.policyNumber || '').split('/'), policyNo = _l[0], renewalNo = _l[1];\r\nvar paymentTypeRaw = (si.paymentTypeRaw || si.paymentType || '').toUpperCase();\r\nvar accBranch = Number((_e = (_c = (_b = si.accountInfo) === null || _b === void 0 ? void 0 : _b.branchCode) !== null && _c !== void 0 ? _c : (_d = si.accountNumber) === null || _d === void 0 ? void 0 : _d.branchCode) !== null && _e !== void 0 ? _e : 0);\r\nvar accNumber = Number((_k = (_j = (_g = (_f = si.accountInfo) === null || _f === void 0 ? void 0 : _f.number) !== null && _g !== void 0 ? _g : (_h = si.accountNumber) === null || _h === void 0 ? void 0 : _h.number) !== null && _j !== void 0 ? _j : si.accountNumber) !== null && _k !== void 0 ? _k : 0);\r\nvar hasAccountInfo = paymentTypeRaw === 'ACCOUNT' && accBranch > 0 && accNumber > 0;\r\nvar cancelPaymentType;\r\nif (paymentTypeRaw === 'CCARD' || paymentTypeRaw === 'CREDIT_CARD') {\r\n    cancelPaymentType = 'CREDIT_CARD';\r\n}\r\nelse if (paymentTypeRaw === 'ACCOUNT') {\r\n    cancelPaymentType = hasAccountInfo ? 'ACCOUNT' : 'CASH';\r\n}\r\n// else if (paymentTypeRaw === 'IMCCARD'){\r\n// cancelPaymentType = 'IMCCARD';\r\n// }\r\nelse {\r\n    cancelPaymentType = paymentTypeRaw || 'ACCOUNT';\r\n}\r\nvar cancelRequest = {\r\n    url: '/api/wrapperclient/cancelPaymentRecord',\r\n    http: 'POST',\r\n    data: {\r\n        policyNumber: { policyNo: policyNo, renewalNo: renewalNo },\r\n        installmentInfoList: [\r\n            {\r\n                amount: {\r\n                    amount: {\r\n                        amount: amountParsed,\r\n                        currencyCode: { code: currencyCode }\r\n                    },\r\n                    amountTL: {\r\n                        amount: amountParsed,\r\n                        currencyCode: { code: currencyCode }\r\n                    }\r\n                },\r\n                bankRefId: si.bankRefId,\r\n                installmentDate: si.originalDueDate,\r\n                installmentId: si.installmentId,\r\n                installmentStatus: 'PAID',\r\n                paymentId: si.paymentId,\r\n                required: false,\r\n                transactionId: si.transactionId,\r\n                paymentType: cancelPaymentType\r\n            }\r\n        ]\r\n    },\r\n    responseField: '',\r\n    blockRender: true,\r\n    onSuccess: 'cancelSuccessAlert',\r\n    onFail: 'cancelFailAlert'\r\n};\r\nquick.Request.async(cancelRequest);\r\n",
					"C": true,
					"HL": "JS"
				},
				"cancelSuccessAlert": {
					"H": "var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar raw = quick.store.get('$getPaidInstallmentData') || [];\r\nvar si = Array.isArray(raw)\r\n    ? (raw.find(function (x) { return x === null || x === void 0 ? void 0 : x.selected; }) || raw[0] || null)\r\n    : (raw || null);\r\nvar rawAmt = (si.amount || '').toString().trim();\r\nvar amountParsed = parseFloat(rawAmt.replace(/[^\\d.,-]/g, '').replace(',', '.')) || 0;\r\nvar currencyCode = ((_a = rawAmt.match(/[A-Z]{2,3}$/)) === null || _a === void 0 ? void 0 : _a[0]) || 'TRY';\r\nvar paymentTypeRaw = (si.paymentTypeRaw || si.paymentType || '').toUpperCase();\r\nvar isAccountType = paymentTypeRaw === 'ACCOUNT';\r\nvar isCardType = paymentTypeRaw === 'CCARD' || paymentTypeRaw === 'CREDIT_CARD';\r\nvar isImeceCard = paymentTypeRaw === 'IMCCARD';\r\nvar accBranch = Number((_e = (_c = (_b = si.accountInfo) === null || _b === void 0 ? void 0 : _b.branchCode) !== null && _c !== void 0 ? _c : (_d = si.accountNumber) === null || _d === void 0 ? void 0 : _d.branchCode) !== null && _e !== void 0 ? _e : 0);\r\nvar accNumber = Number((_k = (_j = (_g = (_f = si.accountInfo) === null || _f === void 0 ? void 0 : _f.number) !== null && _g !== void 0 ? _g : (_h = si.accountNumber) === null || _h === void 0 ? void 0 : _h.number) !== null && _j !== void 0 ? _j : si.accountNumber) !== null && _k !== void 0 ? _k : 0);\r\nvar hasAccountInfo = isAccountType && accBranch > 0 && accNumber > 0;\r\n// User context\r\nvar userContext = quick.containerServices.getUserContext();\r\nvar customerContext = quick.containerServices.getCustomerContext();\r\nvar branchCode = (userContext === null || userContext === void 0 ? void 0 : userContext.organizationUnitCode) || (userContext === null || userContext === void 0 ? void 0 : userContext.branchCode) || 4299;\r\nvar employeeId = (userContext === null || userContext === void 0 ? void 0 : userContext.userid) || (userContext === null || userContext === void 0 ? void 0 : userContext.employeeId);\r\nvar tellerId = userContext === null || userContext === void 0 ? void 0 : userContext.tellerId;\r\n// TOD\r\nvar now = new Date();\r\nvar year = now.getFullYear().toString().slice(-2);\r\nvar month = (now.getMonth() + 1).toString().padStart(2, '0');\r\nvar day = now.getDate().toString().padStart(2, '0');\r\nvar hours = now.getHours().toString().padStart(2, '0');\r\nvar minutes = now.getMinutes().toString().padStart(2, '0');\r\nvar seconds = now.getSeconds().toString().padStart(2, '0');\r\nvar millis = now.getMilliseconds().toString().padStart(3, '0');\r\n// son karakteri at\r\nvar dtString = \"\" + year + month + day + hours + minutes + seconds + millis;\r\nvar tod = \"BA\" + dtString.substring(0, dtString.length - 1);\r\n// online date\r\nvar onlineDate = now.getFullYear() + \"-\" + (now.getMonth() + 1).toString().padStart(2, '0') + \"-\" + now.getDate().toString().padStart(2, '0') + \" \" + now.getHours().toString().padStart(2, '0') + \":\" + now.getMinutes().toString().padStart(2, '0') + \":\" + now.getSeconds().toString().padStart(2, '0');\r\n// sequence number\r\nvar sequenceNo = si.transactionId || si.paymentId || si.sequenceNumber || Math.floor(Math.random() * 100) + 1;\r\n// Default\r\nvar accountType = \"M\";\r\nvar monetaryType = \"P\";\r\n// Account Type ve Monetary Type belirleme\r\nif (hasAccountInfo) {\r\n    accountType = \"1\";\r\n    // monetaryType P olarak kalıyor\r\n}\r\nelse if (isCardType || isImeceCard) {\r\n    accountType = \"6\";\r\n    // monetaryType P olarak kalıyor\r\n}\r\nelse {\r\n    // Nakit işlem\r\n    accountType = \"M\";\r\n    monetaryType = \"K\";\r\n}\r\nvar abmPayload = {\r\n    tod: tod,\r\n    part: 0,\r\n    type: \"A\",\r\n    groupType: \"Z001\",\r\n    accountType: accountType,\r\n    onlineDate: onlineDate,\r\n    sequenceNo: sequenceNo,\r\n    processingOrganizationUnit: branchCode,\r\n    channelCode: \"branch\",\r\n    transactionCode: \"ASTAHIP\",\r\n    operationName: \"İptal İşlemi\",\r\n    isCancellation: true,\r\n    pcuBytes: \"A\",\r\n    amount: amountParsed,\r\n    cost: 0,\r\n    currencySwiftCode: currencyCode,\r\n    monetaryType: monetaryType,\r\n    operationAddress: \"10.198.167.167\",\r\n    ofsaProductCode: 410201,\r\n    detailMap: {\r\n        isVoucherPrintingNecessary: \"1\",\r\n        voucherPrinted: true\r\n    },\r\n    abmFunctionEnum: si.abmFunctionEnum || \"CANCEL_PAYMENT\",\r\n    policyType: si.insuranceType || si.policyType || \"HOME\",\r\n    appType: \"payment\",\r\n    isVoucherPrintingNecessary: \"1\",\r\n    isVoucherPrinted: true,\r\n    branchCode: branchCode,\r\n    sequenceNumber: sequenceNo,\r\n    abmDetailRecordDTO: {\r\n        isVoucherPrintingNecessary: \"1\",\r\n        voucherPrinted: true\r\n    }\r\n};\r\n// koşullu alanları eklesadece değer varsa\r\nif ((customerContext === null || customerContext === void 0 ? void 0 : customerContext.customerNumber) || si.customerNumber) {\r\n    abmPayload.customerNumber = (customerContext === null || customerContext === void 0 ? void 0 : customerContext.customerNumber) || si.customerNumber;\r\n}\r\nif (hasAccountInfo) {\r\n    abmPayload.accountNumber = accNumber;\r\n    abmPayload.accountInfo = {\r\n        branchCode: accBranch,\r\n        number: accNumber\r\n    };\r\n}\r\nif (isCardType || isImeceCard) {\r\n    var cardNo = si.creditCardNumber || si.bankRefId;\r\n    if (cardNo) {\r\n        abmPayload.cardHolderNo = cardNo;\r\n        abmPayload.creditCardNumber = cardNo;\r\n    }\r\n    var custNo = (customerContext === null || customerContext === void 0 ? void 0 : customerContext.customerNumber) || si.customerNumber;\r\n    if (custNo) {\r\n        abmPayload.creditCardCustomerNumber = custNo;\r\n    }\r\n}\r\nif (tellerId) {\r\n    abmPayload.tellerId = tellerId;\r\n}\r\nif (employeeId) {\r\n    abmPayload.employeeId = employeeId;\r\n}\r\nif (si.productCode) {\r\n    abmPayload.productCode = si.productCode;\r\n}\r\nif (si.commisionAmount) {\r\n    abmPayload.commisionAmount = si.commisionAmount;\r\n}\r\nif ((customerContext === null || customerContext === void 0 ? void 0 : customerContext.citizenId) || si.citizenId) {\r\n    abmPayload.citizenId = (customerContext === null || customerContext === void 0 ? void 0 : customerContext.citizenId) || si.citizenId;\r\n}\r\nif ((customerContext === null || customerContext === void 0 ? void 0 : customerContext.taxId) || si.taxId) {\r\n    abmPayload.taxId = (customerContext === null || customerContext === void 0 ? void 0 : customerContext.taxId) || si.taxId;\r\n}\r\nvar abmRequest = {\r\n    url: '/api/abm/create',\r\n    http: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    data: abmPayload,\r\n    responseField: '',\r\n    blockRender: false,\r\n    onSuccess: 'empty',\r\n    onFail: 'empty'\r\n};\r\nquick.Request.async(abmRequest);\r\n(_m = (_l = components.as_loadingCustomComp) === null || _l === void 0 ? void 0 : _l.close) === null || _m === void 0 ? void 0 : _m.call(_l);\r\ncomponents.as_alertInfo.close();\r\nquick.parent.events.cancelSuccess();\r\nvar message = si.amount + ' ' + \"tutarındaki işlem iptaliniz başarıyla tamamlanmıştır.\";\r\nalertPerformPayment(message);\r\nfunction alertPerformPayment(message) {\r\n    components.as_successInfo.setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\n    components.as_successInfo.open();\r\n}\r\n",
					"C": true,
					"HL": "JS"
				},
				"cancelFailAlert": {
					"H": "var _a, _b;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\n(_b = (_a = components.as_loadingCustomComp) === null || _a === void 0 ? void 0 : _a.close) === null || _b === void 0 ? void 0 : _b.call(_a);\r\ncomponents.as_alertInfo.close();\r\nvar message = \"İşlem iptali sırasında bir hata oluştu.\";\r\nalertPerformPayment(message);\r\nfunction alertPerformPayment(message) {\r\n    components.as_errorInfo.setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\n    components.as_errorInfo.open();\r\n}\r\n",
					"C": true,
					"HL": "JS"
				},
				"pc_onMakePaymentFail": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\ncomponents.as_alertInfo.close();\r\nvar message = \"İşlem iptali sırasında bir hata oluştu.\";\r\nalertPerformPayment(message);\r\nfunction alertPerformPayment(message) {\r\n    components.as_errorInfo.setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\n    components.as_errorInfo.open();\r\n}\r\n",
					"C": true,
					"HL": "JS"
				},
				"setConsumerAndScreenInfo": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nquick.store.set('$customConsumerCode', 'TANE.BAHOME');\r\nquick.store.set('$customScreenName', 'TANE.BAHOME');\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pt-0",
							"sp:pl-0",
							"sp:pr-0",
							"sp:pb-0"
						]
					},
					"class": "pt-0 pl-0 pr-0 pb-0"
				},
				"compDomClasses": "newDropBorder"
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "VContainerComp",
					"T": "prop"
				},
				"class": {
					"H": "╬'container container--fluid'╩╩",
					"T": "class"
				},
				"visible": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"eager": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_276",
									"T": "prop"
								},
								"color": {
									"H": "╬'white'╩╩",
									"T": "prop"
								},
								"visible": {
									"H": "╬true╩╩",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_8",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"P": {
																				"ID": {
																					"H": "lblPolicyCancelationTitle",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"tagType": {
																					"H": "╬'span'╩╩",
																					"T": "prop"
																				},
																				"text": {
																					"H": "╬'Poliçe No-Yenileme No:'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"processHtml": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_55"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				},
																				"compDomClasses": "q-label newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_23",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_23"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex flex-column col-3"
																},
																"compDomClasses": "col d-flex flex-column col-3 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txtPolicyNo",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬''╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_72"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [],
																						"md": [],
																						"lg": [],
																						"xl": []
																					},
																					"class": ""
																				},
																				"compDomClasses": "v-input v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded pt-0 undefined newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_44",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_44"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																},
																"compDomClasses": "col d-flex col-3 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txtPolicyNo2",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬''╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_81"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": []
																					},
																					"class": ""
																				},
																				"compDomClasses": "v-input v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded pt-0 undefined newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_34",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_34"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																},
																"compDomClasses": "col d-flex col-3 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_8"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_6",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "VRowComp",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "VDataTable",
																											"P": {
																												"ID": {
																													"H": "dt_policyPaymentList",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"headers": {
																													"H": "╬[]╠{}╠=╣text╩╠'Vade'╩╩╠=╣value╩╠'dueDate'╩╩╠=╣filterable╩╠true╩╩╩╠{}╠=╣text╩╠'Döviz Tutarı'╩╩╠=╣value╩╠'amount'╩╩╠=╣filterable╩╠true╩╩╩╠{}╠=╣text╩╠'TL Tutar'╩╩╠=╣value╩╠'amount'╩╩╠=╣filterable╩╠true╩╩╩╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"itemsPerPage": {
																													"H": "╬10╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"mobileBreakpoint": {
																													"H": "╬600╩╩",
																													"T": "prop"
																												},
																												"visible": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"hideDefaultFooter": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"disablePagination": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"noDataText": {
																													"H": "╬'Listelenecek Veri Yok.'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"hideDefaultHeader": {
																													"H": "╬false╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"fixedHeader": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"dense": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"disableSort": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"dark": {
																													"H": "╬false╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"itemKey": {
																													"H": "╬'id'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"disableFiltering": {
																													"H": "╬true╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"items": {
																													"H": "╬[]╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"showSelect": {
																													"H": "╬false╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"singleSelect": {
																													"H": "╬false╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"showExpand": {
																													"H": "╬false╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"singleExpand": {
																													"H": "╬false╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"footerProps": {
																													"H": "╬{}╠=╣showFirstLastPage╩╠true╩╩╠=╣firstIcon╩╠'mdi-arrow-collapse-left'╩╩╠=╣lastIcon╩╠'mdi-arrow-collapse-right'╩╩╠=╣prevIcon╩╠'mdi-minus'╩╩╠=╣nextIcon╩╠'mdi-plus'╩╩╩╩",
																													"T": "prop",
																													"HL": "QS"
																												}
																											},
																											"E": {
																												"item-selected": {
																													"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n",
																													"P": "rowObj:IVDataTableItemSelect",
																													"HL": "JS"
																												}
																											},
																											"C": {
																												"item.selected": {
																													"c": [
																														{
																															"T": "VCheckbox",
																															"P": {
																																"ID": {
																																	"H": "EdtrComp_46",
																																	"T": "prop"
																																},
																																"color": {
																																	"H": "╬'primary'╩╩",
																																	"T": "prop"
																																},
																																"hideDetails": {
																																	"H": "╬false╩╩",
																																	"T": "prop"
																																},
																																"label": {
																																	"H": "╬''╩╩",
																																	"T": "prop",
																																	"HL": "QS"
																																},
																																"visible": {
																																	"H": "╬true╩╩",
																																	"T": "prop"
																																}
																															},
																															"E": {},
																															"C": {},
																															"_Editor": {
																																"eID": "EdtrComp_46"
																															},
																															"O": {
																																"cType": "slot"
																															}
																														}
																													],
																													"cType": "scopedSlot"
																												}
																											},
																											"_Editor": {
																												"eID": "EdtrComp_25"
																											},
																											"S": {
																												"xs-xl": {
																													"marginLeft": "",
																													"marginRight": "",
																													"marginBottom": "",
																													"marginTop": "",
																													"paddingTop": "",
																													"paddingBottom": "",
																													"paddingLeft": "",
																													"paddingRight": "",
																													"width": "",
																													"height": "",
																													"maxWidth": "",
																													"maxHeight": "",
																													"minWidth": "",
																													"minHeight": "",
																													"unlink": "false",
																													"unlinkMax": "false",
																													"unlinkMin": "false",
																													"isSizeCollapsed": "false",
																													"dense": "",
																													"headerFontColor": "#686868",
																													"headerFontFamily": "Roboto",
																													"headerFontSize": "12px",
																													"headerFontStyle": "normal",
																													"headerFontWeight": "400",
																													"headerCombinedFont": "Roboto-Regular",
																													"headerThemeFont": "Custom",
																													"footerText": "#686868",
																													"footerFontFamily": "Roboto",
																													"footerFontSize": "12px",
																													"footerFontStyle": "normal",
																													"footerFontWeight": "400",
																													"footerCombinedFont": "Roboto-Regular",
																													"footerThemeFont": "Custom",
																													"textColor": "#010101",
																													"itemFontFamily": "Roboto",
																													"itemFontSize": "14px",
																													"itemFontStyle": "normal",
																													"itemFontWeight": "400",
																													"itemsCombinedFont": "Roboto-Regular",
																													"itemsThemeFont": "Custom",
																													"backgroundColor": "#ffffff",
																													"hoverColor": "#ffffff",
																													"footerColor": "#FFFFFF",
																													"headerColor": "#FFFFFF",
																													"selectedBackground": "#FFFFFF",
																													"expandedContent": "#010101",
																													"lineColor": "#0000001f",
																													"lineSize": "1",
																													"boxShadow": "",
																													"boxSizing": "",
																													"borderTopStyle": "solid",
																													"borderRightStyle": "solid",
																													"borderBottomStyle": "solid",
																													"borderLeftStyle": "solid",
																													"borderTopLeftRadius": "4px",
																													"borderTopRightRadius": "4px",
																													"borderBottomLeftRadius": "4px",
																													"borderBottomRightRadius": "4px",
																													"borderTopWidth": "1px",
																													"borderRightWidth": "1px",
																													"borderBottomWidth": "1px",
																													"borderLeftWidth": "1px",
																													"defaultBorderColor": "#0000001f",
																													"sides": "Top,Right,Bottom,Left"
																												}
																											},
																											"O": {
																												"cType": "scopedSlot",
																												"compDomClasses": "v-data-table v-data-table--dense v-data-table--fixed-header theme--light newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "VColComp",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_3"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": []
																									},
																									"class": ""
																								},
																								"compDomClasses": "col pb-0 newDropBorder"
																							},
																							"S": {
																								"xs-xl": {
																									"col": "",
																									"flexDirection": "column",
																									"alignItems": "",
																									"justifyContent": "",
																									"marginLeft": "",
																									"marginRight": "",
																									"marginBottom": "",
																									"marginTop": "",
																									"paddingTop": "12px",
																									"paddingBottom": "12px",
																									"paddingLeft": "12px",
																									"paddingRight": "12px",
																									"backgroundColor": "#ffffff",
																									"boxShadow": ""
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_4"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "row newDropBorder"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "0px",
																					"marginRight": "0px",
																					"marginBottom": "0px",
																					"marginTop": "0px",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"backgroundColor": "#ffffff",
																					"boxShadow": ""
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_7",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_7"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": []
																	},
																	"class": ""
																},
																"compDomClasses": "col pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_6"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"backgroundColor": "",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "",
													"borderRightStyle": "",
													"borderBottomStyle": "",
													"borderLeftStyle": "",
													"borderTopLeftRadius": "",
													"borderTopRightRadius": "",
													"borderBottomLeftRadius": "",
													"borderBottomRightRadius": "",
													"borderTopWidth": "",
													"borderRightWidth": "",
													"borderBottomWidth": "",
													"borderLeftWidth": "",
													"defaultBorderColor": "",
													"sides": ""
												}
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_9",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_39",
																					"T": "prop"
																				},
																				"tagType": {
																					"H": "╬'span'╩╩",
																					"T": "prop"
																				},
																				"text": {
																					"H": "╬'Ödeme Şekli :'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"processHtml": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_39"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "q-label newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_27",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_27"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																},
																"compDomClasses": "col d-flex col-3 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCombobox",
																			"P": {
																				"ID": {
																					"H": "comboOdemeSekli",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"attach": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"items": {
																					"H": "╬[]╠{}╠=╣text╩╠'test1'╩╩╠=╣value╩╠1╩╩╩╠{}╠=╣text╩╠'test2'╩╩╠=╣value╩╠2╩╩╩╩╩",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬''╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_52"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "v-input v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete undefined pt-0 newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_24",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_24"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-4"
																		]
																	},
																	"class": "d-flex col-4"
																},
																"compDomClasses": "col d-flex col-4 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_9"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_92",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_94",
																					"T": "prop"
																				},
																				"tagType": {
																					"H": "╬'span'╩╩",
																					"T": "prop"
																				},
																				"text": {
																					"H": "╬'Kredi Kartı Numarası/Hesap Numarası :'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"processHtml": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_94"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "q-label newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_93",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_93"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																},
																"compDomClasses": "col d-flex col-3 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCombobox",
																			"P": {
																				"ID": {
																					"H": "comboKkn",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"attach": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"items": {
																					"H": "╬[]╠{}╠=╣text╩╠'test1'╩╩╠=╣value╩╠1╩╩╩╠{}╠=╣text╩╠'test2'╩╩╠=╣value╩╠2╩╩╩╩╩",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬''╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_96"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "v-input v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete undefined pt-0 newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_95",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_95"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-4"
																		]
																	},
																	"class": "d-flex col-4"
																},
																"compDomClasses": "col d-flex col-4 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_92"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_74",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "QLabel",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_76",
																					"T": "prop"
																				},
																				"tagType": {
																					"H": "╬'span'╩╩",
																					"T": "prop"
																				},
																				"text": {
																					"H": "╬'Ödenecek Tutar :'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"processHtml": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_76"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "q-label newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_75",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_75"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex col-3"
																},
																"compDomClasses": "col d-flex col-3 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCombobox",
																			"P": {
																				"ID": {
																					"H": "comboOdenecekTutar",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"attach": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"eager": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"items": {
																					"H": "╬[]╠{}╠=╣text╩╠'test1'╩╩╠=╣value╩╠1╩╩╩╠{}╠=╣text╩╠'test2'╩╩╠=╣value╩╠2╩╩╩╩╩",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬''╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_78"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "v-input v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete undefined pt-0 newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_77",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_77"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"c:col-4"
																		]
																	},
																	"class": "d-flex col-4"
																},
																"compDomClasses": "col d-flex col-4 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_74"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_276"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": "v-card v-sheet theme--light white newDropBorder"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pl-0",
							"sp:pt-0",
							"sp:pr-0",
							"sp:pb-0",
							"sp:mt-0",
							"sp:ml-0",
							"sp:mr-0",
							"sp:mb-0"
						]
					},
					"class": "pl-0 pt-0 pr-0 pb-0 mt-0 ml-0 mr-0 mb-0"
				},
				"compDomClasses": "container container--fluid pl-0 pt-0 pr-0 pb-0 mt-0 ml-0 mr-0 mb-0 newDropBorder"
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "VRow",
			"P": {
				"ID": {
					"H": "EdtrComp_2",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCol",
							"C": {
								"default": {
									"c": [
										{
											"T": "VBtn",
											"P": {
												"ID": {
													"H": "btn_geri",
													"T": "prop",
													"HL": "QS"
												},
												"depressed": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"visible": {
													"H": "╬true╩╩",
													"T": "prop",
													"HL": "QS"
												},
												"DiscardSettings": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"color": {
													"H": "╬'#2171DC'╩╩",
													"T": "prop"
												},
												"dark": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"height": {
													"H": "╬'40px'╩╩",
													"T": "prop",
													"HL": "QS"
												},
												"rounded": {
													"H": "╬true╩╩",
													"T": "prop"
												}
											},
											"E": {
												"click": {
													"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.parent.events.clickBackButton();\r\n",
													"P": "mouseEvent:unknown | undefined",
													"HL": "JS"
												}
											},
											"C": {
												"default": {
													"c": [
														{
															"T": "QLabel",
															"C": {},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_16",
																	"T": "prop"
																},
																"text": {
																	"H": "╬'Geri'╩╩",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_16"
															},
															"O": {
																"cType": "child",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"tt:text-body-1",
																			"te:font-weight-regular"
																		]
																	},
																	"class": "text-body-1 font-weight-regular"
																},
																"compDomClasses": "q-label text-body-1 font-weight-regular newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"fontColor": "#000000",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_15"
											},
											"S": {
												"xs-xl": {
													"marginTop": "",
													"marginRight": "10px",
													"marginBottom": "",
													"marginLeft": "",
													"paddingTop": "",
													"paddingRight": "16px",
													"paddingBottom": "",
													"paddingLeft": "16px",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"fontColor": "#ffffff",
													"fontFamily": "Roboto",
													"fontSize": "16px",
													"fontStyle": "normal",
													"fontWeight": "400",
													"combinedFont": "Roboto-Regular",
													"ThemeFont": "Custom",
													"lineHeight": "20px",
													"backgroundColor": "#1976D2",
													"disabledBackgroundColor": "rgba(0,0,0,.12)",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "solid",
													"borderRightStyle": "solid",
													"borderBottomStyle": "solid",
													"borderLeftStyle": "solid",
													"borderTopLeftRadius": "4px",
													"borderTopRightRadius": "4px",
													"borderBottomLeftRadius": "4px",
													"borderBottomRightRadius": "4px",
													"borderTopWidth": "0px",
													"borderRightWidth": "0px",
													"borderBottomWidth": "0px",
													"borderLeftWidth": "0px",
													"defaultBorderColor": "",
													"sides": "Top,Right,Bottom,Left"
												}
											},
											"SC": {
												"fontColor": {
													"VIcon": "iconColor",
													"QLabel": "fontColor"
												},
												"fontStyle": {
													"QLabel": "fontStyle"
												},
												"fontSize": {
													"QLabel": "fontSize"
												},
												"fontFamily": {
													"QLabel": "fontFamily"
												},
												"fontWeight": {
													"QLabel": "fontWeight"
												},
												"combinedFont": {
													"QLabel": "combinedFont"
												},
												"lineHeight": {
													"QLabel": "lineHeight"
												},
												"bacgroundColor": {
													"VIcon": "backgroundColor"
												}
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"sp:mr-1"
														]
													},
													"class": "mr-1"
												},
												"compDomClasses": "v-btn v-btn--depressed v-btn--rounded theme--dark v-size--default mr-1 newDropBorder"
											}
										},
										{
											"T": "VBtn",
											"P": {
												"ID": {
													"H": "btn_devam",
													"T": "prop",
													"HL": "QS"
												},
												"depressed": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"visible": {
													"H": "╬true╩╩",
													"T": "prop",
													"HL": "QS"
												},
												"DiscardSettings": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"color": {
													"H": "╬'#2171DC'╩╩",
													"T": "prop"
												},
												"dark": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"height": {
													"H": "╬'40px'╩╩",
													"T": "prop",
													"HL": "QS"
												},
												"rounded": {
													"H": "╬true╩╩",
													"T": "prop"
												}
											},
											"E": {
												"click": {
													"H": "var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\nvar raw = quick.store.get('$getPaidInstallmentData') || [];\r\nvar si = Array.isArray(raw)\r\n    ? (raw.find(function (x) { return x === null || x === void 0 ? void 0 : x.selected; }) || raw[0] || null)\r\n    : (raw || null);\r\nvar amountText = ((_a = si === null || si === void 0 ? void 0 : si.amount) !== null && _a !== void 0 ? _a : '').toString();\r\nvar WILLBEPAID = ' ödenecektir ';\r\nvar isRefund = false;\r\nvar paymentTypeRaw = ((si === null || si === void 0 ? void 0 : si.paymentTypeRaw) || (si === null || si === void 0 ? void 0 : si.paymentType) || '').toUpperCase();\r\nvar accBranch = Number((_e = (_c = (_b = si === null || si === void 0 ? void 0 : si.accountInfo) === null || _b === void 0 ? void 0 : _b.branchCode) !== null && _c !== void 0 ? _c : (_d = si === null || si === void 0 ? void 0 : si.accountNumber) === null || _d === void 0 ? void 0 : _d.branchCode) !== null && _e !== void 0 ? _e : 0);\r\nvar accNumber = Number((_j = (_g = (_f = si === null || si === void 0 ? void 0 : si.accountInfo) === null || _f === void 0 ? void 0 : _f.number) !== null && _g !== void 0 ? _g : (_h = si === null || si === void 0 ? void 0 : si.accountNumber) === null || _h === void 0 ? void 0 : _h.number) !== null && _j !== void 0 ? _j : 0);\r\nvar hasAccountInfo = paymentTypeRaw === 'ACCOUNT' && accBranch > 0 && accNumber > 0;\r\nvar message = ((si === null || si === void 0 ? void 0 : si.policyNumber) || '') + \" numaral\\u0131 poli\\u00E7e i\\u00E7in \";\r\nif (paymentTypeRaw === 'ACCOUNT') {\r\n    if (hasAccountInfo) {\r\n        var accLabel = accBranch && accNumber ? accBranch + \"-\" + accNumber + \" nolu \" : '';\r\n        message += \"\" + accLabel + (isRefund ? 'hesaptan' : 'hesaba') + \" \" + amountText + WILLBEPAID;\r\n    }\r\n    else {\r\n        message += amountText + \" nakit olarak \\u00F6denecektir. \";\r\n    }\r\n}\r\nelse if (paymentTypeRaw === 'CURRENT_ACCOUNT') {\r\n    var accLabel = accBranch && accNumber ? accBranch + \"-\" + accNumber + \" nolu \" : '';\r\n    message += \"\" + accLabel + (isRefund ? 'hesaptan' : 'hesaba') + \" \" + amountText + WILLBEPAID;\r\n}\r\nelse if (paymentTypeRaw === 'CCARD') {\r\n    var cc = (si === null || si === void 0 ? void 0 : si.creditCardNumber) ? si.creditCardNumber + \" nolu \" : '';\r\n    message += \"\" + cc + (isRefund ? 'kredi kartından' : 'kredi kartına') + \" \" + amountText + WILLBEPAID;\r\n}\r\nelse if (paymentTypeRaw === 'IMECE_CARD') {\r\n    var cc = (si === null || si === void 0 ? void 0 : si.creditCardNumber) ? si.creditCardNumber + \" nolu \" : '';\r\n    message += \"\" + cc + (isRefund ? 'imece kartından' : 'imece kartına') + \" \" + amountText + WILLBEPAID;\r\n}\r\nelse {\r\n    message += amountText + \" \\u00F6denecektir. \";\r\n}\r\nmessage += 'İşleme devam etmek istiyor musunuz ?';\r\ncomponents.as_alertInfo.setLabelText({ labelData: { name: 'lbl_700_1', text: message } });\r\ncomponents.as_alertInfo.open();\r\n",
													"P": "mouseEvent:unknown | undefined",
													"HL": "JS"
												}
											},
											"C": {
												"default": {
													"c": [
														{
															"T": "QLabel",
															"C": {},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_140",
																	"T": "prop"
																},
																"text": {
																	"H": "╬'Devam'╩╩",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_140"
															},
															"O": {
																"cType": "child",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"tt:text-body-1",
																			"te:font-weight-regular"
																		]
																	},
																	"class": "text-body-1 font-weight-regular"
																},
																"compDomClasses": "q-label text-body-1 font-weight-regular newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"fontColor": "#000000",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_139"
											},
											"S": {
												"xs-xl": {
													"marginTop": "",
													"marginRight": "10px",
													"marginBottom": "",
													"marginLeft": "",
													"paddingTop": "",
													"paddingRight": "16px",
													"paddingBottom": "",
													"paddingLeft": "16px",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"fontColor": "#ffffff",
													"fontFamily": "Roboto",
													"fontSize": "16px",
													"fontStyle": "normal",
													"fontWeight": "400",
													"combinedFont": "Roboto-Regular",
													"ThemeFont": "Custom",
													"lineHeight": "20px",
													"backgroundColor": "#1976D2",
													"disabledBackgroundColor": "rgba(0,0,0,.12)",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "solid",
													"borderRightStyle": "solid",
													"borderBottomStyle": "solid",
													"borderLeftStyle": "solid",
													"borderTopLeftRadius": "4px",
													"borderTopRightRadius": "4px",
													"borderBottomLeftRadius": "4px",
													"borderBottomRightRadius": "4px",
													"borderTopWidth": "0px",
													"borderRightWidth": "0px",
													"borderBottomWidth": "0px",
													"borderLeftWidth": "0px",
													"defaultBorderColor": "",
													"sides": "Top,Right,Bottom,Left"
												}
											},
											"SC": {
												"fontColor": {
													"VIcon": "iconColor",
													"QLabel": "fontColor"
												},
												"fontStyle": {
													"QLabel": "fontStyle"
												},
												"fontSize": {
													"QLabel": "fontSize"
												},
												"fontFamily": {
													"QLabel": "fontFamily"
												},
												"fontWeight": {
													"QLabel": "fontWeight"
												},
												"combinedFont": {
													"QLabel": "combinedFont"
												},
												"lineHeight": {
													"QLabel": "lineHeight"
												},
												"bacgroundColor": {
													"VIcon": "backgroundColor"
												}
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"sp:mr-1"
														]
													},
													"class": "mr-1"
												},
												"compDomClasses": "v-btn v-btn--depressed v-btn--rounded theme--dark v-size--default mr-1 newDropBorder"
											}
										}
									],
									"cType": "slot"
								}
							},
							"E": {},
							"P": {
								"ID": {
									"H": "EdtrComp_14",
									"T": "prop"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_14"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"d:d-flex",
											"sp:pr-3",
											"sp:pl-3",
											"sp:pb-3",
											"sp:pt-3",
											"j:justify-end"
										]
									},
									"class": "d-flex pr-3 pl-3 pb-3 pt-3 justify-end"
								},
								"compDomClasses": "col d-flex pr-3 pl-3 pb-3 pt-3 justify-end pb-0 newDropBorder"
							},
							"S": {
								"xs-xl": {
									"col": "",
									"flexDirection": "column",
									"alignItems": "",
									"justifyContent": "",
									"marginLeft": "",
									"marginRight": "",
									"marginBottom": "",
									"marginTop": "",
									"paddingTop": "12px",
									"paddingBottom": "12px",
									"paddingLeft": "12px",
									"paddingRight": "12px",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_2"
			},
			"O": {
				"cType": "slot",
				"compDomClasses": "row newDropBorder"
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertInfo",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bnkasASPolicyCancellation/common/as_alertCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "╬'info'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"doubleBtn": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "╬'Onayla'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_2": {
					"H": "╬'Vazgeç'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "╬message╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"btn2ClickEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alertInfo.close();\r\n",
					"C": true,
					"HL": "JS"
				},
				"btn1ClickEvent": {
					"H": "var _a, _b;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nquick.MM.trigger('pc_makePaymentStart');\r\n(_b = (_a = components.as_loadingCustomComp) === null || _a === void 0 ? void 0 : _a.open) === null || _b === void 0 ? void 0 : _b.call(_a);\r\n",
					"C": true,
					"HL": "JS"
				},
				"cancelSuccessAlertTEST": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n; // debugger\r\n",
					"C": true,
					"HL": "JS"
				},
				"cancelFailAlertTEST": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n; // debugger\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_50",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_50"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_31"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": ""
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_errorInfo",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bnkasASPolicyCancellation/common/as_alertCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "╬'error'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"doubleBtn": {
					"H": "╬false╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "╬'Vazgeç'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "╬message╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"btn1ClickEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_errorInfo.close();\r\ncomponents.as_alertInfo.close();\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_110",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_110"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_109"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": ""
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_successInfo",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bnkasASPolicyCancellation/common/as_alertCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "╬'success'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"doubleBtn": {
					"H": "╬false╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "╬'Tamam'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "╬message╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"btn1ClickEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_successInfo.close();\r\ncomponents.as_alertInfo.close();\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_11",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_11"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_10"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": ""
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_loadingCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bankasASOrder/common/as_loadingCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_36",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_36"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_12"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": ""
			}
		}
	],
	"lrids": {},
	"clrids": {},
	"opt": {}
};
export default pjson