let pjson = {
	"pJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "false",
					"T": "prop"
				},
				"externalProps": {
					"H": "[]",
					"T": "prop",
					"HL": "QS"
				},
				"externalEvents": {
					"H": "[{name='setPaymentType', params=[data]}, \r\n{name = 'backButtonClick', params = []}]",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"setItems": {
					"H": "debugger;\r\nlet paymentPlan = quick.store.get('$paymentPlan');\r\nlet policy = quick.store.get('$policyPayment');\r\n\r\nlet items = []\r\npaymentPlan.amountText = quick.Quick.toMoney(Math.abs(paymentPlan.amount.amount.amount), 'tr-TR', { minimumFractionDigits: 2 })\r\n    + \" \" + paymentPlan.amount.amount.currencyCode.code;\r\npaymentPlan.amountTLText = quick.Quick.toMoney(Math.abs(paymentPlan.amount.amountTL.amount), 'tr-TR', { minimumFractionDigits: 2 })\r\n    + \" \" + paymentPlan.amount.amountTL.currencyCode.code;\r\npaymentPlan.id = 1;\r\npaymentPlan.installmentDateFormatted = paymentPlan.installmentDate?.split('-').reverse().join('.');\r\nitems.push(paymentPlan);\r\n\r\ncomponents.dt_policyPaymentList.items = items;\r\n\r\ncomponents.txt_policyNo.qValue = policy.policyNumber;\r\ncomponents.txt_renewalNo.qValue = policy.renewalNumber;\r\ncomponents.txt_amount.qValue = paymentPlan.amountText;\r\n\r\nlet interestFreePeriodItems = [];\r\nif (policy.interestFreePeriods) {\r\n    for (let i in policy.interestFreePeriods) {\r\n        let interestFreePeriodItem = {\r\n            text: i,\r\n            value: i\r\n        }\r\n        interestFreePeriodItems.push(interestFreePeriodItem);\r\n    }\r\n}\r\ncomponents.vauto_interestFreePeriod.items = interestFreePeriodItems;\r\nquick.MM.trigger(\"setPaymentType\");\r\n",
					"C": true,
					"EV": true,
					"HL": "TS"
				},
				"setConsumerAndScreenInfo": {
					"H": "debugger;\r\n\r\nquick.store.set('$customConsumerCode', 'TANE.BAHOME');\r\nquick.store.set('$customScreenName', 'TANE.BAHOME');",
					"C": true,
					"HL": "TS"
				},
				"setPaymentType": {
					"H": "debugger;\r\n\r\nlet policy = quick.store.get('$policyPayment');\r\nlet debtorCreditor = quick.store.get('$vauto_debtorCreditor');\r\n\r\nlet paymentTypes = [];\r\npaymentTypes.push({ text: 'Nakit', value: 1 });\r\n\r\nif (debtorCreditor == \"debit\") {\r\n    paymentTypes.push({ text: 'Kredi Kartı', value: 2 });\r\n}\r\n\r\npaymentTypes.push({ text: 'Cari Hesap', value: 3 });\r\n\r\nif (policy?.policyExtCode >= 111 && policy?.policyExtCode <= 119 && debtorCreditor == \"debit\") {\r\n    paymentTypes.push({ text: 'İmece Kart', value: 4 });\r\n}\r\n\r\ncomponents.vauto_paymentType.items = paymentTypes;",
					"C": true,
					"HL": "TS"
				},
				"retrieveCreditCardList": {
					"H": "debugger;\r\nlet isImeceCard;\r\ncomponents.vauto_accountList.label = \"Kredi Kartı\";\r\n\r\nlet requestData = {\r\n    //\"customerNo\": quick.store.get('$customerInfo').customerNumber, //(<any>quick.containerServices).getCustomerContext()?.customerNumber,\r\n    \"customerNo\": (<any>quick.containerServices).getCustomerContext()?.customerNumber,\r\n    \"branchCode\": 0,\r\n    \"accountNo\": 0,\r\n    \"pageSize\": 0,\r\n    \"pageNumber\": 0,\r\n    \"transactionType\": isImeceCard ? \"I\" : \"S\"\r\n};\r\nquick.MM.trigger('setDatasConsumerAndScreenInfo');\r\nlet serviceRequest: IRequest = {\r\n    url: '/api/uiclient/retrieveCreditCardList',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n}\r\n\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n    debugger;\r\n    let decimal\r\n    let availableLimit;\r\n    let cardList = resp.data.cardInfo;\r\n    let tmpList = [];\r\n    quick.store.set(\"creditCardInfo\", resp.data);\r\n    for (var i = 0; i < cardList.length; i++) {\r\n        if (cardList[i].cardStatCode == \"N\" || cardList[i].cardStatCode == \"CR\" || cardList[i].cardStatCode == \"SG\") {\r\n            if (cardList[i].cardType != \"V\" && cardList[i].cardNo == cardList[i].mainCardNo) {\r\n                availableLimit = quick.Quick.toMoney(Number(cardList[i].availableLimit)); //'124.0';\r\n                if (availableLimit.split(',')[1]) { }\r\n                else {\r\n                    decimal = ',00';\r\n                    availableLimit = availableLimit + decimal;\r\n                }\r\n\r\n                let data = {\r\n                    text: cardList[i].cardNo + ' (' + availableLimit + ') ' + cardList[i].embossName,\r\n                    value: cardList[i]\r\n                }\r\n                tmpList.push(data);\r\n            }\r\n        }\r\n    }\r\n    components.vauto_accountList.items = tmpList;;\r\n    components.as_loadingCustomComp.close();\r\n})\r\n    .catch((err) => {\r\n        components.as_loadingCustomComp.close();\r\n        let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n        (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n        components.as_alertCustomComp.open();\r\n    });",
					"C": true,
					"HL": "TS"
				},
				"retrieveCustomerAccounts": {
					"H": "debugger;\r\n//Tahsilat şekli Hesaptan seçildi\r\nlet requestData = {\r\n    \"customerNumber\": (<any>quick.containerServices).getCustomerContext().customerNumber,\r\n    \"accountType\": [\r\n        {\r\n            \"code\": \"DEMAND\"\r\n        }\r\n    ],\r\n    \"statusCode\": {\r\n        \"code\": \"OPEN\"\r\n    }\r\n};\r\nquick.MM.trigger('setDatasConsumerAndScreenInfo');\r\n\r\nlet serviceRequest: IRequest = {\r\n    url: '/api/uiclient/retrieveCustomerAccounts',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'retrieveCustomerAccountsResponse',\r\n    blockRender: false,\r\n}\r\n\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n    quick.EM.trace(resp?.data);\r\n    let decimal;\r\n    let amountBalance;\r\n    let accountList = resp?.data.accountList.account;\r\n    let tmpList = [];\r\n\r\n    let overDraft = resp?.data?.accountList?.account[0]?.overdraft;\r\n    if (overDraft == true) {\r\n        components.cbox_overdraft.visible = true;\r\n    }\r\n    else {\r\n        components.cbox_overdraft.visible = false;\r\n    }\r\n\r\n    for (var i = 0; i < accountList.length; i++) {\r\n        amountBalance = quick.Quick.toMoney(Number(accountList[i].balance)); //'124.0';\r\n        if (amountBalance.split(',')[1]) { }\r\n        else {\r\n            decimal = ',00';\r\n            amountBalance = amountBalance + decimal;\r\n        }\r\n\r\n        let data = {\r\n            text: accountList[i].number?.branchCode + '-' + accountList[i].number?.number + ' - Vadesiz TL - ' + amountBalance + ' TRY',\r\n            value: accountList[i]\r\n        }\r\n        tmpList.push(data);\r\n    }\r\n    components.vauto_accountList.items = tmpList;\r\n    components.as_loadingCustomComp.close();\r\n})\r\n    .catch((err) => {\r\n        components.as_loadingCustomComp.close();\r\n        let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n        (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n        components.as_alertCustomComp.open();\r\n    });",
					"C": true,
					"HL": "TS"
				},
				"makePayment": {
					"H": "debugger;\r\ndeclare let isCancel;\r\nlet paymentPlan = quick.store.get('$paymentPlan'); // Ödeme planı bilgileri\r\nlet policy = quick.store.get('$policyPayment'); // Poliçe bilgileri\r\nlet savePolicyInstallmentInfoResponse = quick.store.get(\"$savePolicyInstallmentInfoResponse\"); //savePolicyInstallmentInfoResponse\r\nlet vauto_debtorCreditor = quick.store.get('$vauto_debtorCreditor'); // Borç veya alacak\r\nlet isDebit = vauto_debtorCreditor == \"debit\"; // Borç veya alacak\r\nlet companyIbanNumber = quick.store.get('$paymentPlanListResponse').retrievePaymentPlanDTO.companyIbanNumber;\r\nlet createPaymentRecordResponse = quick.store.get('$createPaymentRecordResponse')?.installmentResultList[0];\r\n\r\nquick.MM.trigger(\"setConsumerAndScreenInfo\");\r\n\r\nlet makePaymentRequest = {\r\n    \"paymentOperationType\": {\r\n        \"customerNumber\": (<any>quick.containerServices).getCustomerContext()?.customerNumber,\r\n        \"firmType\": \"AS\",\r\n        \"installmentTypeCode\": isCancel ? \"CREDIT\" : \"2000097\",\r\n        \"insuranceType\": components.vauto_paymentType.qValue == 4 ? \"TARSIM\" : \"HOME\",\r\n        \"insuranceTypeName\": policy.policyType,\r\n        \"paymentOptionCode\": \"1\",\r\n        \"payableItem\": [\r\n            {\r\n                \"amount\": {\r\n                    \"amount\": Math.abs(paymentPlan.amount.amount.amount),\r\n                    \"currencyCode\": {\r\n                        \"code\": paymentPlan.amount.amount.currencyCode.code\r\n                    }\r\n                },\r\n                \"bankRefId\": savePolicyInstallmentInfoResponse.referenceId,\r\n                \"installmentId\": paymentPlan.installmentId,\r\n                \"installmentType\": isCancel ? \"CREDIT\" : isDebit ? \"DEBIT\" : \"CREDIT\"\r\n            }\r\n        ],\r\n        \"useOverdraft\": components.cbox_overdraft.qValue,\r\n        \"companyIbanNumber\": companyIbanNumber,\r\n        \"customerName\": policy.name,\r\n        \"cyprus\": policy.cyprus,\r\n        \"mandatory\": policy.mandatory,\r\n        \"interestFreePeriod\": components.vauto_interestFreePeriod.qValue,\r\n        \"paymentType\": quick.store.get(\"paymentType\"),\r\n        \"branchCode\": null,\r\n        \"accountInfo\": null,\r\n        \"installment\": null,\r\n        \"creditCardInfo\": null\r\n    }\r\n}\r\n\r\nif (quick.store.get(\"paymentType\") == \"cash\") {\r\n    makePaymentRequest.paymentOperationType.branchCode = (<any>quick.containerServices).getUserContext()?.workstationBO.organizationUnitCode;\r\n} else if (quick.store.get(\"paymentType\") == \"creditCard\") {\r\n    let creditCard = components.vauto_accountList.qValue;\r\n    makePaymentRequest.paymentOperationType.creditCardInfo = {\r\n        \"customerName\": quick.store.get(\"creditCardInfo\").customerName,\r\n        \"ccNumber\": creditCard.cardNo,\r\n        \"expires\": creditCard.expireDate.substring(2, 4) + \"/\" + creditCard.expireDate.substring(0, 2)\r\n    };\r\n    makePaymentRequest.paymentOperationType.installment = 1;\r\n\r\n} else if (quick.store.get(\"paymentType\") == \"account\") {\r\n    makePaymentRequest.paymentOperationType.accountInfo = components.vauto_accountList.qValue.number;\r\n    makePaymentRequest.paymentOperationType.installment = 1;\r\n}\r\n\r\nfunction makePayment() {\r\n\r\n    let serviceRequest: IRequest = {\r\n        url: '/api/wrapperclient/makePayment',\r\n        http: 'POST',\r\n        headers: { \"userId\": (<any>quick.containerServices).getUserContext().userid },\r\n        data: makePaymentRequest,\r\n        onFail: 'empty',\r\n        onSuccess: 'empty',\r\n        responseField: 'empty',\r\n        blockRender: false,\r\n    }\r\n\r\n    quick.Request.async(serviceRequest)?.then((resp) => {\r\n        quick.EM.trace(resp?.data);\r\n        quick.store.set(\"$makePaymentResponse\", resp.data);\r\n        if (isDebit) {\r\n            quick.MM.trigger(\"createPaymentRecord\", [{ isCancel: false }]); // Borçluysa createPaymentRecord ile işleme devam edilir.\r\n        } else {\r\n            // Alacaklıysa işlem tamamlanmış demektir, sonuç ekranına yönlendirilir.\r\n            quick.store.set('$eventSourceId', resp.data.paymentOperationType?.receiptInfo?.siid);\r\n            quick.Quick.go(\"/static/ui-bankasASPayment/paymentPages/as_paymentResultPage.qjson\");\r\n        }\r\n        components.as_loadingCustomComp.close();\r\n    })\r\n        .catch((err) => {\r\n            components.as_loadingCustomComp.close();\r\n            if (!isDebit) { // Alacaklıysa createPaymentRecord iptal edilir.\r\n                quick.MM.trigger(\"createPaymentRecord\", [{ isCancel: true }]);\r\n            }\r\n            let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n            (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n            components.as_alertCustomComp.open();\r\n        });\r\n}\r\n\r\nfunction makeRefund() {\r\n    let serviceRequest: IRequest = {\r\n        url: '/api/wrapperclient/makeRefund',\r\n        http: 'POST',\r\n        headers: { \"userId\": (<any>quick.containerServices).getUserContext().userid },\r\n        data: makePaymentRequest,\r\n        onFail: 'empty',\r\n        onSuccess: 'empty',\r\n        responseField: 'empty',\r\n        blockRender: false,\r\n    }\r\n\r\n    quick.Request.async(serviceRequest)?.then((resp) => {\r\n        quick.EM.trace(resp?.data);\r\n        components.as_loadingCustomComp.close();\r\n    })\r\n        .catch((err) => {\r\n            components.as_loadingCustomComp.close();\r\n            let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n            (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n            components.as_alertCustomComp.open();\r\n        });\r\n}\r\n\r\nif (isCancel) {\r\n    makeRefund();\r\n} else {\r\n    makePayment();\r\n}",
					"C": true,
					"HL": "TS"
				},
				"createPaymentRecord": {
					"H": "debugger;\r\ndeclare let isCancel;\r\nlet paymentPlan = quick.store.get('$paymentPlan'); // Ödeme planı bilgileri\r\nlet policy = quick.store.get('$policyPayment'); // Poliçe bilgileri\r\nlet savePolicyInstallmentInfoResponse = quick.store.get(\"$savePolicyInstallmentInfoResponse\"); //savePolicyInstallmentInfoResponse\r\nlet vauto_debtorCreditor = quick.store.get('$vauto_debtorCreditor'); // Borç veya alacak\r\nlet isDebit = vauto_debtorCreditor == \"debit\"; // Borç veya alacak\r\nlet companyIbanNumber = quick.store.get('$paymentPlanListResponse').retrievePaymentPlanDTO.companyIbanNumber;\r\nlet makePaymentResponse = quick.store.get('$makePaymentResponse')?.paymentOperationType;\r\nlet createPaymentRecordResponse = quick.store.get('$createPaymentRecordResponse')?.installmentResultList[0];\r\n\r\nquick.MM.trigger(\"setConsumerAndScreenInfo\");\r\n\r\nlet createPaymentRecordRequest = {\r\n    \"policyNumber\": {\r\n        \"policyNo\": policy.policyNumber,\r\n        \"renewalNo\": policy.renewalNumber\r\n    },\r\n    \"citizenId\": (<any>quick.containerServices).getCustomerContext()?.customerCitizenId,\r\n    \"installmentInfoList\": [\r\n        {\r\n            \"accountNumber\": quick.store.get(\"paymentType\") == \"account\" ? components.vauto_accountList.qValue.number : null,\r\n            \"creditCardNumber\": quick.store.get(\"paymentType\") == \"creditCard\" ? components.vauto_accountList.qValue.cardNo : null,\r\n            \"amount\": {\r\n                \"amount\": {\r\n                    \"amount\": Math.abs(paymentPlan.amount.amount.amount),\r\n                    \"currencyCode\": {\r\n                        \"code\": paymentPlan.amount.amount.currencyCode.code\r\n                    }\r\n                },\r\n                \"amountTL\": {\r\n                    \"amount\": Math.abs(paymentPlan.amount.amountTL.amount),\r\n                    \"currencyCode\": {\r\n                        \"code\": paymentPlan.amount.amountTL.currencyCode.code\r\n                    }\r\n                }\r\n            },\r\n            \"bankRefId\": savePolicyInstallmentInfoResponse.referenceId,\r\n            \"installmentDate\": paymentPlan.installmentDate,\r\n            \"installmentId\": paymentPlan.installmentId,\r\n            \"installmentNumber\": paymentPlan.installmentNumber,\r\n            \"installmentStatus\": paymentPlan.installmentStatus,\r\n            \"installmentType\": paymentPlan.installmentType,\r\n            \"orderId\": isDebit ? makePaymentResponse?.installmentInfoList[0]?.orderId : null,\r\n            \"paymentId\": isCancel ? createPaymentRecordResponse?.paymentId : null,\r\n            \"required\": policy.legacy,\r\n            \"transactionId\": isCancel ? createPaymentRecordResponse?.paymentId : null,\r\n            \"paymentType\": quick.store.get(\"paymentTypeEnum\"),\r\n            \"insuranceTypeName\": policy.policyType\r\n        }\r\n    ],\r\n    \"interestFreePeriod\": components.vauto_interestFreePeriod.qValue,\r\n    \"paymentType\": quick.store.get(\"paymentTypeEnum\")\r\n}\r\n\r\nfunction createPaymentRecord() {\r\n    let serviceRequest: IRequest = {\r\n        url: '/api/wrapperclient/createPaymentRecord',\r\n        http: 'POST',\r\n        data: createPaymentRecordRequest,\r\n        onFail: 'empty',\r\n        onSuccess: 'empty',\r\n        responseField: 'empty',\r\n        blockRender: false,\r\n    }\r\n\r\n    quick.Request.async(serviceRequest)?.then((resp) => {\r\n        quick.EM.trace(resp?.data);\r\n        quick.store.set('$createPaymentRecordResponse', resp.data);\r\n        if (!isDebit) {\r\n            quick.MM.trigger(\"makePayment\", [{ isCancel: false }]);\r\n        } else {\r\n            quick.store.set('$eventSourceId', quick.store.get(\"$makePaymentResponse\")?.paymentOperationType?.receiptInfo?.siid);\r\n            quick.Quick.go(\"/static/ui-bankasASPayment/paymentPages/as_paymentResultPage.qjson\");\r\n        }\r\n        components.as_loadingCustomComp.close();\r\n    })\r\n        .catch((err) => {\r\n            if (isDebit) {\r\n                quick.MM.trigger(\"makePayment\", [{ isCancel: true }]);\r\n            }\r\n            components.as_loadingCustomComp.close();\r\n            let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n            (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n            components.as_alertCustomComp.open();\r\n        });\r\n}\r\n\r\n\r\nfunction cancelPaymentRecord() {\r\n    let serviceRequest: IRequest = {\r\n        url: '/api/wrapperclient/cancelPaymentRecord',\r\n        http: 'POST',\r\n        data: createPaymentRecordRequest,\r\n        onFail: 'empty',\r\n        onSuccess: 'empty',\r\n        responseField: 'empty',\r\n        blockRender: false,\r\n    }\r\n\r\n    quick.Request.async(serviceRequest)?.then((resp) => {\r\n        quick.EM.trace(resp?.data);\r\n        components.as_loadingCustomComp.close();\r\n    })\r\n        .catch((err) => {\r\n            components.as_loadingCustomComp.close();\r\n            let errorMessage = err?.response?.data?.responseMessage ?? 'Bir hata oluştu.';\r\n            (components.as_alertCustomComp as any).setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n            components.as_alertCustomComp.open();\r\n        });\r\n}\r\n\r\n\r\nif (isCancel) {\r\n    cancelPaymentRecord();\r\n} else {\r\n    createPaymentRecord();\r\n}",
					"C": true,
					"HL": "TS"
				},
				"clearComponents": {
					"H": "components.txt_policyNo.qValue = undefined;\r\ncomponents.txt_renewalNo.qValue = undefined;\r\ncomponents.txt_amount.qValue = undefined;\r\ncomponents.vauto_accountList.items = [];\r\ncomponents.vauto_interestFreePeriod.items = [];\r\ncomponents.cbox_overdraft.qValue = false;\r\ncomponents.dt_policyPaymentList.items = [];\r\ncomponents.vauto_paymentType.qValue = undefined;\r\ncomponents.btn_createOrder.visible = false;",
					"C": true,
					"HL": "TS"
				},
				"createABMRecord": {
					"H": "debugger;\r\nlet makePaymentResponse = quick.store.get(\"makePaymentResponse\");\r\nlet accountType;\r\nlet monetaryType = \"P\";\r\nfunction generateTOD() {\r\n    const now = new Date();\r\n    const dt = `${now.getFullYear().toString().slice(-2)}${(now.getMonth() + 1).toString().padStart(2, '0')}${now.getDate().toString().padStart(2, '0')}${now.getHours().toString().padStart(2, '0')}${now.getMinutes().toString().padStart(2, '0')}${now.getSeconds().toString().padStart(2, '0')}${now.getMilliseconds().toString().padStart(3, '0')}`;\r\n    return `BA${dt.slice(0, -1)}`;\r\n}\r\n\r\nconst generateDateNow = () => {\r\n    const d = new Date();\r\n    return `${d.getFullYear()}-${(d.getMonth() + 1).toString().padStart(2, '0')}-${d.getDate().toString().padStart(2, '0')} ${d.getHours().toString().padStart(2, '0')}:${d.getMinutes().toString().padStart(2, '0')}:${d.getSeconds().toString().padStart(2, '0')}`;\r\n};\r\n\r\nif (quick.store.get(\"paymentType\") == \"cash\") {\r\n    accountType = \"M\";\r\n    monetaryType = \"P\";\r\n} else if (quick.store.get(\"paymentType\") == \"creditCard\") {\r\n    accountType = \"1\";\r\n} else if (quick.store.get(\"paymentType\") == \"account\") {\r\n    accountType = \"6\";\r\n}\r\n\r\nlet request = {\r\n    \"tod\": generateTOD(),\r\n    \"part\": 0,\r\n    \"type\": \"A\",\r\n    \"groupType\": \"Z001\",\r\n    \"customerNumber\": (<any>quick.containerServices).getCustomerContext()?.customerNumber,\r\n    \"accountType\": accountType,\r\n    \"onlineDate\": generateDateNow(),\r\n    \"tellerId\": (<any>quick.containerServices).getUserContext()?.workstationBO?.code,\r\n    \"sequenceNo\": makePaymentResponse?.imsBranchLegacyContextTypeDTO?.sequenceNo,\r\n    \"employeeId\": (<any>quick.containerServices).getUserContext()?.userid,\r\n    \"processingOrganizationUnit\": (<any>quick.containerServices).getUserContext()?.workstationBO?.organizationUnitCode,\r\n    \"channelCode\": \"branch\",\r\n    \"transactionCode\": \"ASSOR\",\r\n    \"isCancellation\": false,\r\n    \"pcuBytes\": \"A\",\r\n    \"amount\": makePaymentResponse?.paymentOperationType?.installmentInfoList[0]?.amount,\r\n    \"monetaryType\": monetaryType,\r\n    \"operationAddress\": (<any>quick.containerServices).getUserContext()?.ip,\r\n    \"ofsaProductCode\": 410201,\r\n    \"currencySwiftCode\": \"TRY\",\r\n    \"abmDetails\": {\r\n        \"isVoucherPrintingNecessary\": \"1\",\r\n        \"isVoucherPrinted\": true\r\n    }\r\n}\r\n\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nlet serviceRequest: IRequest = {\r\n    url: '/api/abm/create',\r\n    http: 'POST',\r\n    data: request,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n}\r\n\r\nquick.Request.async(serviceRequest)?.then((resp) => {\r\n    quick.EM.trace(resp?.data);\r\n})\r\n    .catch((err) => {\r\n        quick.EM.trace(err?.response?.data?.responseMessage);\r\n    });",
					"C": true,
					"HL": "TS"
				},
				"EndRender": {
					"H": "let debtorCreditor = quick.store.get('$vauto_debtorCreditor');\r\nif (debtorCreditor == \"debit\") {\r\n    components.lbl_title.text = \"Anadolu Sigorta Tahsilat\";\r\n    components.vauto_paymentType.label = \"Tahsilat Tipi\";\r\n    components.txt_amount.label = \"Tahsil Edilecek Tutar\";\r\n    components.txt_continue.text = \"Tahsil Et\";\r\n} else {\r\n    components.lbl_title.text = \"Anadolu Sigorta İade\";\r\n    components.vauto_paymentType.label = \"İade Tipi\";\r\n    components.txt_amount.label = \"İade Edilecek Tutar\";\r\n    components.txt_continue.text = \"İade Et\";\r\n}",
					"HL": "TS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pt-0",
							"sp:pl-0",
							"sp:pr-0",
							"sp:pb-0"
						]
					},
					"class": "pt-0 pl-0 pr-0 pb-0"
				}
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "VContainerComp",
					"T": "prop"
				},
				"class": {
					"H": "'container container--fluid'",
					"T": "class"
				},
				"visible": {
					"H": "true",
					"T": "prop"
				},
				"eager": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VRow",
							"P": {
								"ID": {
									"H": "EdtrComp_34",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VCard",
															"P": {
																"ID": {
																	"H": "EdtrComp_9",
																	"T": "prop"
																},
																"color": {
																	"H": "'primary'",
																	"T": "prop"
																},
																"visible": {
																	"H": "true",
																	"T": "prop"
																},
																"height": {
																	"H": "'50px'",
																	"T": "prop"
																},
																"flat": {
																	"H": "true",
																	"T": "prop"
																},
																"rounded": {
																	"H": "'b-0'",
																	"T": "prop"
																},
																"dark": {
																	"H": "true",
																	"T": "prop"
																}
															},
															"E": {},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_10",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "QLabel",
																											"P": {
																												"ID": {
																													"H": "lbl_title",
																													"T": "prop"
																												},
																												"tagType": {
																													"H": "'span'",
																													"T": "prop"
																												},
																												"text": {
																													"H": "'Poliçe Tahsilat Bilgileri'",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"visible": {
																													"H": "true",
																													"T": "prop"
																												},
																												"processHtml": {
																													"H": "false",
																													"T": "prop"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_12"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"sp:ml-5",
																															"tt:text-h6"
																														]
																													},
																													"class": "ml-5 text-h6"
																												}
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_11",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_11"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pt-3",
																											"sp:pl-3",
																											"sp:pr-3",
																											"sp:pb-3"
																										]
																									},
																									"class": "d-flex pt-3 pl-3 pr-3 pb-3"
																								}
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_10"
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_9"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:pt-0"
																		]
																	},
																	"class": "pt-0"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "EdtrComp_67",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_67"
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": []
													},
													"class": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_34"
							},
							"O": {
								"cType": "slot"
							}
						},
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_276",
									"T": "prop"
								},
								"color": {
									"H": "'white'",
									"T": "prop"
								},
								"visible": {
									"H": "true",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_8",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txt_policyNo",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "'Poliçe No'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"disabled": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"input": {
																					"H": "components.dt_policyPaymentList.search = value;",
																					"P": "value:any",
																					"HL": "TS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_47"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pl-3",
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3"
																						]
																					},
																					"class": "pl-3 pt-3 pr-3 pb-3"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_268",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_268"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex flex-column col-3"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txt_renewalNo",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "'Yenileme No'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"input": {
																					"H": "components.dt_policyPaymentList.search = value;",
																					"P": "value:any",
																					"HL": "TS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_118"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pl-3",
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3"
																						]
																					},
																					"class": "pl-3 pt-3 pr-3 pb-3"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_117",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_117"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex flex-column col-3"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_8"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "VRowComp",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VDataTable",
																			"P": {
																				"ID": {
																					"H": "dt_policyPaymentList",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"footerProps": {
																					"H": "{showFirstLastPage = true,\nfirstIcon = 'mdi-arrow-collapse-left',\nlastIcon = 'mdi-arrow-collapse-right',\nprevIcon = 'mdi-minus',\nnextIcon = 'mdi-plus'}",
																					"T": "prop"
																				},
																				"headers": {
																					"H": "[{ text = 'Referans Numarası', value= 'installmentId',filterable= true },\n{ text = 'Ödeme Tutarı', value= 'amountText', filterable= true },\n{ text = 'Ödeme Tutarı TL', value= 'amountTLText', filterable= true },\n{ text = 'Taksit Tarihi', value= 'installmentDateFormatted', filterable= true },\n{ text = 'Ödeme Türü', value= 'installmentType', filterable= true }]",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemsPerPage": {
																					"H": "10",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"mobileBreakpoint": {
																					"H": "600",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDefaultFooter": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disablePagination": {
																					"H": "false",
																					"T": "prop"
																				},
																				"noDataText": {
																					"H": "'Listelenecek Veri Yok.'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDefaultHeader": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"fixedHeader": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disableSort": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dark": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemKey": {
																					"H": "'id'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disableFiltering": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"items": {
																					"H": "[]",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {
																				"item.selected": {
																					"c": [
																						{
																							"T": "VCheckbox",
																							"P": {
																								"ID": {
																									"H": "EdtrComp_46",
																									"T": "prop"
																								},
																								"color": {
																									"H": "'primary'",
																									"T": "prop"
																								},
																								"hideDetails": {
																									"H": "false",
																									"T": "prop"
																								},
																								"label": {
																									"H": "''",
																									"T": "prop",
																									"HL": "QS"
																								},
																								"visible": {
																									"H": "true",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {},
																							"_Editor": {
																								"eID": "EdtrComp_46"
																							},
																							"O": {
																								"cType": "slot"
																							}
																						}
																					],
																					"cType": "scopedSlot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_25"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginTop": "",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"headerFontColor": "#686868",
																					"headerFontFamily": "Roboto",
																					"headerFontSize": "12px",
																					"headerFontStyle": "normal",
																					"headerFontWeight": "400",
																					"headerCombinedFont": "Roboto-Regular",
																					"headerThemeFont": "Custom",
																					"footerText": "#686868",
																					"footerFontFamily": "Roboto",
																					"footerFontSize": "12px",
																					"footerFontStyle": "normal",
																					"footerFontWeight": "400",
																					"footerCombinedFont": "Roboto-Regular",
																					"footerThemeFont": "Custom",
																					"textColor": "#010101",
																					"itemFontFamily": "Roboto",
																					"itemFontSize": "14px",
																					"itemFontStyle": "normal",
																					"itemFontWeight": "400",
																					"itemsCombinedFont": "Roboto-Regular",
																					"itemsThemeFont": "Custom",
																					"backgroundColor": "#ffffff",
																					"hoverColor": "#ffffff",
																					"footerColor": "#FFFFFF",
																					"headerColor": "#FFFFFF",
																					"selectedBackground": "#FFFFFF",
																					"expandedContent": "#010101",
																					"lineColor": "#0000001f",
																					"lineSize": "1",
																					"boxShadow": "",
																					"boxSizing": "",
																					"borderTopStyle": "solid",
																					"borderRightStyle": "solid",
																					"borderBottomStyle": "solid",
																					"borderLeftStyle": "solid",
																					"borderTopLeftRadius": "4px",
																					"borderTopRightRadius": "4px",
																					"borderBottomLeftRadius": "4px",
																					"borderBottomRightRadius": "4px",
																					"borderTopWidth": "1px",
																					"borderRightWidth": "1px",
																					"borderBottomWidth": "1px",
																					"borderLeftWidth": "1px",
																					"defaultBorderColor": "#0000001f",
																					"sides": "Top,Right,Bottom,Left"
																				}
																			},
																			"O": {
																				"cType": "scopedSlot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "VColComp",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_3"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": []
																	},
																	"class": ""
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "#ffffff",
																	"boxShadow": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_4"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_120",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_paymentType",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"eager": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "false",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "'text'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "'value'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"attach": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "'Tahsilat Tipi'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"change": {
																					"H": "debugger;\r\ncomponents.as_loadingCustomComp.open();\r\ncomponents.row_accountRow.visible = true;\r\ncomponents.cbox_overdraft.visible = false;\r\ncomponents.vauto_interestFreePeriod.visible = false;\r\ncomponents.btn_createOrder.visible = true;\r\nif (components.vauto_paymentType.qValue == \"1\") {\r\n  //Nakit\r\n  components.row_accountRow.visible = false;\r\n  quick.store.set(\"paymentType\", \"cash\");\r\n  quick.store.set(\"paymentTypeEnum\", \"CASH\");\r\n  components.as_loadingCustomComp.close();\r\n} else if (components.vauto_paymentType.qValue == \"2\") {\r\n  //Kredi Kartı\r\n  quick.MM.trigger(\"retrieveCreditCardList\", [{ isImeceCard: false }]);\r\n  quick.store.set(\"paymentType\", \"creditCard\");\r\n  quick.store.set(\"paymentTypeEnum\", \"CREDIT_CARD\");\r\n} else if (components.vauto_paymentType.qValue == \"3\") {\r\n  //Cari Hesap\r\n  quick.MM.trigger(\"retrieveCustomerAccounts\");\r\n  components.vauto_accountList.label = \"Hesap Numarası\";\r\n  quick.store.set(\"paymentType\", \"account\");\r\n  quick.store.set(\"paymentTypeEnum\", \"ACCOUNT\");\r\n} else if (components.vauto_paymentType.qValue == \"4\") {\r\n  //İmece Kart\r\n  quick.MM.trigger(\"retrieveCreditCardList\", [{ isImeceCard: true }]);\r\n  components.vauto_interestFreePeriod.visible = true;\r\n  quick.store.set(\"paymentType\", \"creditCard\");\r\n  quick.store.set(\"paymentTypeEnum\", \"CREDIT_CARD\");\r\n\r\n}",
																					"HL": "TS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_72"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pt-3",
																							"sp:pl-3",
																							"sp:pb-3",
																							"sp:pr-3"
																						]
																					},
																					"class": "pt-3 pl-3 pb-3 pr-3"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_123",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_123"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-6"
																		]
																	},
																	"class": "d-flex flex-column col-6"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_120"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "row_accountRow",
													"T": "prop",
													"HL": "QS"
												},
												"visible": {
													"H": "false",
													"T": "prop",
													"HL": "QS"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_accountList",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"eager": {
																					"H": "true",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "false",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "'text'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "'value'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"attach": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "'Hesap Numarası'",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_24"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3",
																							"sp:pl-3"
																						]
																					},
																					"class": "pt-3 pr-3 pb-3 pl-3"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_23",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_23"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-6"
																		]
																	},
																	"class": "d-flex flex-column col-6"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCheckbox",
																			"P": {
																				"ID": {
																					"H": "cbox_overdraft",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"color": {
																					"H": "'primary'",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "false",
																					"T": "prop"
																				},
																				"label": {
																					"H": "'Ek Hesap Kullanılsın'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_43"
																			},
																			"O": {
																				"cType": "slot"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_61",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_61"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"a:align-center",
																			"j:justify-center",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex align-center justify-center col-3"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "#ffffff",
																	"boxShadow": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_20"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_42",
													"T": "prop"
												},
												"visible": {
													"H": "false",
													"T": "prop",
													"HL": "QS"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_interestFreePeriod",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"eager": {
																					"H": "true",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "false",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "'text'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "'value'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "false",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"attach": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "'40px'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "'Faizsiz Dönem Vadesi'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rules": {
																					"H": "[Quick.validation.required('İmece kart ile yapılan ödemelerde faizsiz dönem seçilmesi zorunludur.')]",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_45"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3",
																							"sp:pl-3"
																						]
																					},
																					"class": "pt-3 pr-3 pb-3 pl-3"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_44",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_44"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-6"
																		]
																	},
																	"class": "d-flex flex-column col-6"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_42"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_73",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txt_amount",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "'Tahsil Edilecek Tutar'",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "true",
																					"T": "prop"
																				},
																				"disabled": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "true",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"input": {
																					"H": "components.dt_policyPaymentList.search = value;",
																					"P": "value:any",
																					"HL": "TS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_130"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pl-3",
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3"
																						]
																					},
																					"class": "pl-3 pt-3 pr-3 pb-3"
																				}
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_76",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_76"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-6"
																		]
																	},
																	"class": "d-flex flex-column col-6"
																}
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_73"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_276"
							},
							"O": {
								"cType": "slot"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pl-0",
							"sp:pt-0",
							"sp:pr-0",
							"sp:pb-0",
							"sp:mt-0",
							"sp:ml-0",
							"sp:mr-0",
							"sp:mb-0"
						]
					},
					"class": "pl-0 pt-0 pr-0 pb-0 mt-0 ml-0 mr-0 mb-0"
				}
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "VRow",
			"P": {
				"ID": {
					"H": "EdtrComp_2",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCol",
							"C": {
								"default": {
									"c": [
										{
											"T": "VBtn",
											"P": {
												"ID": {
													"H": "EdtrComp_6",
													"T": "prop"
												},
												"depressed": {
													"H": "true",
													"T": "prop"
												},
												"DiscardSettings": {
													"H": "true",
													"T": "prop"
												},
												"color": {
													"H": "'#2171DC'",
													"T": "prop"
												},
												"dark": {
													"H": "true",
													"T": "prop"
												},
												"height": {
													"H": "'40px'",
													"T": "prop",
													"HL": "QS"
												},
												"rounded": {
													"H": "true",
													"T": "prop"
												}
											},
											"E": {
												"click": {
													"H": "quick.MM.trigger(\"clearComponents\");\r\nquick.parent.events.backButtonClick();",
													"P": "mouseEvent:unknown | undefined",
													"HL": "TS"
												}
											},
											"C": {
												"default": {
													"c": [
														{
															"T": "QLabel",
															"C": {},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_7",
																	"T": "prop"
																},
																"text": {
																	"H": "'Geri'",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_7"
															},
															"O": {
																"cType": "child",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"tt:text-body-1",
																			"te:font-weight-regular"
																		]
																	},
																	"class": "text-body-1 font-weight-regular"
																}
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"fontColor": "#000000",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_6"
											},
											"S": {
												"xs-xl": {
													"marginTop": "",
													"marginRight": "10px",
													"marginBottom": "",
													"marginLeft": "",
													"paddingTop": "",
													"paddingRight": "16px",
													"paddingBottom": "",
													"paddingLeft": "16px",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"fontColor": "#ffffff",
													"fontFamily": "Roboto",
													"fontSize": "16px",
													"fontStyle": "normal",
													"fontWeight": "400",
													"combinedFont": "Roboto-Regular",
													"ThemeFont": "Custom",
													"lineHeight": "20px",
													"backgroundColor": "#1976D2",
													"disabledBackgroundColor": "rgba(0,0,0,.12)",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "solid",
													"borderRightStyle": "solid",
													"borderBottomStyle": "solid",
													"borderLeftStyle": "solid",
													"borderTopLeftRadius": "4px",
													"borderTopRightRadius": "4px",
													"borderBottomLeftRadius": "4px",
													"borderBottomRightRadius": "4px",
													"borderTopWidth": "0px",
													"borderRightWidth": "0px",
													"borderBottomWidth": "0px",
													"borderLeftWidth": "0px",
													"defaultBorderColor": "",
													"sides": "Top,Right,Bottom,Left"
												}
											},
											"SC": {
												"fontColor": {
													"VIcon": "iconColor",
													"QLabel": "fontColor"
												},
												"fontStyle": {
													"QLabel": "fontStyle"
												},
												"fontSize": {
													"QLabel": "fontSize"
												},
												"fontFamily": {
													"QLabel": "fontFamily"
												},
												"fontWeight": {
													"QLabel": "fontWeight"
												},
												"combinedFont": {
													"QLabel": "combinedFont"
												},
												"lineHeight": {
													"QLabel": "lineHeight"
												},
												"bacgroundColor": {
													"VIcon": "backgroundColor"
												}
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"sp:mr-1"
														]
													},
													"class": "mr-1"
												}
											}
										},
										{
											"T": "VBtn",
											"P": {
												"ID": {
													"H": "btn_createOrder",
													"T": "prop",
													"HL": "QS"
												},
												"depressed": {
													"H": "true",
													"T": "prop"
												},
												"DiscardSettings": {
													"H": "true",
													"T": "prop"
												},
												"color": {
													"H": "'#2171DC'",
													"T": "prop"
												},
												"dark": {
													"H": "true",
													"T": "prop"
												},
												"height": {
													"H": "'40px'",
													"T": "prop",
													"HL": "QS"
												},
												"rounded": {
													"H": "true",
													"T": "prop"
												},
												"visible": {
													"H": "false",
													"T": "prop",
													"HL": "QS"
												}
											},
											"E": {
												"click": {
													"H": "debugger;\r\nlet valid = quick.Quick.validateAll(true, false, { skipChildrenIfInvisible: true });\r\nif (valid) {\r\n    let accountOrCardInfoStr = \"\";\r\n    let selectedPaymentType = \"\";\r\n    let debtorCreditor = quick.store.get('$vauto_debtorCreditor');\r\n    let isDebit = debtorCreditor == \"debit\";\r\n    let paymentOperationStr = isDebit ? \"tahsil\" : \"iade\";\r\n\r\n    if (components.vauto_paymentType.qValue == \"1\") {\r\n        //Nakit\r\n        selectedPaymentType = \"nakit olarak\";\r\n    } else if (components.vauto_paymentType.qValue == \"2\") {\r\n        //Kredi Kartı\r\n        accountOrCardInfoStr = components.vauto_accountList.qValue.cardNo + \" numaralı \";\r\n        selectedPaymentType = isDebit ? \"kredi kartından\" : \"kredi kartına\";\r\n    } else if (components.vauto_paymentType.qValue == \"3\") {\r\n        //Cari Hesap\r\n        accountOrCardInfoStr = components.vauto_accountList.qValue.number.branchCode + \"-\" + components.vauto_accountList.qValue.number.number + \" numaralı \";\r\n        selectedPaymentType = isDebit ? \"hesaptan\" : \"hesaba\";\r\n\r\n    } else if (components.vauto_paymentType.qValue == \"4\") {\r\n        //İmece Kart\r\n        selectedPaymentType = isDebit ? \"imece kartından\" : \"imece kartına\";\r\n    }\r\n\r\n    let text = components.txt_policyNo.qValue + \"/\" + components.txt_renewalNo.qValue + \" numaralı poliçe için \"\r\n        + accountOrCardInfoStr + selectedPaymentType + \" \" + components.txt_amount.qValue + \" \" + paymentOperationStr +\r\n        \" edilecektir. İşleme devam etmek istiyor musunuz?\";\r\n\r\n    (components.as_alert as any).setLabelText({ labelData: { name: 'lbl_700_1', text: text } });\r\n    components.as_alert.open();\r\n}\r\n",
													"P": "mouseEvent:unknown | undefined",
													"HL": "TS"
												}
											},
											"C": {
												"default": {
													"c": [
														{
															"T": "QLabel",
															"C": {},
															"E": {},
															"P": {
																"ID": {
																	"H": "txt_continue",
																	"T": "prop",
																	"HL": "QS"
																},
																"text": {
																	"H": "'Devam'",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_16"
															},
															"O": {
																"cType": "child",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"tt:text-body-1",
																			"te:font-weight-regular"
																		]
																	},
																	"class": "text-body-1 font-weight-regular"
																}
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"fontColor": "#000000",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_15"
											},
											"S": {
												"xs-xl": {
													"marginTop": "",
													"marginRight": "10px",
													"marginBottom": "",
													"marginLeft": "",
													"paddingTop": "",
													"paddingRight": "16px",
													"paddingBottom": "",
													"paddingLeft": "16px",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"fontColor": "#ffffff",
													"fontFamily": "Roboto",
													"fontSize": "16px",
													"fontStyle": "normal",
													"fontWeight": "400",
													"combinedFont": "Roboto-Regular",
													"ThemeFont": "Custom",
													"lineHeight": "20px",
													"backgroundColor": "#1976D2",
													"disabledBackgroundColor": "rgba(0,0,0,.12)",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "solid",
													"borderRightStyle": "solid",
													"borderBottomStyle": "solid",
													"borderLeftStyle": "solid",
													"borderTopLeftRadius": "4px",
													"borderTopRightRadius": "4px",
													"borderBottomLeftRadius": "4px",
													"borderBottomRightRadius": "4px",
													"borderTopWidth": "0px",
													"borderRightWidth": "0px",
													"borderBottomWidth": "0px",
													"borderLeftWidth": "0px",
													"defaultBorderColor": "",
													"sides": "Top,Right,Bottom,Left"
												}
											},
											"SC": {
												"fontColor": {
													"VIcon": "iconColor",
													"QLabel": "fontColor"
												},
												"fontStyle": {
													"QLabel": "fontStyle"
												},
												"fontSize": {
													"QLabel": "fontSize"
												},
												"fontFamily": {
													"QLabel": "fontFamily"
												},
												"fontWeight": {
													"QLabel": "fontWeight"
												},
												"combinedFont": {
													"QLabel": "combinedFont"
												},
												"lineHeight": {
													"QLabel": "lineHeight"
												},
												"bacgroundColor": {
													"VIcon": "backgroundColor"
												}
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"sp:mr-1"
														]
													},
													"class": "mr-1"
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"E": {},
							"P": {
								"ID": {
									"H": "EdtrComp_14",
									"T": "prop"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_14"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"d:d-flex",
											"sp:pr-3",
											"sp:pl-3",
											"sp:pb-3",
											"sp:pt-3",
											"j:justify-end"
										]
									},
									"class": "d-flex pr-3 pl-3 pb-3 pt-3 justify-end"
								}
							},
							"S": {
								"xs-xl": {
									"col": "",
									"flexDirection": "column",
									"alignItems": "",
									"justifyContent": "",
									"marginLeft": "",
									"marginRight": "",
									"marginBottom": "",
									"marginTop": "",
									"paddingTop": "12px",
									"paddingBottom": "12px",
									"paddingLeft": "12px",
									"paddingRight": "12px",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_2"
			},
			"O": {
				"cType": "slot"
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_loadingCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bankasASPayment/common/as_loadingCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_17"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bankasASPayment/common/as_alertCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "'error'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "'Tamam'",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "components.as_alertCustomComp.close();",
					"C": true,
					"HL": "TS"
				},
				"btn1ClickEvent": {
					"H": "components.as_alertCustomComp.close();",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_19",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_19"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_18"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alert",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "'/static/ui-bankasASPayment/common/as_alertCustomComp.qjson'",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "'info'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "'Onayla'",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_2": {
					"H": "'Vazgeç'",
					"T": "prop",
					"HL": "QS"
				},
				"doubleBtn": {
					"H": "true",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "components.as_alert.close();",
					"C": true,
					"HL": "TS"
				},
				"btn1ClickEvent": {
					"H": "let vauto_debtorCreditor = quick.store.get('$vauto_debtorCreditor'); // Borç veya alacak\r\nlet isDebit = vauto_debtorCreditor == \"debit\"; // Borç veya alacak\r\ncomponents.as_loadingCustomComp.open();\r\nif (isDebit) { //Borçluysa önce makePayment çağırılır.\r\n    quick.MM.trigger(\"makePayment\", [{ isCancel: false }]);\r\n} else { //Alacaklıysa önce createPaymentRecord çağırılır.\r\n    quick.MM.trigger(\"createPaymentRecord\", [{ isCancel: false }]);\r\n}\r\n\r\ncomponents.as_alert.close();",
					"C": true,
					"HL": "TS"
				},
				"btn2ClickEvent": {
					"H": "components.as_alert.close();",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_21",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_21"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_13"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		}
	],
	"cJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "╬false╩╩",
					"T": "prop"
				},
				"externalProps": {
					"H": "╬[]╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"externalEvents": {
					"H": "╬[]╠{}╠=╣name╩╠'setPaymentType'╩╩╠=╣params╩╠[]╠data╩╩╩╩╠{}╠=╣name╩╠'backButtonClick'╩╩╠=╣params╩╠[]╩╩╩╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"setItems": {
					"H": "var _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar paymentPlan = quick.store.get('$paymentPlan');\r\nvar policy = quick.store.get('$policyPayment');\r\nvar items = [];\r\npaymentPlan.amountText = quick.Quick.toMoney(Math.abs(paymentPlan.amount.amount.amount), 'tr-TR', { minimumFractionDigits: 2 })\r\n    + \" \" + paymentPlan.amount.amount.currencyCode.code;\r\npaymentPlan.amountTLText = quick.Quick.toMoney(Math.abs(paymentPlan.amount.amountTL.amount), 'tr-TR', { minimumFractionDigits: 2 })\r\n    + \" \" + paymentPlan.amount.amountTL.currencyCode.code;\r\npaymentPlan.id = 1;\r\npaymentPlan.installmentDateFormatted = (_a = paymentPlan.installmentDate) === null || _a === void 0 ? void 0 : _a.split('-').reverse().join('.');\r\nitems.push(paymentPlan);\r\ncomponents.dt_policyPaymentList.items = items;\r\ncomponents.txt_policyNo.qValue = policy.policyNumber;\r\ncomponents.txt_renewalNo.qValue = policy.renewalNumber;\r\ncomponents.txt_amount.qValue = paymentPlan.amountText;\r\nvar interestFreePeriodItems = [];\r\nif (policy.interestFreePeriods) {\r\n    for (var i in policy.interestFreePeriods) {\r\n        var interestFreePeriodItem = {\r\n            text: i,\r\n            value: i\r\n        };\r\n        interestFreePeriodItems.push(interestFreePeriodItem);\r\n    }\r\n}\r\ncomponents.vauto_interestFreePeriod.items = interestFreePeriodItems;\r\nquick.MM.trigger(\"setPaymentType\");\r\n",
					"C": true,
					"EV": true,
					"HL": "JS"
				},
				"setConsumerAndScreenInfo": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nquick.store.set('$customConsumerCode', 'TANE.BAHOME');\r\nquick.store.set('$customScreenName', 'TANE.BAHOME');\r\n",
					"C": true,
					"HL": "JS"
				},
				"setPaymentType": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar policy = quick.store.get('$policyPayment');\r\nvar debtorCreditor = quick.store.get('$vauto_debtorCreditor');\r\nvar paymentTypes = [];\r\npaymentTypes.push({ text: 'Nakit', value: 1 });\r\nif (debtorCreditor == \"debit\") {\r\n    paymentTypes.push({ text: 'Kredi Kartı', value: 2 });\r\n}\r\npaymentTypes.push({ text: 'Cari Hesap', value: 3 });\r\nif ((policy === null || policy === void 0 ? void 0 : policy.policyExtCode) >= 111 && (policy === null || policy === void 0 ? void 0 : policy.policyExtCode) <= 119 && debtorCreditor == \"debit\") {\r\n    paymentTypes.push({ text: 'İmece Kart', value: 4 });\r\n}\r\ncomponents.vauto_paymentType.items = paymentTypes;\r\n",
					"C": true,
					"HL": "JS"
				},
				"retrieveCreditCardList": {
					"H": "var _a, _b;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar isImeceCard;\r\ncomponents.vauto_accountList.label = \"Kredi Kartı\";\r\nvar requestData = {\r\n    //\"customerNo\": quick.store.get('$customerInfo').customerNumber, //(<any>quick.containerServices).getCustomerContext()?.customerNumber,\r\n    \"customerNo\": (_a = quick.containerServices.getCustomerContext()) === null || _a === void 0 ? void 0 : _a.customerNumber,\r\n    \"branchCode\": 0,\r\n    \"accountNo\": 0,\r\n    \"pageSize\": 0,\r\n    \"pageNumber\": 0,\r\n    \"transactionType\": isImeceCard ? \"I\" : \"S\"\r\n};\r\nquick.MM.trigger('setDatasConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/uiclient/retrieveCreditCardList',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n};\r\n(_b = quick.Request.async(serviceRequest)) === null || _b === void 0 ? void 0 : _b.then(function (resp) {\r\n    debugger;\r\n    var decimal;\r\n    var availableLimit;\r\n    var cardList = resp.data.cardInfo;\r\n    var tmpList = [];\r\n    quick.store.set(\"creditCardInfo\", resp.data);\r\n    for (var i = 0; i < cardList.length; i++) {\r\n        if (cardList[i].cardStatCode == \"N\" || cardList[i].cardStatCode == \"CR\" || cardList[i].cardStatCode == \"SG\") {\r\n            if (cardList[i].cardType != \"V\" && cardList[i].cardNo == cardList[i].mainCardNo) {\r\n                availableLimit = quick.Quick.toMoney(Number(cardList[i].availableLimit)); //'124.0';\r\n                if (availableLimit.split(',')[1]) { }\r\n                else {\r\n                    decimal = ',00';\r\n                    availableLimit = availableLimit + decimal;\r\n                }\r\n                var data = {\r\n                    text: cardList[i].cardNo + ' (' + availableLimit + ') ' + cardList[i].embossName,\r\n                    value: cardList[i]\r\n                };\r\n                tmpList.push(data);\r\n            }\r\n        }\r\n    }\r\n    components.vauto_accountList.items = tmpList;\r\n    ;\r\n    components.as_loadingCustomComp.close();\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    components.as_loadingCustomComp.close();\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
					"C": true,
					"HL": "JS"
				},
				"retrieveCustomerAccounts": {
					"H": "var _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\n//Tahsilat şekli Hesaptan seçildi\r\nvar requestData = {\r\n    \"customerNumber\": quick.containerServices.getCustomerContext().customerNumber,\r\n    \"accountType\": [\r\n        {\r\n            \"code\": \"DEMAND\"\r\n        }\r\n    ],\r\n    \"statusCode\": {\r\n        \"code\": \"OPEN\"\r\n    }\r\n};\r\nquick.MM.trigger('setDatasConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/uiclient/retrieveCustomerAccounts',\r\n    http: 'POST',\r\n    data: requestData,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'retrieveCustomerAccountsResponse',\r\n    blockRender: false,\r\n};\r\n(_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n    var _a, _b, _c, _d, _e;\r\n    quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n    var decimal;\r\n    var amountBalance;\r\n    var accountList = resp === null || resp === void 0 ? void 0 : resp.data.accountList.account;\r\n    var tmpList = [];\r\n    var overDraft = (_c = (_b = (_a = resp === null || resp === void 0 ? void 0 : resp.data) === null || _a === void 0 ? void 0 : _a.accountList) === null || _b === void 0 ? void 0 : _b.account[0]) === null || _c === void 0 ? void 0 : _c.overdraft;\r\n    if (overDraft == true) {\r\n        components.cbox_overdraft.visible = true;\r\n    }\r\n    else {\r\n        components.cbox_overdraft.visible = false;\r\n    }\r\n    for (var i = 0; i < accountList.length; i++) {\r\n        amountBalance = quick.Quick.toMoney(Number(accountList[i].balance)); //'124.0';\r\n        if (amountBalance.split(',')[1]) { }\r\n        else {\r\n            decimal = ',00';\r\n            amountBalance = amountBalance + decimal;\r\n        }\r\n        var data = {\r\n            text: ((_d = accountList[i].number) === null || _d === void 0 ? void 0 : _d.branchCode) + '-' + ((_e = accountList[i].number) === null || _e === void 0 ? void 0 : _e.number) + ' - Vadesiz TL - ' + amountBalance + ' TRY',\r\n            value: accountList[i]\r\n        };\r\n        tmpList.push(data);\r\n    }\r\n    components.vauto_accountList.items = tmpList;\r\n    components.as_loadingCustomComp.close();\r\n}).catch(function (err) {\r\n    var _a, _b, _c;\r\n    components.as_loadingCustomComp.close();\r\n    var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n    components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n    components.as_alertCustomComp.open();\r\n});\r\n",
					"C": true,
					"HL": "JS"
				},
				"makePayment": {
					"H": "var _a, _b, _c;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar paymentPlan = quick.store.get('$paymentPlan'); // Ödeme planı bilgileri\r\nvar policy = quick.store.get('$policyPayment'); // Poliçe bilgileri\r\nvar savePolicyInstallmentInfoResponse = quick.store.get(\"$savePolicyInstallmentInfoResponse\"); //savePolicyInstallmentInfoResponse\r\nvar vauto_debtorCreditor = quick.store.get('$vauto_debtorCreditor'); // Borç veya alacak\r\nvar isDebit = vauto_debtorCreditor == \"debit\"; // Borç veya alacak\r\nvar companyIbanNumber = quick.store.get('$paymentPlanListResponse').retrievePaymentPlanDTO.companyIbanNumber;\r\nvar createPaymentRecordResponse = (_a = quick.store.get('$createPaymentRecordResponse')) === null || _a === void 0 ? void 0 : _a.installmentResultList[0];\r\nquick.MM.trigger(\"setConsumerAndScreenInfo\");\r\nvar makePaymentRequest = {\r\n    \"paymentOperationType\": {\r\n        \"customerNumber\": (_b = quick.containerServices.getCustomerContext()) === null || _b === void 0 ? void 0 : _b.customerNumber,\r\n        \"firmType\": \"AS\",\r\n        \"installmentTypeCode\": isCancel ? \"CREDIT\" : \"2000097\",\r\n        \"insuranceType\": components.vauto_paymentType.qValue == 4 ? \"TARSIM\" : \"HOME\",\r\n        \"insuranceTypeName\": policy.policyType,\r\n        \"paymentOptionCode\": \"1\",\r\n        \"payableItem\": [\r\n            {\r\n                \"amount\": {\r\n                    \"amount\": Math.abs(paymentPlan.amount.amount.amount),\r\n                    \"currencyCode\": {\r\n                        \"code\": paymentPlan.amount.amount.currencyCode.code\r\n                    }\r\n                },\r\n                \"bankRefId\": savePolicyInstallmentInfoResponse.referenceId,\r\n                \"installmentId\": paymentPlan.installmentId,\r\n                \"installmentType\": isCancel ? \"CREDIT\" : isDebit ? \"DEBIT\" : \"CREDIT\"\r\n            }\r\n        ],\r\n        \"useOverdraft\": components.cbox_overdraft.qValue,\r\n        \"companyIbanNumber\": companyIbanNumber,\r\n        \"customerName\": policy.name,\r\n        \"cyprus\": policy.cyprus,\r\n        \"mandatory\": policy.mandatory,\r\n        \"interestFreePeriod\": components.vauto_interestFreePeriod.qValue,\r\n        \"paymentType\": quick.store.get(\"paymentType\"),\r\n        \"branchCode\": null,\r\n        \"accountInfo\": null,\r\n        \"installment\": null,\r\n        \"creditCardInfo\": null\r\n    }\r\n};\r\nif (quick.store.get(\"paymentType\") == \"cash\") {\r\n    makePaymentRequest.paymentOperationType.branchCode = (_c = quick.containerServices.getUserContext()) === null || _c === void 0 ? void 0 : _c.workstationBO.organizationUnitCode;\r\n}\r\nelse if (quick.store.get(\"paymentType\") == \"creditCard\") {\r\n    var creditCard = components.vauto_accountList.qValue;\r\n    makePaymentRequest.paymentOperationType.creditCardInfo = {\r\n        \"customerName\": quick.store.get(\"creditCardInfo\").customerName,\r\n        \"ccNumber\": creditCard.cardNo,\r\n        \"expires\": creditCard.expireDate.substring(2, 4) + \"/\" + creditCard.expireDate.substring(0, 2)\r\n    };\r\n    makePaymentRequest.paymentOperationType.installment = 1;\r\n}\r\nelse if (quick.store.get(\"paymentType\") == \"account\") {\r\n    makePaymentRequest.paymentOperationType.accountInfo = components.vauto_accountList.qValue.number;\r\n    makePaymentRequest.paymentOperationType.installment = 1;\r\n}\r\nfunction makePayment() {\r\n    var _a;\r\n    var serviceRequest = {\r\n        url: '/api/wrapperclient/makePayment',\r\n        http: 'POST',\r\n        headers: { \"userId\": quick.containerServices.getUserContext().userid },\r\n        data: makePaymentRequest,\r\n        onFail: 'empty',\r\n        onSuccess: 'empty',\r\n        responseField: 'empty',\r\n        blockRender: false,\r\n    };\r\n    (_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n        var _a, _b;\r\n        quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n        quick.store.set(\"$makePaymentResponse\", resp.data);\r\n        if (isDebit) {\r\n            quick.MM.trigger(\"createPaymentRecord\", [{ isCancel: false }]); // Borçluysa createPaymentRecord ile işleme devam edilir.\r\n        }\r\n        else {\r\n            // Alacaklıysa işlem tamamlanmış demektir, sonuç ekranına yönlendirilir.\r\n            quick.store.set('$eventSourceId', (_b = (_a = resp.data.paymentOperationType) === null || _a === void 0 ? void 0 : _a.receiptInfo) === null || _b === void 0 ? void 0 : _b.siid);\r\n            quick.Quick.go(\"/static/ui-bankasASPayment/paymentPages/as_paymentResultPage.qjson\");\r\n        }\r\n        components.as_loadingCustomComp.close();\r\n    }).catch(function (err) {\r\n        var _a, _b, _c;\r\n        components.as_loadingCustomComp.close();\r\n        if (!isDebit) { // Alacaklıysa createPaymentRecord iptal edilir.\r\n            quick.MM.trigger(\"createPaymentRecord\", [{ isCancel: true }]);\r\n        }\r\n        var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n        components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n        components.as_alertCustomComp.open();\r\n    });\r\n}\r\nfunction makeRefund() {\r\n    var _a;\r\n    var serviceRequest = {\r\n        url: '/api/wrapperclient/makeRefund',\r\n        http: 'POST',\r\n        headers: { \"userId\": quick.containerServices.getUserContext().userid },\r\n        data: makePaymentRequest,\r\n        onFail: 'empty',\r\n        onSuccess: 'empty',\r\n        responseField: 'empty',\r\n        blockRender: false,\r\n    };\r\n    (_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n        quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n        components.as_loadingCustomComp.close();\r\n    }).catch(function (err) {\r\n        var _a, _b, _c;\r\n        components.as_loadingCustomComp.close();\r\n        var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n        components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n        components.as_alertCustomComp.open();\r\n    });\r\n}\r\nif (isCancel) {\r\n    makeRefund();\r\n}\r\nelse {\r\n    makePayment();\r\n}\r\n",
					"C": true,
					"HL": "JS"
				},
				"createPaymentRecord": {
					"H": "var _a, _b, _c, _d;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar paymentPlan = quick.store.get('$paymentPlan'); // Ödeme planı bilgileri\r\nvar policy = quick.store.get('$policyPayment'); // Poliçe bilgileri\r\nvar savePolicyInstallmentInfoResponse = quick.store.get(\"$savePolicyInstallmentInfoResponse\"); //savePolicyInstallmentInfoResponse\r\nvar vauto_debtorCreditor = quick.store.get('$vauto_debtorCreditor'); // Borç veya alacak\r\nvar isDebit = vauto_debtorCreditor == \"debit\"; // Borç veya alacak\r\nvar companyIbanNumber = quick.store.get('$paymentPlanListResponse').retrievePaymentPlanDTO.companyIbanNumber;\r\nvar makePaymentResponse = (_a = quick.store.get('$makePaymentResponse')) === null || _a === void 0 ? void 0 : _a.paymentOperationType;\r\nvar createPaymentRecordResponse = (_b = quick.store.get('$createPaymentRecordResponse')) === null || _b === void 0 ? void 0 : _b.installmentResultList[0];\r\nquick.MM.trigger(\"setConsumerAndScreenInfo\");\r\nvar createPaymentRecordRequest = {\r\n    \"policyNumber\": {\r\n        \"policyNo\": policy.policyNumber,\r\n        \"renewalNo\": policy.renewalNumber\r\n    },\r\n    \"citizenId\": (_c = quick.containerServices.getCustomerContext()) === null || _c === void 0 ? void 0 : _c.customerCitizenId,\r\n    \"installmentInfoList\": [\r\n        {\r\n            \"accountNumber\": quick.store.get(\"paymentType\") == \"account\" ? components.vauto_accountList.qValue.number : null,\r\n            \"creditCardNumber\": quick.store.get(\"paymentType\") == \"creditCard\" ? components.vauto_accountList.qValue.cardNo : null,\r\n            \"amount\": {\r\n                \"amount\": {\r\n                    \"amount\": Math.abs(paymentPlan.amount.amount.amount),\r\n                    \"currencyCode\": {\r\n                        \"code\": paymentPlan.amount.amount.currencyCode.code\r\n                    }\r\n                },\r\n                \"amountTL\": {\r\n                    \"amount\": Math.abs(paymentPlan.amount.amountTL.amount),\r\n                    \"currencyCode\": {\r\n                        \"code\": paymentPlan.amount.amountTL.currencyCode.code\r\n                    }\r\n                }\r\n            },\r\n            \"bankRefId\": savePolicyInstallmentInfoResponse.referenceId,\r\n            \"installmentDate\": paymentPlan.installmentDate,\r\n            \"installmentId\": paymentPlan.installmentId,\r\n            \"installmentNumber\": paymentPlan.installmentNumber,\r\n            \"installmentStatus\": paymentPlan.installmentStatus,\r\n            \"installmentType\": paymentPlan.installmentType,\r\n            \"orderId\": isDebit ? (_d = makePaymentResponse === null || makePaymentResponse === void 0 ? void 0 : makePaymentResponse.installmentInfoList[0]) === null || _d === void 0 ? void 0 : _d.orderId : null,\r\n            \"paymentId\": isCancel ? createPaymentRecordResponse === null || createPaymentRecordResponse === void 0 ? void 0 : createPaymentRecordResponse.paymentId : null,\r\n            \"required\": policy.legacy,\r\n            \"transactionId\": isCancel ? createPaymentRecordResponse === null || createPaymentRecordResponse === void 0 ? void 0 : createPaymentRecordResponse.paymentId : null,\r\n            \"paymentType\": quick.store.get(\"paymentTypeEnum\"),\r\n            \"insuranceTypeName\": policy.policyType\r\n        }\r\n    ],\r\n    \"interestFreePeriod\": components.vauto_interestFreePeriod.qValue,\r\n    \"paymentType\": quick.store.get(\"paymentTypeEnum\")\r\n};\r\nfunction createPaymentRecord() {\r\n    var _a;\r\n    var serviceRequest = {\r\n        url: '/api/wrapperclient/createPaymentRecord',\r\n        http: 'POST',\r\n        data: createPaymentRecordRequest,\r\n        onFail: 'empty',\r\n        onSuccess: 'empty',\r\n        responseField: 'empty',\r\n        blockRender: false,\r\n    };\r\n    (_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n        var _a, _b, _c;\r\n        quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n        quick.store.set('$createPaymentRecordResponse', resp.data);\r\n        if (!isDebit) {\r\n            quick.MM.trigger(\"makePayment\", [{ isCancel: false }]);\r\n        }\r\n        else {\r\n            quick.store.set('$eventSourceId', (_c = (_b = (_a = quick.store.get(\"$makePaymentResponse\")) === null || _a === void 0 ? void 0 : _a.paymentOperationType) === null || _b === void 0 ? void 0 : _b.receiptInfo) === null || _c === void 0 ? void 0 : _c.siid);\r\n            quick.Quick.go(\"/static/ui-bankasASPayment/paymentPages/as_paymentResultPage.qjson\");\r\n        }\r\n        components.as_loadingCustomComp.close();\r\n    }).catch(function (err) {\r\n        var _a, _b, _c;\r\n        if (isDebit) {\r\n            quick.MM.trigger(\"makePayment\", [{ isCancel: true }]);\r\n        }\r\n        components.as_loadingCustomComp.close();\r\n        var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n        components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n        components.as_alertCustomComp.open();\r\n    });\r\n}\r\nfunction cancelPaymentRecord() {\r\n    var _a;\r\n    var serviceRequest = {\r\n        url: '/api/wrapperclient/cancelPaymentRecord',\r\n        http: 'POST',\r\n        data: createPaymentRecordRequest,\r\n        onFail: 'empty',\r\n        onSuccess: 'empty',\r\n        responseField: 'empty',\r\n        blockRender: false,\r\n    };\r\n    (_a = quick.Request.async(serviceRequest)) === null || _a === void 0 ? void 0 : _a.then(function (resp) {\r\n        quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n        components.as_loadingCustomComp.close();\r\n    }).catch(function (err) {\r\n        var _a, _b, _c;\r\n        components.as_loadingCustomComp.close();\r\n        var errorMessage = (_c = (_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage) !== null && _c !== void 0 ? _c : 'Bir hata oluştu.';\r\n        components.as_alertCustomComp.setLabelText({ labelData: { name: 'lbl_700_1', text: errorMessage } });\r\n        components.as_alertCustomComp.open();\r\n    });\r\n}\r\nif (isCancel) {\r\n    cancelPaymentRecord();\r\n}\r\nelse {\r\n    createPaymentRecord();\r\n}\r\n",
					"C": true,
					"HL": "JS"
				},
				"clearComponents": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.txt_policyNo.qValue = undefined;\r\ncomponents.txt_renewalNo.qValue = undefined;\r\ncomponents.txt_amount.qValue = undefined;\r\ncomponents.vauto_accountList.items = [];\r\ncomponents.vauto_interestFreePeriod.items = [];\r\ncomponents.cbox_overdraft.qValue = false;\r\ncomponents.dt_policyPaymentList.items = [];\r\ncomponents.vauto_paymentType.qValue = undefined;\r\ncomponents.btn_createOrder.visible = false;\r\n",
					"C": true,
					"HL": "JS"
				},
				"createABMRecord": {
					"H": "var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\nvar makePaymentResponse = quick.store.get(\"makePaymentResponse\");\r\nvar accountType;\r\nvar monetaryType = \"P\";\r\nfunction generateTOD() {\r\n    var now = new Date();\r\n    var dt = \"\" + now.getFullYear().toString().slice(-2) + (now.getMonth() + 1).toString().padStart(2, '0') + now.getDate().toString().padStart(2, '0') + now.getHours().toString().padStart(2, '0') + now.getMinutes().toString().padStart(2, '0') + now.getSeconds().toString().padStart(2, '0') + now.getMilliseconds().toString().padStart(3, '0');\r\n    return \"BA\" + dt.slice(0, -1);\r\n}\r\nvar generateDateNow = function () {\r\n    var d = new Date();\r\n    return d.getFullYear() + \"-\" + (d.getMonth() + 1).toString().padStart(2, '0') + \"-\" + d.getDate().toString().padStart(2, '0') + \" \" + d.getHours().toString().padStart(2, '0') + \":\" + d.getMinutes().toString().padStart(2, '0') + \":\" + d.getSeconds().toString().padStart(2, '0');\r\n};\r\nif (quick.store.get(\"paymentType\") == \"cash\") {\r\n    accountType = \"M\";\r\n    monetaryType = \"P\";\r\n}\r\nelse if (quick.store.get(\"paymentType\") == \"creditCard\") {\r\n    accountType = \"1\";\r\n}\r\nelse if (quick.store.get(\"paymentType\") == \"account\") {\r\n    accountType = \"6\";\r\n}\r\nvar request = {\r\n    \"tod\": generateTOD(),\r\n    \"part\": 0,\r\n    \"type\": \"A\",\r\n    \"groupType\": \"Z001\",\r\n    \"customerNumber\": (_a = quick.containerServices.getCustomerContext()) === null || _a === void 0 ? void 0 : _a.customerNumber,\r\n    \"accountType\": accountType,\r\n    \"onlineDate\": generateDateNow(),\r\n    \"tellerId\": (_c = (_b = quick.containerServices.getUserContext()) === null || _b === void 0 ? void 0 : _b.workstationBO) === null || _c === void 0 ? void 0 : _c.code,\r\n    \"sequenceNo\": (_d = makePaymentResponse === null || makePaymentResponse === void 0 ? void 0 : makePaymentResponse.imsBranchLegacyContextTypeDTO) === null || _d === void 0 ? void 0 : _d.sequenceNo,\r\n    \"employeeId\": (_e = quick.containerServices.getUserContext()) === null || _e === void 0 ? void 0 : _e.userid,\r\n    \"processingOrganizationUnit\": (_g = (_f = quick.containerServices.getUserContext()) === null || _f === void 0 ? void 0 : _f.workstationBO) === null || _g === void 0 ? void 0 : _g.organizationUnitCode,\r\n    \"channelCode\": \"branch\",\r\n    \"transactionCode\": \"ASSOR\",\r\n    \"isCancellation\": false,\r\n    \"pcuBytes\": \"A\",\r\n    \"amount\": (_j = (_h = makePaymentResponse === null || makePaymentResponse === void 0 ? void 0 : makePaymentResponse.paymentOperationType) === null || _h === void 0 ? void 0 : _h.installmentInfoList[0]) === null || _j === void 0 ? void 0 : _j.amount,\r\n    \"monetaryType\": monetaryType,\r\n    \"operationAddress\": (_k = quick.containerServices.getUserContext()) === null || _k === void 0 ? void 0 : _k.ip,\r\n    \"ofsaProductCode\": 410201,\r\n    \"currencySwiftCode\": \"TRY\",\r\n    \"abmDetails\": {\r\n        \"isVoucherPrintingNecessary\": \"1\",\r\n        \"isVoucherPrinted\": true\r\n    }\r\n};\r\nquick.MM.trigger('setConsumerAndScreenInfo');\r\nvar serviceRequest = {\r\n    url: '/api/abm/create',\r\n    http: 'POST',\r\n    data: request,\r\n    onFail: 'empty',\r\n    onSuccess: 'empty',\r\n    responseField: 'empty',\r\n    blockRender: false,\r\n};\r\n(_l = quick.Request.async(serviceRequest)) === null || _l === void 0 ? void 0 : _l.then(function (resp) {\r\n    quick.EM.trace(resp === null || resp === void 0 ? void 0 : resp.data);\r\n}).catch(function (err) {\r\n    var _a, _b;\r\n    quick.EM.trace((_b = (_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.responseMessage);\r\n});\r\n",
					"C": true,
					"HL": "JS"
				},
				"EndRender": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\nvar debtorCreditor = quick.store.get('$vauto_debtorCreditor');\r\nif (debtorCreditor == \"debit\") {\r\n    components.lbl_title.text = \"Anadolu Sigorta Tahsilat\";\r\n    components.vauto_paymentType.label = \"Tahsilat Tipi\";\r\n    components.txt_amount.label = \"Tahsil Edilecek Tutar\";\r\n    components.txt_continue.text = \"Tahsil Et\";\r\n}\r\nelse {\r\n    components.lbl_title.text = \"Anadolu Sigorta İade\";\r\n    components.vauto_paymentType.label = \"İade Tipi\";\r\n    components.txt_amount.label = \"İade Edilecek Tutar\";\r\n    components.txt_continue.text = \"İade Et\";\r\n}\r\n",
					"HL": "JS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pt-0",
							"sp:pl-0",
							"sp:pr-0",
							"sp:pb-0"
						]
					},
					"class": "pt-0 pl-0 pr-0 pb-0"
				},
				"compDomClasses": "newDropBorder"
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "VContainerComp",
					"T": "prop"
				},
				"class": {
					"H": "╬'container container--fluid'╩╩",
					"T": "class"
				},
				"visible": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"eager": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VRow",
							"P": {
								"ID": {
									"H": "EdtrComp_34",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VCard",
															"P": {
																"ID": {
																	"H": "EdtrComp_9",
																	"T": "prop"
																},
																"color": {
																	"H": "╬'primary'╩╩",
																	"T": "prop"
																},
																"visible": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"height": {
																	"H": "╬'50px'╩╩",
																	"T": "prop"
																},
																"flat": {
																	"H": "╬true╩╩",
																	"T": "prop"
																},
																"rounded": {
																	"H": "╬'b-0'╩╩",
																	"T": "prop"
																},
																"dark": {
																	"H": "╬true╩╩",
																	"T": "prop"
																}
															},
															"E": {},
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VRow",
																			"P": {
																				"ID": {
																					"H": "EdtrComp_10",
																					"T": "prop"
																				}
																			},
																			"E": {},
																			"C": {
																				"default": {
																					"c": [
																						{
																							"T": "VCol",
																							"C": {
																								"default": {
																									"c": [
																										{
																											"T": "QLabel",
																											"P": {
																												"ID": {
																													"H": "lbl_title",
																													"T": "prop"
																												},
																												"tagType": {
																													"H": "╬'span'╩╩",
																													"T": "prop"
																												},
																												"text": {
																													"H": "╬'Poliçe Tahsilat Bilgileri'╩╩",
																													"T": "prop",
																													"HL": "QS"
																												},
																												"visible": {
																													"H": "╬true╩╩",
																													"T": "prop"
																												},
																												"processHtml": {
																													"H": "╬false╩╩",
																													"T": "prop"
																												}
																											},
																											"E": {},
																											"C": {},
																											"_Editor": {
																												"eID": "EdtrComp_12"
																											},
																											"O": {
																												"cType": "slot",
																												"layout": {
																													"dOpt": {
																														"xs": [
																															"sp:ml-5",
																															"tt:text-h6"
																														]
																													},
																													"class": "ml-5 text-h6"
																												},
																												"compDomClasses": "q-label ml-5 text-h6 newDropBorder"
																											}
																										}
																									],
																									"cType": "slot"
																								}
																							},
																							"E": {},
																							"P": {
																								"ID": {
																									"H": "EdtrComp_11",
																									"T": "prop"
																								}
																							},
																							"_Editor": {
																								"eID": "EdtrComp_11"
																							},
																							"O": {
																								"cType": "slot",
																								"layout": {
																									"dOpt": {
																										"xs": [
																											"d:d-flex",
																											"sp:pt-3",
																											"sp:pl-3",
																											"sp:pr-3",
																											"sp:pb-3"
																										]
																									},
																									"class": "d-flex pt-3 pl-3 pr-3 pb-3"
																								},
																								"compDomClasses": "col d-flex pt-3 pl-3 pr-3 pb-3 pb-0 newDropBorder"
																							}
																						}
																					],
																					"cType": "slot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_10"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "row newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_9"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"sp:pt-0"
																		]
																	},
																	"class": "pt-0"
																},
																"compDomClasses": "v-card v-card--flat v-sheet theme--dark rounded-b-0 primary pt-0 newDropBorder"
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "EdtrComp_67",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_67"
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": []
													},
													"class": ""
												},
												"compDomClasses": "col pb-0 newDropBorder"
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_34"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": "row newDropBorder"
							}
						},
						{
							"T": "VCard",
							"P": {
								"ID": {
									"H": "EdtrComp_276",
									"T": "prop"
								},
								"color": {
									"H": "╬'white'╩╩",
									"T": "prop"
								},
								"visible": {
									"H": "╬true╩╩",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_8",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txt_policyNo",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "╬'Poliçe No'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"disabled": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"input": {
																					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ncomponents.dt_policyPaymentList.search = value;\r\n",
																					"P": "value:any",
																					"HL": "JS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_47"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pl-3",
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3"
																						]
																					},
																					"class": "pl-3 pt-3 pr-3 pb-3"
																				},
																				"compDomClasses": "v-input v-input--hide-details v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded pl-3 pt-3 pr-3 pb-3 pt-0 undefined newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_268",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_268"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex flex-column col-3"
																},
																"compDomClasses": "col d-flex flex-column col-3 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txt_renewalNo",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "╬'Yenileme No'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disabled": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"input": {
																					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ncomponents.dt_policyPaymentList.search = value;\r\n",
																					"P": "value:any",
																					"HL": "JS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_118"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pl-3",
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3"
																						]
																					},
																					"class": "pl-3 pt-3 pr-3 pb-3"
																				},
																				"compDomClasses": "v-input v-input--hide-details v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded pl-3 pt-3 pr-3 pb-3 pt-0 undefined newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_117",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_117"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex flex-column col-3"
																},
																"compDomClasses": "col d-flex flex-column col-3 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_8"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "VRowComp",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VDataTable",
																			"P": {
																				"ID": {
																					"H": "dt_policyPaymentList",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"footerProps": {
																					"H": "╬{}╠=╣showFirstLastPage╩╠true╩╩╠=╣firstIcon╩╠'mdi-arrow-collapse-left'╩╩╠=╣lastIcon╩╠'mdi-arrow-collapse-right'╩╩╠=╣prevIcon╩╠'mdi-minus'╩╩╠=╣nextIcon╩╠'mdi-plus'╩╩╩╩",
																					"T": "prop"
																				},
																				"headers": {
																					"H": "╬[]╠{}╠=╣text╩╠'Referans Numarası'╩╩╠=╣value╩╠'installmentId'╩╩╠=╣filterable╩╠true╩╩╩╠{}╠=╣text╩╠'Ödeme Tutarı'╩╩╠=╣value╩╠'amountText'╩╩╠=╣filterable╩╠true╩╩╩╠{}╠=╣text╩╠'Ödeme Tutarı TL'╩╩╠=╣value╩╠'amountTLText'╩╩╠=╣filterable╩╠true╩╩╩╠{}╠=╣text╩╠'Taksit Tarihi'╩╩╠=╣value╩╠'installmentDateFormatted'╩╩╠=╣filterable╩╠true╩╩╩╠{}╠=╣text╩╠'Ödeme Türü'╩╩╠=╣value╩╠'installmentType'╩╩╠=╣filterable╩╠true╩╩╩╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemsPerPage": {
																					"H": "╬10╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"mobileBreakpoint": {
																					"H": "╬600╩╩",
																					"T": "prop"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDefaultFooter": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disablePagination": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"noDataText": {
																					"H": "╬'Listelenecek Veri Yok.'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDefaultHeader": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"fixedHeader": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disableSort": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dark": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemKey": {
																					"H": "╬'id'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"disableFiltering": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"items": {
																					"H": "╬[]╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {
																				"item.selected": {
																					"c": [
																						{
																							"T": "VCheckbox",
																							"P": {
																								"ID": {
																									"H": "EdtrComp_46",
																									"T": "prop"
																								},
																								"color": {
																									"H": "╬'primary'╩╩",
																									"T": "prop"
																								},
																								"hideDetails": {
																									"H": "╬false╩╩",
																									"T": "prop"
																								},
																								"label": {
																									"H": "╬''╩╩",
																									"T": "prop",
																									"HL": "QS"
																								},
																								"visible": {
																									"H": "╬true╩╩",
																									"T": "prop"
																								}
																							},
																							"E": {},
																							"C": {},
																							"_Editor": {
																								"eID": "EdtrComp_46"
																							},
																							"O": {
																								"cType": "slot"
																							}
																						}
																					],
																					"cType": "scopedSlot"
																				}
																			},
																			"_Editor": {
																				"eID": "EdtrComp_25"
																			},
																			"S": {
																				"xs-xl": {
																					"marginLeft": "",
																					"marginRight": "",
																					"marginBottom": "",
																					"marginTop": "",
																					"paddingTop": "",
																					"paddingBottom": "",
																					"paddingLeft": "",
																					"paddingRight": "",
																					"width": "",
																					"height": "",
																					"maxWidth": "",
																					"maxHeight": "",
																					"minWidth": "",
																					"minHeight": "",
																					"unlink": "false",
																					"unlinkMax": "false",
																					"unlinkMin": "false",
																					"isSizeCollapsed": "false",
																					"dense": "",
																					"headerFontColor": "#686868",
																					"headerFontFamily": "Roboto",
																					"headerFontSize": "12px",
																					"headerFontStyle": "normal",
																					"headerFontWeight": "400",
																					"headerCombinedFont": "Roboto-Regular",
																					"headerThemeFont": "Custom",
																					"footerText": "#686868",
																					"footerFontFamily": "Roboto",
																					"footerFontSize": "12px",
																					"footerFontStyle": "normal",
																					"footerFontWeight": "400",
																					"footerCombinedFont": "Roboto-Regular",
																					"footerThemeFont": "Custom",
																					"textColor": "#010101",
																					"itemFontFamily": "Roboto",
																					"itemFontSize": "14px",
																					"itemFontStyle": "normal",
																					"itemFontWeight": "400",
																					"itemsCombinedFont": "Roboto-Regular",
																					"itemsThemeFont": "Custom",
																					"backgroundColor": "#ffffff",
																					"hoverColor": "#ffffff",
																					"footerColor": "#FFFFFF",
																					"headerColor": "#FFFFFF",
																					"selectedBackground": "#FFFFFF",
																					"expandedContent": "#010101",
																					"lineColor": "#0000001f",
																					"lineSize": "1",
																					"boxShadow": "",
																					"boxSizing": "",
																					"borderTopStyle": "solid",
																					"borderRightStyle": "solid",
																					"borderBottomStyle": "solid",
																					"borderLeftStyle": "solid",
																					"borderTopLeftRadius": "4px",
																					"borderTopRightRadius": "4px",
																					"borderBottomLeftRadius": "4px",
																					"borderBottomRightRadius": "4px",
																					"borderTopWidth": "1px",
																					"borderRightWidth": "1px",
																					"borderBottomWidth": "1px",
																					"borderLeftWidth": "1px",
																					"defaultBorderColor": "#0000001f",
																					"sides": "Top,Right,Bottom,Left"
																				}
																			},
																			"O": {
																				"cType": "scopedSlot",
																				"compDomClasses": "v-data-table v-data-table--dense v-data-table--fixed-header v-data-table--has-bottom theme--light newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "VColComp",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_3"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": []
																	},
																	"class": ""
																},
																"compDomClasses": "col pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "#ffffff",
																	"boxShadow": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_4"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_120",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_paymentType",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"eager": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "╬'text'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "╬'value'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"attach": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "╬'Tahsilat Tipi'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"change": {
																					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ndebugger;\r\ncomponents.as_loadingCustomComp.open();\r\ncomponents.row_accountRow.visible = true;\r\ncomponents.cbox_overdraft.visible = false;\r\ncomponents.vauto_interestFreePeriod.visible = false;\r\ncomponents.btn_createOrder.visible = true;\r\nif (components.vauto_paymentType.qValue == \"1\") {\r\n    //Nakit\r\n    components.row_accountRow.visible = false;\r\n    quick.store.set(\"paymentType\", \"cash\");\r\n    quick.store.set(\"paymentTypeEnum\", \"CASH\");\r\n    components.as_loadingCustomComp.close();\r\n}\r\nelse if (components.vauto_paymentType.qValue == \"2\") {\r\n    //Kredi Kartı\r\n    quick.MM.trigger(\"retrieveCreditCardList\", [{ isImeceCard: false }]);\r\n    quick.store.set(\"paymentType\", \"creditCard\");\r\n    quick.store.set(\"paymentTypeEnum\", \"CREDIT_CARD\");\r\n}\r\nelse if (components.vauto_paymentType.qValue == \"3\") {\r\n    //Cari Hesap\r\n    quick.MM.trigger(\"retrieveCustomerAccounts\");\r\n    components.vauto_accountList.label = \"Hesap Numarası\";\r\n    quick.store.set(\"paymentType\", \"account\");\r\n    quick.store.set(\"paymentTypeEnum\", \"ACCOUNT\");\r\n}\r\nelse if (components.vauto_paymentType.qValue == \"4\") {\r\n    //İmece Kart\r\n    quick.MM.trigger(\"retrieveCreditCardList\", [{ isImeceCard: true }]);\r\n    components.vauto_interestFreePeriod.visible = true;\r\n    quick.store.set(\"paymentType\", \"creditCard\");\r\n    quick.store.set(\"paymentTypeEnum\", \"CREDIT_CARD\");\r\n}\r\n",
																					"HL": "JS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_72"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pt-3",
																							"sp:pl-3",
																							"sp:pb-3",
																							"sp:pr-3"
																						]
																					},
																					"class": "pt-3 pl-3 pb-3 pr-3"
																				},
																				"compDomClasses": "v-input v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete pt-3 pl-3 pb-3 pr-3 undefined newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_123",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_123"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-6"
																		]
																	},
																	"class": "d-flex flex-column col-6"
																},
																"compDomClasses": "col d-flex flex-column col-6 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_120"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "row_accountRow",
													"T": "prop",
													"HL": "QS"
												},
												"visible": {
													"H": "╬false╩╩",
													"T": "prop",
													"HL": "QS"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_accountList",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"eager": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "╬'text'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "╬'value'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"attach": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "╬'Hesap Numarası'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_24"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3",
																							"sp:pl-3"
																						]
																					},
																					"class": "pt-3 pr-3 pb-3 pl-3"
																				},
																				"compDomClasses": "v-input v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete pt-3 pr-3 pb-3 pl-3 undefined newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_23",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_23"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-6"
																		]
																	},
																	"class": "d-flex flex-column col-6"
																},
																"compDomClasses": "col d-flex flex-column col-6 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														},
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VCheckbox",
																			"P": {
																				"ID": {
																					"H": "cbox_overdraft",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"color": {
																					"H": "╬'primary'╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"label": {
																					"H": "╬'Ek Hesap Kullanılsın'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_43"
																			},
																			"O": {
																				"cType": "slot",
																				"compDomClasses": "v-input theme--light v-input--selection-controls v-input--checkbox undefined mt-1 newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_61",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_61"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"a:align-center",
																			"j:justify-center",
																			"c:col-3"
																		]
																	},
																	"class": "d-flex align-center justify-center col-3"
																},
																"compDomClasses": "col d-flex align-center justify-center col-3 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "#ffffff",
																	"boxShadow": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_20"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_42",
													"T": "prop"
												},
												"visible": {
													"H": "╬false╩╩",
													"T": "prop",
													"HL": "QS"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VAutocomplete",
																			"P": {
																				"ID": {
																					"H": "vauto_interestFreePeriod",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"eager": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"hideDetails": {
																					"H": "╬false╩╩",
																					"T": "prop"
																				},
																				"itemText": {
																					"H": "╬'text'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"itemValue": {
																					"H": "╬'value'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬false╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"attach": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"dense": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"height": {
																					"H": "╬'40px'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"outlined": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "╬'Faizsiz Dönem Vadesi'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rules": {
																					"H": "╬[]╠()╣.╣.╣Quick╩╠validation╩╩╠required╩╩╠'İmece kart ile yapılan ödemelerde faizsiz dönem seçilmesi zorunludur.'╩╩╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_45"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3",
																							"sp:pl-3"
																						]
																					},
																					"class": "pt-3 pr-3 pb-3 pl-3"
																				},
																				"compDomClasses": "v-input v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded v-select v-autocomplete pt-3 pr-3 pb-3 pl-3 undefined newDropBorder"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_44",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_44"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-6"
																		]
																	},
																	"class": "d-flex flex-column col-6"
																},
																"compDomClasses": "col d-flex flex-column col-6 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_42"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										},
										{
											"T": "VRow",
											"P": {
												"ID": {
													"H": "EdtrComp_73",
													"T": "prop"
												}
											},
											"E": {},
											"C": {
												"default": {
													"c": [
														{
															"T": "VCol",
															"C": {
																"default": {
																	"c": [
																		{
																			"T": "VTextField",
																			"P": {
																				"ID": {
																					"H": "txt_amount",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"hideDetails": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"label": {
																					"H": "╬'Tahsil Edilecek Tutar'╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"visible": {
																					"H": "╬true╩╩",
																					"T": "prop"
																				},
																				"disabled": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				},
																				"rounded": {
																					"H": "╬true╩╩",
																					"T": "prop",
																					"HL": "QS"
																				}
																			},
																			"E": {
																				"input": {
																					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ncomponents.dt_policyPaymentList.search = value;\r\n",
																					"P": "value:any",
																					"HL": "JS"
																				}
																			},
																			"C": {},
																			"_Editor": {
																				"eID": "EdtrComp_130"
																			},
																			"O": {
																				"cType": "slot",
																				"layout": {
																					"dOpt": {
																						"xs": [
																							"sp:pl-3",
																							"sp:pt-3",
																							"sp:pr-3",
																							"sp:pb-3"
																						]
																					},
																					"class": "pl-3 pt-3 pr-3 pb-3"
																				},
																				"compDomClasses": "v-input v-input--hide-details v-input--is-disabled v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined v-text-field--rounded pl-3 pt-3 pr-3 pb-3 pt-0 undefined"
																			}
																		}
																	],
																	"cType": "slot"
																}
															},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_76",
																	"T": "prop"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_76"
															},
															"O": {
																"cType": "slot",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"d:d-flex",
																			"fd:flex-column",
																			"c:col-6"
																		]
																	},
																	"class": "d-flex flex-column col-6"
																},
																"compDomClasses": "col d-flex flex-column col-6 pb-0 newDropBorder"
															},
															"S": {
																"xs-xl": {
																	"col": "",
																	"flexDirection": "column",
																	"alignItems": "",
																	"justifyContent": "",
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "12px",
																	"paddingBottom": "12px",
																	"paddingLeft": "12px",
																	"paddingRight": "12px",
																	"backgroundColor": "",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "",
																	"borderRightStyle": "",
																	"borderBottomStyle": "",
																	"borderLeftStyle": "",
																	"borderTopLeftRadius": "",
																	"borderTopRightRadius": "",
																	"borderBottomLeftRadius": "",
																	"borderBottomRightRadius": "",
																	"borderTopWidth": "",
																	"borderRightWidth": "",
																	"borderBottomWidth": "",
																	"borderLeftWidth": "",
																	"defaultBorderColor": "",
																	"sides": ""
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_73"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "row newDropBorder"
											},
											"S": {
												"xs-xl": {
													"marginLeft": "0px",
													"marginRight": "0px",
													"marginBottom": "0px",
													"marginTop": "0px",
													"paddingTop": "",
													"paddingBottom": "",
													"paddingLeft": "",
													"paddingRight": "",
													"width": "",
													"height": "",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_276"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": "v-card v-sheet theme--light white newDropBorder"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot",
				"layout": {
					"dOpt": {
						"xs": [
							"sp:pl-0",
							"sp:pt-0",
							"sp:pr-0",
							"sp:pb-0",
							"sp:mt-0",
							"sp:ml-0",
							"sp:mr-0",
							"sp:mb-0"
						]
					},
					"class": "pl-0 pt-0 pr-0 pb-0 mt-0 ml-0 mr-0 mb-0"
				},
				"compDomClasses": "container container--fluid pl-0 pt-0 pr-0 pb-0 mt-0 ml-0 mr-0 mb-0 newDropBorder"
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "VRow",
			"P": {
				"ID": {
					"H": "EdtrComp_2",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VCol",
							"C": {
								"default": {
									"c": [
										{
											"T": "VBtn",
											"P": {
												"ID": {
													"H": "EdtrComp_6",
													"T": "prop"
												},
												"depressed": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"DiscardSettings": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"color": {
													"H": "╬'#2171DC'╩╩",
													"T": "prop"
												},
												"dark": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"height": {
													"H": "╬'40px'╩╩",
													"T": "prop",
													"HL": "QS"
												},
												"rounded": {
													"H": "╬true╩╩",
													"T": "prop"
												}
											},
											"E": {
												"click": {
													"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.MM.trigger(\"clearComponents\");\r\nquick.parent.events.backButtonClick();\r\n",
													"P": "mouseEvent:unknown | undefined",
													"HL": "JS"
												}
											},
											"C": {
												"default": {
													"c": [
														{
															"T": "QLabel",
															"C": {},
															"E": {},
															"P": {
																"ID": {
																	"H": "EdtrComp_7",
																	"T": "prop"
																},
																"text": {
																	"H": "╬'Geri'╩╩",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_7"
															},
															"O": {
																"cType": "child",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"tt:text-body-1",
																			"te:font-weight-regular"
																		]
																	},
																	"class": "text-body-1 font-weight-regular"
																},
																"compDomClasses": "q-label  text-body-1 font-weight-regular"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"fontColor": "#000000",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_6"
											},
											"S": {
												"xs-xl": {
													"marginTop": "",
													"marginRight": "10px",
													"marginBottom": "",
													"marginLeft": "",
													"paddingTop": "",
													"paddingRight": "16px",
													"paddingBottom": "",
													"paddingLeft": "16px",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"fontColor": "#ffffff",
													"fontFamily": "Roboto",
													"fontSize": "16px",
													"fontStyle": "normal",
													"fontWeight": "400",
													"combinedFont": "Roboto-Regular",
													"ThemeFont": "Custom",
													"lineHeight": "20px",
													"backgroundColor": "#1976D2",
													"disabledBackgroundColor": "rgba(0,0,0,.12)",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "solid",
													"borderRightStyle": "solid",
													"borderBottomStyle": "solid",
													"borderLeftStyle": "solid",
													"borderTopLeftRadius": "4px",
													"borderTopRightRadius": "4px",
													"borderBottomLeftRadius": "4px",
													"borderBottomRightRadius": "4px",
													"borderTopWidth": "0px",
													"borderRightWidth": "0px",
													"borderBottomWidth": "0px",
													"borderLeftWidth": "0px",
													"defaultBorderColor": "",
													"sides": "Top,Right,Bottom,Left"
												}
											},
											"SC": {
												"fontColor": {
													"VIcon": "iconColor",
													"QLabel": "fontColor"
												},
												"fontStyle": {
													"QLabel": "fontStyle"
												},
												"fontSize": {
													"QLabel": "fontSize"
												},
												"fontFamily": {
													"QLabel": "fontFamily"
												},
												"fontWeight": {
													"QLabel": "fontWeight"
												},
												"combinedFont": {
													"QLabel": "combinedFont"
												},
												"lineHeight": {
													"QLabel": "lineHeight"
												},
												"bacgroundColor": {
													"VIcon": "backgroundColor"
												}
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"sp:mr-1"
														]
													},
													"class": "mr-1"
												},
												"compDomClasses": "v-btn v-btn--depressed v-btn--rounded theme--dark v-size--default mr-1"
											}
										},
										{
											"T": "VBtn",
											"P": {
												"ID": {
													"H": "btn_createOrder",
													"T": "prop",
													"HL": "QS"
												},
												"depressed": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"DiscardSettings": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"color": {
													"H": "╬'#2171DC'╩╩",
													"T": "prop"
												},
												"dark": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"height": {
													"H": "╬'40px'╩╩",
													"T": "prop",
													"HL": "QS"
												},
												"rounded": {
													"H": "╬true╩╩",
													"T": "prop"
												},
												"visible": {
													"H": "╬false╩╩",
													"T": "prop",
													"HL": "QS"
												}
											},
											"E": {
												"click": {
													"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ndebugger;\r\nvar valid = quick.Quick.validateAll(true, false, { skipChildrenIfInvisible: true });\r\nif (valid) {\r\n    var accountOrCardInfoStr = \"\";\r\n    var selectedPaymentType = \"\";\r\n    var debtorCreditor = quick.store.get('$vauto_debtorCreditor');\r\n    var isDebit = debtorCreditor == \"debit\";\r\n    var paymentOperationStr = isDebit ? \"tahsil\" : \"iade\";\r\n    if (components.vauto_paymentType.qValue == \"1\") {\r\n        //Nakit\r\n        selectedPaymentType = \"nakit olarak\";\r\n    }\r\n    else if (components.vauto_paymentType.qValue == \"2\") {\r\n        //Kredi Kartı\r\n        accountOrCardInfoStr = components.vauto_accountList.qValue.cardNo + \" numaralı \";\r\n        selectedPaymentType = isDebit ? \"kredi kartından\" : \"kredi kartına\";\r\n    }\r\n    else if (components.vauto_paymentType.qValue == \"3\") {\r\n        //Cari Hesap\r\n        accountOrCardInfoStr = components.vauto_accountList.qValue.number.branchCode + \"-\" + components.vauto_accountList.qValue.number.number + \" numaralı \";\r\n        selectedPaymentType = isDebit ? \"hesaptan\" : \"hesaba\";\r\n    }\r\n    else if (components.vauto_paymentType.qValue == \"4\") {\r\n        //İmece Kart\r\n        selectedPaymentType = isDebit ? \"imece kartından\" : \"imece kartına\";\r\n    }\r\n    var text = components.txt_policyNo.qValue + \"/\" + components.txt_renewalNo.qValue + \" numaralı poliçe için \"\r\n        + accountOrCardInfoStr + selectedPaymentType + \" \" + components.txt_amount.qValue + \" \" + paymentOperationStr +\r\n        \" edilecektir. İşleme devam etmek istiyor musunuz?\";\r\n    components.as_alert.setLabelText({ labelData: { name: 'lbl_700_1', text: text } });\r\n    components.as_alert.open();\r\n}\r\n",
													"P": "mouseEvent:unknown | undefined",
													"HL": "JS"
												}
											},
											"C": {
												"default": {
													"c": [
														{
															"T": "QLabel",
															"C": {},
															"E": {},
															"P": {
																"ID": {
																	"H": "txt_continue",
																	"T": "prop",
																	"HL": "QS"
																},
																"text": {
																	"H": "╬'Devam'╩╩",
																	"T": "prop",
																	"HL": "QS"
																}
															},
															"_Editor": {
																"eID": "EdtrComp_16"
															},
															"O": {
																"cType": "child",
																"layout": {
																	"dOpt": {
																		"xs": [
																			"tt:text-body-1",
																			"te:font-weight-regular"
																		]
																	},
																	"class": "text-body-1 font-weight-regular"
																},
																"compDomClasses": "q-label  text-body-1 font-weight-regular"
															},
															"S": {
																"xs-xl": {
																	"marginTop": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginLeft": "",
																	"paddingTop": "",
																	"paddingRight": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"fontColor": "#000000",
																	"fontFamily": "Roboto",
																	"fontSize": "16px",
																	"fontStyle": "normal",
																	"fontWeight": "400",
																	"combinedFont": "Roboto-Regular",
																	"ThemeFont": "Custom",
																	"lineHeight": "20px"
																}
															}
														}
													],
													"cType": "slot"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_15"
											},
											"S": {
												"xs-xl": {
													"marginTop": "",
													"marginRight": "10px",
													"marginBottom": "",
													"marginLeft": "",
													"paddingTop": "",
													"paddingRight": "16px",
													"paddingBottom": "",
													"paddingLeft": "16px",
													"width": "",
													"height": "",
													"maxWidth": "",
													"maxHeight": "",
													"minWidth": "",
													"minHeight": "",
													"unlink": "false",
													"unlinkMax": "false",
													"unlinkMin": "false",
													"isSizeCollapsed": "false",
													"fontColor": "#ffffff",
													"fontFamily": "Roboto",
													"fontSize": "16px",
													"fontStyle": "normal",
													"fontWeight": "400",
													"combinedFont": "Roboto-Regular",
													"ThemeFont": "Custom",
													"lineHeight": "20px",
													"backgroundColor": "#1976D2",
													"disabledBackgroundColor": "rgba(0,0,0,.12)",
													"boxShadow": "",
													"boxSizing": "",
													"borderTopStyle": "solid",
													"borderRightStyle": "solid",
													"borderBottomStyle": "solid",
													"borderLeftStyle": "solid",
													"borderTopLeftRadius": "4px",
													"borderTopRightRadius": "4px",
													"borderBottomLeftRadius": "4px",
													"borderBottomRightRadius": "4px",
													"borderTopWidth": "0px",
													"borderRightWidth": "0px",
													"borderBottomWidth": "0px",
													"borderLeftWidth": "0px",
													"defaultBorderColor": "",
													"sides": "Top,Right,Bottom,Left"
												}
											},
											"SC": {
												"fontColor": {
													"VIcon": "iconColor",
													"QLabel": "fontColor"
												},
												"fontStyle": {
													"QLabel": "fontStyle"
												},
												"fontSize": {
													"QLabel": "fontSize"
												},
												"fontFamily": {
													"QLabel": "fontFamily"
												},
												"fontWeight": {
													"QLabel": "fontWeight"
												},
												"combinedFont": {
													"QLabel": "combinedFont"
												},
												"lineHeight": {
													"QLabel": "lineHeight"
												},
												"bacgroundColor": {
													"VIcon": "backgroundColor"
												}
											},
											"O": {
												"cType": "slot",
												"layout": {
													"dOpt": {
														"xs": [
															"sp:mr-1"
														]
													},
													"class": "mr-1"
												},
												"compDomClasses": "v-btn v-btn--depressed v-btn--rounded theme--dark v-size--default mr-1"
											}
										}
									],
									"cType": "slot"
								}
							},
							"E": {},
							"P": {
								"ID": {
									"H": "EdtrComp_14",
									"T": "prop"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_14"
							},
							"O": {
								"cType": "slot",
								"layout": {
									"dOpt": {
										"xs": [
											"d:d-flex",
											"sp:pr-3",
											"sp:pl-3",
											"sp:pb-3",
											"sp:pt-3",
											"j:justify-end"
										]
									},
									"class": "d-flex pr-3 pl-3 pb-3 pt-3 justify-end"
								},
								"compDomClasses": "col d-flex pr-3 pl-3 pb-3 pt-3 justify-end pb-0"
							},
							"S": {
								"xs-xl": {
									"col": "",
									"flexDirection": "column",
									"alignItems": "",
									"justifyContent": "",
									"marginLeft": "",
									"marginRight": "",
									"marginBottom": "",
									"marginTop": "",
									"paddingTop": "12px",
									"paddingBottom": "12px",
									"paddingLeft": "12px",
									"paddingRight": "12px",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_2"
			},
			"O": {
				"cType": "slot",
				"compDomClasses": "row"
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_loadingCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bankasASPayment/common/as_loadingCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_17"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": ""
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alertCustomComp",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bankasASPayment/common/as_alertCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "╬'error'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "╬'Tamam'╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alertCustomComp.close();\r\n",
					"C": true,
					"HL": "JS"
				},
				"btn1ClickEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alertCustomComp.close();\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_19",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_19"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_18"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": ""
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "as_alert",
					"T": "prop",
					"HL": "QS"
				},
				"QJsonPath": {
					"H": "╬'/static/ui-bankasASPayment/common/as_alertCustomComp.qjson'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"alertType": {
					"H": "╬'info'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1_visible": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_700_1": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_1": {
					"H": "╬'Onayla'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"lbl_btn_2": {
					"H": "╬'Vazgeç'╩╩",
					"T": "prop",
					"HL": "QS"
				},
				"doubleBtn": {
					"H": "╬true╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"clickOutsideEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alert.close();\r\n",
					"C": true,
					"HL": "JS"
				},
				"btn1ClickEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\nvar vauto_debtorCreditor = quick.store.get('$vauto_debtorCreditor'); // Borç veya alacak\r\nvar isDebit = vauto_debtorCreditor == \"debit\"; // Borç veya alacak\r\ncomponents.as_loadingCustomComp.open();\r\nif (isDebit) { //Borçluysa önce makePayment çağırılır.\r\n    quick.MM.trigger(\"makePayment\", [{ isCancel: false }]);\r\n}\r\nelse { //Alacaklıysa önce createPaymentRecord çağırılır.\r\n    quick.MM.trigger(\"createPaymentRecord\", [{ isCancel: false }]);\r\n}\r\ncomponents.as_alert.close();\r\n",
					"C": true,
					"HL": "JS"
				},
				"btn2ClickEvent": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n;\r\ncomponents.as_alert.close();\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_21",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_21"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_13"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": ""
			}
		}
	],
	"lrids": {},
	"clrids": {},
	"opt": {}
};
export default pjson